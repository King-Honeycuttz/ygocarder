{"version":3,"sources":["model/canvas.ts","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/condenser.ts","util/index.tsx","component/loading/index.tsx","component/card-picture/index.tsx","component/link-marker/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/style-picker/index.tsx","page/input-panel/input-train/index.tsx","page/input-panel/index.tsx","page/app-header/index.tsx","const/size.ts","const/position.ts","draw/text.ts","draw/util.ts","draw/predefine.ts","draw/type-ability.ts","draw/image.ts","service/master-seri.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["CanvasConst","defaultTextStyle","fillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","defaultCard","frame","foil","name","nameStyleType","nameStyle","attribute","subFamily","star","picture","pictureCrop","x","y","width","height","unit","aspect","linkMap","isPendulum","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","effect","setId","atk","def","passcode","sticker","isFirstEdition","creator","frameType","labelColor","labelBackgroundColor","iconList","foilStyleMap","gold","platinum","foilList","color","textStyle","checkXyz","card","checkLink","checkMonster","getCardFrame","find","entry","toLowerCase","JSONCrush","e","n","r","o","includes","String","fromCharCode","push","t","unshift","replace","JSONCrushSwap","length","i","l","f","h","substr","a","charCodeAt","g","indexOf","d","encodeURI","encodeURIComponent","split","join","JSONUncrush","substring","pop","RegExp","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","reverseSearch","finish","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","cardFieldShortenMap","_newKey","cardDataCondenser","shortenMap","crush","condensedCard","Object","keys","forEach","cardKey","cardValue","Array","isArray","newKey","curshedCard","JSON","stringify","reverseCardDataCondenser","normalizedCondensedCard","parse","decodeURIComponent","fullCard","fullKey","shortendValue","shortendKey","rebuildCardData","isCondensed","migrateCardData","migratedCard","clone","undefined","version","randomCharacter","charSet","result","charactersLength","charAt","floor","random","randomSetID","randomPassword","splitEffect","isNormal","effectBody","effectMaterial","materialRegex","materialReplacement","exec","material","effectFlavorCondition","flavorConditionRegex","flavorCondition","body","quoteConvert","text","normalizedString","insertUrlParam","key","value","window","history","pushState","searchParams","URLSearchParams","location","search","set","newurl","protocol","host","pathname","toString","path","Loading","FullView","className","size","ImageCropper","React","forwardRef","forwardedRef","noRedrawNumber","defaultExternalSource","previewCanvasRef","children","ratio","defaultCropInfo","onSourceChange","onImageChange","onTainted","useState","crossorigin","setCrossOrigin","sourceType","setSourceType","internalSource","setInternalSource","isLoading","setLoading","externalSource","setExternalSource","imgRef","useRef","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","current","useEffect","image","canvas","ctx","getContext","scaleX","naturalWidth","scaleY","naturalHeight","pixelRatio","devicePixelRatio","boundingWidth","ceil","getBoundingClientRect","boundingHeight","setTransform","imageSmoothingQuality","drawImage","useImperativeHandle","forceExternalSource","source","cropInfo","Group","onChange","target","Button","addonBefore","placeholder","maxLength","type","accept","files","reader","FileReader","addEventListener","readAsDataURL","disabled","onClick","toBlob","blob","previewUrl","URL","createObjectURL","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","style","src","onImageLoaded","onImageError","cropData","onComplete","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","map","index","normalizedIndex","overlay","cur","newMap","filter","transform","foilButton","label","toLocaleUpperCase","props","fontWeight","frameButton","backgroundColor","attributeButton","alt","process","iconButton","starButton","stickerButton","condenseButton","CharPicker","targetId","onPick","setTarget","internalOnPick","char","inputTarget","getElementById","myField","myValue","selection","focus","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","onDrag","left","top","id","EllipsisOutlined","container","edge","draggable","throttleDrag","StylePicker","memo","defaultType","undebouncedOnChange","setType","setValue","isColorPickerVisble","setColorPickerVisible","isShadowPickerVisble","setShadowPickerVisible","changeSignal","setChangeSignal","updateSignal","cnt","debounce","setCustomValue","inputValue","curValue","newStyle","overlayClassName","content","hex","visible","placement","CaretUpOutlined","CaretDownOutlined","checked","axis","styles","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CheckboxTrain","optionList","combinedClass","isChecked","TextArea","Input","onChangeFactory","mutateFunction","valueTransform","RandomButton","seeder","onGenerate","marginLeft","paddingLeft","borderLeft","SyncOutlined","CardInputPanel","currentCard","receivingCanvasRef","onCardChange","isMirrorScale","setMirrorScale","imageCropperRef","setCard","mutateFunc","onFoilChange","onAttributeChange","onSubFamilyChange","onNameChange","onStarChange","onPictureChange","onLinkMapChange","onRedScaleChange","onBlueScaleChange","onPendulumEffectChange","onEffectChange","onATKChange","onDEFChange","onTypeAbilityChange","onSetIDChange","onPasscodeChange","onStickerChange","onCreatorChange","isXyz","isLink","isMonster","displayTypeAbility","setDisplayTypeAbility","displayName","setDisplayName","displayEffect","setDisplayEffect","displayPendulumEffect","setDisplayPendulumEffect","onlineCharPicker","setOnlineCharPicker","ref","forceCardData","frameValue","isST","newTypeAbility","toUpperCase","onFocus","allowClear","ev","rows","trim","onCondenseTolerantChange","AppHeader","fontFamily","rel","ExclamationCircleOutlined","taintedCanvasWarning","display","monsterFontList","fontSize","lineHeight","lineCount","monsterSizeList","pendulumFontList","pendulumSizeList","stFontList","stSizeList","typeSizeMap","small","bracketSize","bracketSpace","bracketOffsetTop","upperCaseSize","upperCaseScale","lowerCaseSize","lowerCaseScale","spaceScale","spaceSize","frontSpace","behindSpace","iconSpace","medium","large","arrowPositionList","foilPosition","art","drawScale","baseline","digitList","totalWidth","digit","measureText","accLeft","fillText","CondenseTolerantMap","strict","loose","veryLoose","drawEffect","isPendulumEffect","fontList","sizeList","effectSizeLevel","bulletSymbol","bulletSymbolWidth","specialSymbol","breakableSymbol","spaceSymbol","normalizedContent","tolerantPerSentence","additionalLineCount","sentencizeText","tokenizer","specialSymbolReg","basedWidth","condenser","effectiveRatio","maxLine","font","textAlign","switchFont","func","tempFont","largeSize","lineList","reduce","prev","curr","condenseRatio","hypoWidth","tokenizedText","currentLineCount","tokenSentence","tokenWidth","test","fullString","fullStringSplittedByBullet","isLast","drawBullet","beginPath","arc","PI","fill","lineWidth","strokeStyle","stroke","clearRect","actualWidth","scale","sigmoidRatio","splitter","spaceSeparatedText","spaceNextToBulletSet","Set","nonSpaceWidth","spaceCount","add","spaceWidth","has","CanvasHeight","CanvasWidth","fillTextLeftWithSpacing","str","letterSpacingRatio","charList","curLeft","fillTextRightWithSpacing","curRight","c","clearCanvas","drawCreatorText","symbol","maxWidth","splittedContent","splittedWidth","symbolWidth","totalCondensableWidth","returnBundle","measureWithSymbol","nextEdge","drawAD","nextWidth","arr","curText","drawBracketTemplate","alignment","bracketChar","alignmentOffset","drawIconSpaceTemplate","drawBracketSpaceTemplate","drawTextTemplate","spaceChar","drawSlashTemplate","baseOffset","totalOffset","upperChar","imageCacheMap","drawFromSource","sx","sy","Promise","resolve","ready","normalizedX","normalizedY","Image","onload","onerror","drawFromSourceWithSize","dw","dh","useMasterSeriDrawer","active","canvasMap","artCanvas","previewCanvas","frameCanvas","specialFrameCanvas","attributeCanvas","creatorCanvas","effectCanvas","nameCanvas","passcodeCanvas","pendulumEffectCanvas","pendulumScaleCanvas","setIdCanvas","statCanvas","stickerCanvas","subFamilyCanvas","typeCanvas","checkNormal","isInitializing","imageChangeCount","pendulumSize","drawingPipeline","specialFrame","previewCtx","cardType","hasFoil","foiledBorder","all","parseInt","counter","offset","normalizedSubFamily","splittedText","contentWidth","drawName","endOfPasscode","draw1stEdition","drawTypeAbility","textSize","instructionList","totalLeft","reverse","typeCtx","effectIndexSize","App","setInitializing","error","setError","cardInputRef","drawCanvasRef","frameCanvasRef","artCanvasRef","specialFrameCanvasRef","subFamilyCanvasRef","pendulumScaleCanvasRef","pendulumEffectCanvasRef","typeCanvasRef","effectCanvasRef","nameCanvasRef","attributeCanvasRef","statCanvasRef","setIdCanvasRef","passcodeCanvasRef","creatorCanvasRef","stickerCanvasRef","drawCanvas","setImageChangeCount","WebFont","load","custom","families","urls","localCardVersion","localStorage","getItem","localCardData","urlParam","get","inactive","pendingSave","exportRef","currentPipeline","queuedPipeline","canvasRef","link","toDataURL","setTainted","alert","querySelector","classList","remove","isTainted","relevant","setItem","setAttribute","onExport","exportProps","exportCtx","generateLayer","canvasLayer","layerData","layer","values","callDraw","currentlayer","onDrop","backgroundImage","onSave","prompt","cardData","decodedCard","LoadingOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kZAAaA,G,cACF,KADEA,EAED,ICACC,EAAmB,CAC5BC,UAAW,UACXC,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,WAAW,GAMFC,EAAc,CACvBC,MAAO,SACPC,KAAM,SACNC,KAAM,QACNC,cAAe,OACfC,UAAW,CACPX,UAAW,UACXC,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,WAAW,GAEfO,UAAW,QACXC,UAAW,UACXC,KAAM,EACNC,QAAS,kCACTC,YAAa,CACTC,EAAG,EACHC,EAAG,GACHC,MAAO,IACPC,OAAQ,IACRC,KAAM,KACNC,OAAQ,GAEZC,QAAS,CAAC,IAAK,IAAK,IAAK,KACzBC,YAAY,EACZC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,CAAC,QAAS,SAAU,UACjCC,YAAa,CACTC,iBAAkB,UAEtBC,OAAO,oTAEPC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVC,QAAS,QACTC,gBAAgB,EAChBC,QAAS,kDAGAC,EAAY,CACrB,CAAE9B,KAAM,SAAU+B,WAAY,OAAQC,qBAAsB,WAC5D,CAAEhC,KAAM,SAAU+B,WAAY,OAAQC,qBAAsB,WAC5D,CAAEhC,KAAM,SAAU+B,WAAY,OAAQC,qBAAsB,WAC5D,CAAEhC,KAAM,UAAW+B,WAAY,OAAQC,qBAAsB,WAC7D,CAAEhC,KAAM,MAAO+B,WAAY,OAAQC,qBAAsB,QACzD,CAAEhC,KAAM,OAAQ+B,WAAY,OAAQC,qBAAsB,WAC1D,CAAEhC,KAAM,SAAU+B,WAAY,OAAQC,qBAAsB,WAC5D,CAAEhC,KAAM,QAAS+B,WAAY,OAAQC,qBAAsB,WAC3D,CAAEhC,KAAM,OAAQ+B,WAAY,OAAQC,qBAAsB,WAC1D,CAAEhC,KAAM,QAAS+B,WAAY,OAAQC,qBAAsB,YAGlDC,EAAW,CACpB,UACA,QACA,aACA,aACA,SACA,QACA,WAGSC,EAA0C,CACnDC,KAAM,CACF5C,UAAW,UACXC,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,WAAW,GAEfwC,SAAU,CACN7C,UAAW,UACXC,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZC,WAAW,IAGNyC,EAAW,CACpB,CAAErC,KAAM,SAAUsC,MAAO,UAAWC,UAAWjD,GAC/C,CAAEU,KAAM,OAAQsC,MAAO,WACvB,CAAEtC,KAAM,WAAYsC,MAAO,YClGlBE,EAAW,SAACC,GACrB,MAAsB,QAAfA,EAAK3C,OAEH4C,EAAY,SAACD,GACtB,MAAsB,SAAfA,EAAK3C,OAAoB6C,EAAaF,IAEpCE,EAAe,SAACF,GACzB,MAAsB,UAAfA,EAAK3C,OAAoC,SAAf2C,EAAK3C,OAG7B8C,EAAe,SAAC9C,GAAmB,IAAD,IAC3C,2BAAOgC,EAAUe,MAAK,SAAAC,GAAK,OAAIA,EAAM9C,OAASF,EAAMiD,wBAApD,aAAO,EAA6D/C,YAApE,QAA4E,U,kBCZnEgD,EAAU,SAACC,GAAU,QAARC,EAAO,uDAAL,GAAcC,EAAE,GAAGC,EAAE,MAAMA,IAAI,IAAIA,GAAG,IAAIA,GAAG,IAAIA,GAAG,IAAIA,GAAG,IAAIA,GAAG,KAAKA,GAAG,YAAYC,SAASC,OAAOC,aAAaH,MAAMD,EAAEK,KAAKF,OAAOC,aAAaH,IAAI,IAAIA,EAAE,GAAG,IAAIA,IAAIA,EAAE,CAAC,IAAIK,EAAEH,OAAOC,aAAaH,GAAG,MAAMK,GAAGN,EAAEE,SAASI,IAAIN,EAAEO,QAAQD,GAAGR,EAAEA,EAAEU,QAAQ,UAAU,IAAIV,EAAEW,EAAcX,GAAGG,EAAED,EAAEU,OAAOJ,EAAE,GAAG,IAAI,IAAIK,EAAE,GAAGC,EAAE,EAAEA,EAAEb,EAAEa,IAAI,IAAI,IAAIC,EAAE,EAAEA,EAAEf,EAAEY,OAAOE,IAAIC,EAAE,CAAC,IAAIC,EAAEhB,EAAEiB,OAAOF,EAAED,GAAG,IAAID,EAAEG,GAAG,CAAC,IAAIE,EAAEF,EAAEG,WAAW,GAAGC,EAAEJ,EAAEG,WAAWH,EAAEJ,OAAO,GAAG,KAAKM,EAAE,OAAOA,GAAG,OAAOA,GAAG,OAAOE,GAAG,OAAOA,GAAG,CAAC,IAAIF,EAAE,EAAEE,EAAEpB,EAAEqB,QAAQL,EAAED,EAAED,GAAG,GAAGM,IAAIF,EAAEE,EAAEpB,EAAEqB,QAAQL,EAAEI,EAAEN,GAAG,EAAEI,IAAIL,EAAEG,GAAGE,KAAK,OAAO,CAAC,KAAKf,KAAKH,EAAEI,SAASF,EAAEC,MAAM,GAAG,EAAEA,EAAE,MAAMF,EAAEC,EAAEC,GAAG,IAAImB,OAAE,EAAyE,IAAI,IAAItB,KAA1Ec,EAAE,EAAEC,EAAEQ,UAAUC,mBAAmBvB,IAAIS,QAAQ,OAAO,KAAKE,OAAoBC,EAAEG,IAAIA,EAAEH,EAAEb,IAAI,GAAGuB,UAAUC,mBAAmBxB,IAAIU,QAAQ,OAAO,KAAKE,QAAQI,EAAE,GAAGD,EAAEP,EAAEI,SAASI,GAAGO,UAAUC,mBAAmB,SAAMd,QAAQ,OAAO,KAAKE,QAAQ,GAAGI,SAASH,EAAEb,GAAGgB,EAAEF,IAAIQ,EAAEtB,EAAEc,EAAEE,GAAG,IAAIM,EAAE,MAA0C,IAAI,IAAIpB,KAA5CF,EAAEA,EAAEyB,MAAMH,GAAGI,KAAKzB,GAAGA,EAAEqB,EAAEd,EAAEP,EAAEO,EAAEM,EAAE,GAAgBD,EAAE,CAAC,IAAIA,EAAEX,EAAEuB,MAAMH,GAAGI,KAAKzB,GAAGc,EAAE,EAAEC,EAAEhB,EAAEqB,QAAQR,GAAG,GAAGG,IAAID,EAAEC,EAAEhB,EAAEqB,QAAQR,EAAEG,EAAEH,EAAED,QAAQ,EAAEG,IAAID,EAAED,GAAGE,GAAGF,EAAEC,EAAE,OAAOQ,EAAEtB,GAAGE,EAAEM,GAAGI,SAASU,GAAG,OAAIpB,GAAGsB,mBAAmBF,EAAE,MAAMK,EAAY,SAAA3B,GAAI,IAAIC,GAAGD,EAAEA,EAAE4B,UAAU,EAAE5B,EAAEY,OAAO,IAAIa,MAAM,QAAK,GAAGzB,EAAEC,EAAE,GAAG,EAAEA,EAAEW,OAAO,CAACX,EAAEA,EAAE,GAAL,oBAAqBA,GAArB,IAAQ,IAAI,EAAJ,0BAAQC,EAAR,QAAeF,GAAGA,EAAEA,EAAEyB,MAAMvB,IAAIwB,KAAK1B,EAAE6B,QAA/C,+BAAsD,OAAOlB,EAAcX,EAAE,IAAIW,EAAc,SAACX,GAAS,IAAPC,EAAM,uDAAJ,EAAWC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOC,EAAE,SAACH,EAAEC,GAAH,OAAOD,EAAEU,QAAQ,IAAIoB,OAAJ,WAAe7B,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAA/B,aAAsCA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAAD,GAAC,OAAEA,IAAIC,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEC,EAAEU,SAASX,EAAED,EAAEG,EAAEH,EAAEE,EAAED,SAAS,IAAIA,EAAEC,EAAEU,OAAOX,KAAKD,EAAEG,EAAEH,EAAEE,EAAED,IAAI,OAAOD,GCA3jD+B,EAAkB,WAA4C,IAA3CC,EAA0C,uDAA3B,EAAGC,EAAwB,uDAAT,IACzDC,EAAMF,EACNG,EAAMF,EACNG,EAASD,EACTE,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IAEVC,EAAgB,WAQlB,OAPkB,IAAdD,EAAiBE,KAEjBL,GAAUG,EAEVH,GADAG,GAAa,IAIVG,KAAKR,IAAIE,EAAQD,IAGtBQ,EAAa,WAIf,OAFAL,GAAgB,EADhBF,GAAUG,GAMRK,EAAQ,WAA6C,IAA5CZ,EAA2C,uDAA5BE,EAAKD,EAAuB,uDAARE,EAC9CD,EAAMF,EACNG,EAAMF,EACNG,EAASH,EACTK,EAAe,GACfC,EAAY,IACZF,EAAgBJ,GAGdY,EAAY,kBAAMT,GAClBU,EAAY,SAACC,GAAD,OAAuBX,EAASW,GAE5CC,EAAmB,eAACC,EAAD,uDAAeb,EAAf,OAA0BC,EAAgBY,GAC7DC,EAAmB,kBAAMb,GACzBc,EAAqB,WAGvB,OADAb,GAAgB,EADhBF,EAASC,GAKPe,EAAkB,kBAAMd,GACxBG,EAAS,kBAAMH,GAAgB,GAErC,MAAO,CACHM,QACAD,aACAH,gBACAC,SACAI,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIFC,EAAoF,CACtFxG,MAAO,KACPC,KAAM,KACNC,KAAM,KACNC,cAAe,MACfmB,YAAa,CACTmF,QAAS,KACTlF,iBAAkB,QAEtBnB,UAAW,CACPqG,QAAS,KACThH,UAAW,OACXC,YAAa,OACbC,cAAe,QACfC,cAAe,QACfC,WAAY,OACZC,UAAW,QAEfO,UAAW,KACXC,UAAW,KACXC,KAAM,KACNC,QAAS,KACTC,YAAa,CACTgG,QAAS,MACT/F,EAAG,MACHC,EAAG,MACHC,MAAO,MACPC,OAAQ,MACRC,KAAM,MACNC,OAAQ,OAEZC,QAAS,KACTC,WAAY,KACZC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,YAAa,KACbG,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,QAAS,MAGA2E,EAAoB,SAApBA,EACT/D,GAGE,IAFFgE,EAEC,uDAFiCH,EAClCI,IACC,yDACKC,EAAqC,GAiB3C,GAhBAC,OAAOC,KAAKpE,GAAMqE,SAAQ,SAAAC,GACtB,IAAMC,EAAYvE,EAAKsE,GAEvB,GAAyB,kBAAdC,GAAwC,OAAdA,GAAuBC,MAAMC,QAAQF,GAMnE,CACH,IAAMG,EAASV,EAAWM,GAEJ,kBAAXI,IAAqBR,EAAcQ,GAAUH,OAT0B,CAAC,IAAD,EAC5EG,EAAM,UAAGV,EAAWM,UAAd,aAAG,EAAqBR,QAEhCY,IACAR,EAAcQ,GAAUX,EAAkBQ,EAAWP,EAAWM,IAAU,QASlFL,EAAO,CACP,IAAMU,EAAcpE,EAAUqE,KAAKC,UAAUX,IAE7C,OAAOS,EAEX,OAAOT,GAGEY,EAA2B,SAA3BA,EACTZ,GAEE,IADFF,EACC,uDADiCH,EAE5BkB,EAAmD,kBAAlBb,EACjCU,KAAKI,MAAM7C,EAAY8C,mBAAmBf,KAC1CA,EAEAgB,EAAgC,GAgBtC,OAfAf,OAAOC,KAAKJ,GAAYK,SAAQ,SAAAc,GAC5B,IAAMC,EAAgBpB,EAAWmB,GAEjC,GAA6B,kBAAlBC,GAAgD,OAAlBA,GAA2BZ,MAAMC,QAAQW,GAO1EL,EAAwBK,KACxBF,EAASC,GAAWJ,EAAwBK,QAR8C,CAC9F,IAAMC,EAAW,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAetB,QAE/BuB,GAAeN,EAAwBM,KACvCH,EAASC,GAAWL,EAAyBC,EAAwBM,GAAcrB,EAAWmB,SAQnGD,GAGEI,EAAkB,SAC3BtF,GAEE,IACEkF,EAFJK,EACC,wDAUD,OAPIL,EADAK,EACWT,EAAyB9E,GAET,kBAATA,EACZ4E,KAAKI,MAAMhF,GACXA,EAGHwF,EAAgBN,IAIrBM,EAAkB,SAACxF,GACrB,IAAMyF,EAAeC,YAAM1F,GAW3B,YATiC2F,IAA7BF,EAAa9G,cACb8G,EAAa9G,YAAb,eACOvB,EAAYuB,mBAIMgH,IAAzBF,EAAaG,UACbH,EAAaG,QAAU,GAEpBH,GCxMEI,EAAkB,WAG3B,IAHoF,IAAxDC,EAAuD,uDAA7C,6BAA8B1E,EAAe,uDAAN,EACzE2E,EAAmB,GACjBC,EAAmBF,EAAQ1E,OACvBC,EAAI,EAAGA,EAAID,EAAQC,IACzB0E,GAAUD,EAAQG,OAAO/C,KAAKgD,MAAMhD,KAAKiD,SAAWH,IAExD,OAAOD,GAGEK,EAAc,WACvB,MAAM,GAAN,OAAUP,EAAgB,6BAA8B,GAAxD,cAAgEA,EAAgB,aAAc,KAGrFQ,EAAiB,WAC1B,MAAM,GAAN,OAAUR,EAAgB,aAAc,KAG/BS,EAAc,SAACzH,GAAsC,IAAD,MAArB0H,EAAqB,wDACzDC,EAAa3H,EAEb4H,EAAiB,GACfC,EAAgB,sBAChBC,EAAmB,UAAGD,EAAcE,KAAKJ,UAAtB,aAAG,EAAiC,GACvDK,EAAQ,UAAGH,EAAcE,KAAKJ,UAAtB,aAAG,EAAiC,GAC9CK,GAAYF,GACZF,EAAiBI,EACjBL,EAAaA,EAAWtF,QAAQyF,EAAqB,KAClDF,EAAiB,GAExB,IAAIK,EAAwB,GACtBC,EAAuB,iGACvBC,EAAe,UAAGD,EAAqBH,KAAK/H,UAA7B,aAAG,EAAoC,GAM5D,OALImI,GAAmBT,GACnBO,EAAwBE,EACxBR,EAAaA,EAAWtF,QAAQ8F,EAAiB,KAC9CF,EAAwB,GAExB,CACHD,SAAUJ,EACVQ,KAAMT,EACNQ,gBAAiBF,IAIZI,EAAe,SAACC,GACzB,IAAIC,EAAgB,OAAID,QAAJ,IAAIA,IAAQ,GAMhC,OALAC,EAAmBA,EAAiBlG,QAAQ,uBAAwB,YAC/DA,QAAQ,KAAM,UACdA,QAAQ,6BAA8B,YACtCA,QAAQ,KAAM,UACdA,QAAQ,MAAO,WAIjB,SAASmG,EAAeC,EAAaC,GACxC,GAAIC,OAAOC,QAAQC,UAAW,CAC1B,IAAIC,EAAe,IAAIC,gBAAgBJ,OAAOK,SAASC,QACvDH,EAAaI,IAAIT,EAAKC,GACtB,IAAIS,EAASR,OAAOK,SAASI,SAAW,KAAOT,OAAOK,SAASK,KAAOV,OAAOK,SAASM,SAAW,IAAMR,EAAaS,WACpHZ,OAAOC,QAAQC,UAAU,CAAEW,KAAML,GAAU,GAAIA,I,mFCxD1CM,G,OAAU,WACnB,OAAO,cAAC,IAAD,MAEXA,EAAQC,SAAW,WACf,OAAO,qBAAKC,UAAU,mBAAf,SACH,cAAC,IAAD,CAAMC,KAAK,a,cCiCZ,IAAMC,EAAeC,IAAMC,YAA0C,WAU3DC,GAAkB,IAAD,IAT9BC,sBAS8B,MATb,EASa,MAR9BC,6BAQ8B,MARN,GAQM,EAP9BC,EAO8B,EAP9BA,iBACAC,EAM8B,EAN9BA,SAM8B,IAL9BC,aAK8B,MALtB,EAKsB,EAJ9BC,EAI8B,EAJ9BA,gBAI8B,IAH9BC,sBAG8B,MAHb,aAGa,MAF9BC,qBAE8B,MAFd,aAEc,MAD9BC,iBAC8B,MADlB,aACkB,IACQC,mBAAsD,aAD9D,mBACvBC,EADuB,KACVC,EADU,OAEMF,mBAAkC,YAFxC,mBAEvBG,EAFuB,KAEXC,EAFW,OAGcJ,mBAAS,IAHvB,mBAGvBK,EAHuB,KAGPC,EAHO,OAIEN,oBAAS,GAJX,mBAIvBO,EAJuB,KAIZC,EAJY,OAKcR,mBAASR,GALvB,mBAKvBiB,EALuB,KAKPC,EALO,KAMxBC,EAASC,iBAAgC,MANjB,EAONZ,mBAAyBJ,GAPnB,mBAOvBiB,EAPuB,KAOjBC,EAPiB,OAQYd,mBAAgC,MAR5C,mBAQvBe,EARuB,KAQRC,GARQ,KAwBxBC,GAASC,uBAAY,SAACC,GACxBX,GAAW,GACXG,EAAOS,QAAUD,IAClB,IA4DH,OAjDAE,qBAAU,WAAO,IAAD,QACNC,EAAQX,EAAOS,QACfG,EAAS9B,EACToB,EAAOE,EACb,GAAKF,GAASU,GAAWD,EAAzB,CAEA,IAAME,EAAMD,EAAOE,WAAW,MAC9B,GAAKD,EAAL,CAEA,IAAME,EAASJ,EAAMK,aAAeL,EAAM5M,MACpCkN,EAASN,EAAMO,cAAgBP,EAAM3M,OACrCmN,EAAa7D,OAAO8D,iBACpBC,EAAgBrI,KAAKsI,KAAKV,EAAOW,wBAAwBxN,OACzDyN,EAAiBxI,KAAKsI,KAAKV,EAAOW,wBAAwBvN,QAEhE4M,EAAO7M,OAAQ,OAACsN,QAAD,IAACA,IAAiB,GAAKF,EACtCP,EAAO5M,QAAS,OAACwN,QAAD,IAACA,IAAkB,GAAKL,EAExCN,EAAIY,aAAaN,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDN,EAAIa,sBAAwB,OAE5Bb,EAAIc,UACAhB,GACA,UAACT,EAAKrM,SAAN,QAAW,GAAKkN,GAChB,UAACb,EAAKpM,SAAN,QAAW,GAAKmN,GAChB,UAACf,EAAKnM,aAAN,QAAe,GAAKgN,GACpB,UAACb,EAAKlM,cAAN,QAAgB,GAAKiN,EACrB,EACA,EAPJ,OAQKI,QARL,IAQKA,IAAiB,EARtB,OASKG,QATL,IASKA,IAAkB,GAEvBrC,EAAce,EAAMV,OAErB,CAACY,EAAetB,EAAkBF,IAErCgD,8BAAoBjD,GAAc,iBAAO,CACrCkD,oBAAqB,SAACC,EAAQC,IACS,aAAfvC,EAA4BE,EAAiBI,KAC7CgC,IAChBjC,GAAW,GACXJ,EAAc,YACdP,EAAe4C,GACf/B,EAAkB+B,IAEtB3B,EAAQ4B,QAKZ,sBAAKzD,UAAU,qBAAf,UACI,sBAAKA,UAAU,0BAAf,UACKS,EACD,eAAC,IAAMiD,MAAP,CAAaC,SAAU,SAAA3L,GAAC,OAAImJ,EAAcnJ,EAAE4L,OAAO7E,QAAQA,MAAOmC,EAAlE,UACI,cAAC,IAAM2C,OAAP,CAAc9E,MAAO,WAArB,SACI,cAAC,IAAD,CACI+E,YAAY,OAAOC,YAAY,6BAC/BhF,MAAOyC,EACPmC,SAnEO,SAAC3L,GAC5B,IAAMwL,EAASxL,EAAE4L,OAAO7E,MAExBwC,GAAW,GACXJ,EAAc,YACdP,EAAe4C,GACf/B,EAAkB+B,IA6DoCQ,UAAW,KAHtC,SAKf,eAAC,IAAMH,OAAP,CAAc9E,MAAO,WAArB,UACI,cAAC,IAAD,CAAOkF,KAAK,OAAOC,OAAO,UAAUP,SAzFnC,SAAC3L,GAClB,GAAIA,EAAE4L,OAAOO,OAASnM,EAAE4L,OAAOO,MAAMvL,OAAS,EAAG,CAC7C2I,GAAW,GACX,IAAM6C,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WACC,kBAAlBF,EAAO7G,SACd8D,EAAkB+C,EAAO7G,QACzB4D,EAAc,gBAGtBiD,EAAOG,cAAcvM,EAAE4L,OAAOO,MAAM,QAgFxB,8BACoB,aAAfjD,GAA6B,qCAC1B,cAAC,IAAD,CACIlB,UAAU,kBACVwE,WAAU,OAAC1C,QAAD,IAACA,OAAD,EAACA,EAAerM,UAAS,OAACqM,QAAD,IAACA,OAAD,EAACA,EAAepM,QACnD+O,QAAS,kBAAMjE,GArJnD,SAA0B8B,EAAkCV,GACnDA,GAASU,GACdA,EAAOoC,QACH,SAACC,GACG,GAAa,OAATA,EAAe,CACf,IAAMC,EAAa5F,OAAO6F,IAAIC,gBAAgBH,GAExCI,EAASC,SAASC,cAAc,KACtCF,EAAOG,SAAW,kBAClBH,EAAOI,KAAON,IAAIC,gBAAgBH,GAClCI,EAAOK,QAEPpG,OAAO6F,IAAIQ,gBAAgBT,MAGnC,YACA,GAqI+DU,CAAiB9E,EAAkBsB,IAH1E,2CAOA,sBAAMyD,MAAO,CAAElO,MAAO,WAAtB,8DAMpB,sBAAK2I,UAAU,eAAf,UACKsB,GAAa,cAAC,EAAQvB,SAAT,IACd,cAAC,IAAD,CACIyF,IAAoB,aAAftE,EAA4BE,EAAiBI,EAClDiE,cAAezD,GACf0D,aAAc,WACV5E,IACAG,OAAe9D,IAEnByE,KAAMA,EACN+B,SAAU,SAAAgC,GAAQ,OAAI9D,EAAQ,2BAAK8D,GAAN,IAAgB/P,OAAQ8K,MACrDkF,WAAY,SAAAD,GAAQ,OAAI5D,GAAiB4D,IACzCE,cAAc,EACd7E,YAAaA,GAXDE,Y,QChKnB4E,I,OAAkB,SAAC,GAGR,IAAD,IAFnBC,oBAEmB,MAFJ,GAEI,MADnBpC,gBACmB,MADR,aACQ,IACqB5C,mBAASgF,GAD9B,mBACZC,EADY,KACEC,EADF,KAEbC,EAAY,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KAEhDC,EAAsB/J,KAAKC,UAAU2J,GAM3C,OALA5D,qBAAU,WACNuB,EAASqC,KAEV,CAACG,IAEG,sBAAKnG,UAAU,sBAAf,UACH,qBAAKA,UAAU,QAAf,yBAGA,qBAAKA,UAAU,YAAf,SACK,YAAIhE,MAAM,IAAIoK,KAAI,SAACvO,EAAOwO,GACvB,IAAMC,EAAe,UAAMD,EAAQ,GAEnC,MAAwB,MAApBC,EAAgC,cAAC,IAAD,CAAiBC,QAAQ,QAAzB,SAChC,qBAAKvG,UAAU,oBAAoByE,QAAS,WACxCwB,EAAgB,KADpB,gBAD6C,KAM1C,qBACHjG,UAAS,oCAA+BqG,EAAQ,EAAvC,YAA4CL,EAAa5N,SAASkO,GAAmB,iBAAmB,IACjH7B,QAAS,WACLwB,GAAgB,SAAAO,GACZ,IAAIC,EAAM,YAAOD,GAKjB,OAHIC,EAAOrO,SAASkO,GAAkBG,EAASA,EAAOC,QAAO,SAAA7O,GAAK,OAAIA,IAAUyO,KAC3EG,EAAOlO,KAAK+N,GAEVG,MATZ,SAaH,qBAAKzG,UAAS,4CAAuCqG,EAAQ,GAAKd,MAAO,CAAEoB,UAAU,UAAD,OAAYT,EAAUG,GAAtB,YAbvEC,a,mBChCpBM,I,OAAaxP,EAASgP,KAAI,gBAAG/O,EAAH,EAAGA,MAAOtC,EAAV,EAAUA,KAAV,MAAsB,CACzD8R,MAAO9R,EAAK+R,oBACZ/H,MAAOhK,EACPgS,MAAO,CACHxB,MAAO,CACHlO,QACA2P,WAAY,cAIXC,GAAcpQ,EAAUuP,KAAI,gBAAGtP,EAAH,EAAGA,WAAY/B,EAAf,EAAeA,KAAf,MAAiD,CACtF8R,MAAO9R,EACPgK,MAAOhK,EACPgS,MAAO,CACHxB,MAAO,CACH2B,gBAL6B,EAAqBnQ,qBAMlDM,MAAOP,QAINqQ,GR+FgB,CACzB,CAAEpS,KAAM,OAAQsC,MAAO,WACvB,CAAEtC,KAAM,QAASsC,MAAO,WACxB,CAAEtC,KAAM,OAAQsC,MAAO,WACvB,CAAEtC,KAAM,QAASsC,MAAO,WACxB,CAAEtC,KAAM,QAASsC,MAAO,WACxB,CAAEtC,KAAM,OAAQsC,MAAO,WACvB,CAAEtC,KAAM,SAAUsC,MAAO,WACzB,CAAEtC,KAAM,QAASsC,MAAO,WACxB,CAAEtC,KAAM,OAAQsC,MAAO,YQxGkB+O,KAAI,gBAAGrR,EAAH,EAAGA,KAAH,MAAe,CAC5D8R,MAAO,qBAAKO,IAAKrS,EAAMyQ,IAAG,UAAK6B,aAAL,uCAA0DtS,EAAK+C,cAA/D,UAC1BiH,MAAOhK,MAEEuS,GAAatQ,EAASoP,KAAI,SAAAvO,GAAK,MAAK,CAC7CgP,MAAOhP,EACPkH,MAAOlH,MAEE0P,GAAa,YAAIvL,MAAM,KAAKoK,KAAI,SAACpO,EAAGqO,GAAJ,MAAe,CAAEQ,MAAOR,EAAOtH,MAAOsH,MACtEmB,GR0Ec,CACvB,aACA,OACA,SACA,OACA,QACA,QACA,QACA,QACA,SQnFqCpB,KAAI,SAAArR,GAAI,MAAK,CAClD8R,MAAgB,eAAT9R,EACD,wCACA,qBAAKqS,IAAKrS,EAAMyQ,IAAG,UAAK6B,aAAL,wCAA2DtS,EAAK+C,cAAhE,UACzBiH,MAAOhK,MAEE0S,GAAiB,CAC1B,CAAEZ,MAAO,SAAU9H,MAAO,UAC1B,CAAE8H,MAAO,QAAS9H,MAAO,SACzB,CAAE8H,MAAO,aAAc9H,MAAO,c,2BCK3B,IAAM2I,GAAa,SAAC,GAGR,IAAD,IAFdC,gBAEc,MAFH,GAEG,MADdC,cACc,MADL,aACK,IACc7G,mBAA6B,MAD3C,mBACP6C,EADO,KACCiE,EADD,KAERC,EAAiB,SAACC,GACpB,IAAMC,EAAchD,SAASiD,eAAeN,GAC5C,GAAIK,EAAa,CAAC,IACNjJ,EAjDpB,SAAwBmJ,EAA8BC,GAElD,GAAKnD,SAAiBoD,UAKlB,OAJAF,EAAQG,QACKrD,SAAiBoD,UAAUE,cACpC3J,KAAOwJ,EAEJ,CACHpJ,MAAOmJ,EAAQnJ,MACfwJ,SAAU,GAIb,GAAIL,EAAQM,gBAA6C,IAA3BN,EAAQM,eAAsB,CAC7D,IAAMC,EAAWP,EAAQM,eACnBE,EAASR,EAAQS,aAQvB,OAPAT,EAAQnJ,MAAQmJ,EAAQnJ,MAAMnF,UAAU,EAAG6O,GACrCN,EACAD,EAAQnJ,MAAMnF,UAAU8O,EAAQR,EAAQnJ,MAAMnG,QACpDsP,EAAQM,eAAiBC,EAAWN,EAAQvP,OAC5CsP,EAAQS,aAAeF,EAAWN,EAAQvP,OAC1CsP,EAAQG,QAED,CACHtJ,MAAOmJ,EAAQnJ,MACfwJ,SAAUE,EAAWN,EAAQvP,QAKjC,OAFAsP,EAAQnJ,OAASoJ,EAEV,CACHpJ,MAAOmJ,EAAQnJ,MACfwJ,SAAU,GAiBQK,CAAeZ,EAAaD,GAAtChJ,MAER6I,EAAO7I,KAIfqD,qBAAU,WACNyF,EAAU7C,SAASiD,eAAe,kBACnC,IAEH,IAAMY,EAAS5G,uBAAY,YAIpB,IAHH2B,EAGE,EAHFA,OACAkF,EAEE,EAFFA,KAAMC,EAEJ,EAFIA,IACNpC,EACE,EADFA,UAEA/C,EAAQ2B,MAAMuD,KAAd,UAAwBA,EAAxB,MACAlF,EAAQ2B,MAAMwD,IAAd,UAAuBA,EAAvB,MACAnF,EAAQ2B,MAAMoB,UAAYA,IAC3B,IAEH,OAAO,sBAAK3G,UAAU,wBAAf,UACF,sBAAKgJ,GAAI,cAAehJ,UAAU,cAAlC,UACG,qBAAKA,UAAU,UAAf,SACI,cAACiJ,GAAA,EAAD,MAEH,CACG,SACA,SACA,SACA,OACA,SACA,UACF7C,KAAI,SAAAvO,GACF,OAAO,wBAAoBmI,UAAU,UAAUyE,QAAS,kBAAMqD,EAAejQ,IAAtE,SAA+EA,GAAlEA,SAG5B,cAAC,KAAD,CACI+L,OAAQA,EACRsF,UAAW,KAGXC,MAAM,EAGNC,WAAW,EACXC,aAAc,EACdR,OAAQA,Q,sECtFPS,I,OAAcnJ,IAAMoJ,MAAK,YAIlB,IAHhBC,EAGe,EAHfA,YACAzD,EAEe,EAFfA,aACU0D,EACK,EADf9F,SACe,EACS5C,mBAASyI,GADlB,mBACRvF,EADQ,KACFyF,EADE,OAEW3I,mBAASgF,GAFpB,mBAERhH,EAFQ,KAED4K,EAFC,OAGsC5I,oBAAS,GAH/C,mBAGR6I,EAHQ,KAGaC,EAHb,OAIwC9I,oBAAS,GAJjD,mBAIR+I,EAJQ,KAIcC,EAJd,OAKyBhJ,mBAAS,GALlC,mBAKRiJ,EALQ,KAKMC,EALN,KAMTC,EAAe,kBAAMD,GAAgB,SAAAE,GAAG,OAAIA,EAAM,MAClDxG,EAAWhC,iBAAOyI,oBAASX,EAAqB,MAAMtH,QAEtDkI,EAAiB,SAAwBvL,GAC3C,OAAO,SAACwL,GACJX,GAAS,SAAAY,GACL,IAAMC,EAAQ,2BAAQD,GAAR,kBAAmBzL,EAAMwL,IAGvC,OADA3G,EAAS,SAAU6G,GACZA,OAUnB,OALApI,qBAAU,WACe,IAAjB4H,GAAoBrG,EAAS,SAAU5E,KAE5C,CAACiL,IAEG,qBAAKhK,UAAU,2CAAf,SACH,uBAAMA,UAAU,oCAAhB,UACI,sBAAMA,UAAU,wBAAhB,wBACA,sBAAMA,UAAU,0BAAhB,SACI,sBAAKA,UAAU,0CAAf,UACI,wBAAOA,UAAS,4BAAgC,SAATiE,EAAkB,4BAA8B,IAAMQ,QAAS,WAClGiF,EAAQ,QACR/F,EAAS,OAAQ5E,IAFrB,UAII,uBAAMiB,UAAS,oBAAwB,SAATiE,EAAkB,oBAAsB,IAAtE,UACI,uBAAOA,KAAK,QAAQjE,UAAU,kBAAkBjB,MAAM,SACtD,sBAAMiB,UAAU,uBAEpB,2CAEJ,wBAAOA,UAAS,4BAAgC,WAATiE,EAAoB,4BAA8B,IAAMQ,QAAS,WACpGiF,EAAQ,UACR/F,EAAS,SAAU5E,IAFvB,UAII,uBAAMiB,UAAS,oBAAwB,WAATiE,EAAoB,oBAAsB,IAAxE,UACI,uBAAOA,KAAK,QAAQjE,UAAU,kBAAkBjB,MAAM,WACtD,sBAAMiB,UAAU,uBAEpB,sBAAKA,UAAU,eAAf,mBAEI,cAAC,KAAD,CACIyK,iBAAiB,qCACjBC,QAAS,qCACL,qBAAK1K,UAAU,oBAAoByE,QAAS,kBAAMoF,GAAsB,MACxE,qBAAK7J,UAAW,sBAAhB,SACI,sBAAKA,UAAU,oBAAf,UACI,4CACA,cAAC,KAAD,CAAe3I,MAAO0H,EAAMzK,UAAWqP,SAAU,SAAAtM,GAC7CqS,EAAQ,UACRC,GAAS,SAAAnD,GAGL,OAFc,2BAAQA,GAAR,IAAalS,UAAW+C,EAAMsT,SAIhDT,eAKhBU,QAAShB,EACTiB,UAAU,SApBd,SAsBI,sBAAK7K,UAAU,wCAAwCyE,QAAS,kBAAMoF,GAAsB,SAAArD,GAAG,OAAKA,MAApG,0BACkBoD,EAAsB,cAACkB,GAAA,EAAD,IAAsB,cAACC,GAAA,EAAD,QAvBrD,gBA0Bb,cAAC,KAAD,CACIN,iBAAiB,qCACjBC,QAAS,qCACL,qBAAK1K,UAAU,oBAAoByE,QAAS,kBAAMsF,GAAuB,MACzE,sBAAK/J,UAAW,sBAAhB,UACI,oBAAIA,UAAU,sBAAd,SACI,cAAC,IAAD,CAAUjB,MAAO,aAAciM,QAASjM,EAAMpK,UAAWgP,SAAU,WAC/D+F,EAAQ,UACRC,GAAS,SAAAnD,GAGL,OAFc,2BAAQA,GAAR,IAAa7R,WAAY6R,EAAI7R,eAI/CuV,KAPJ,2BAUHnL,EAAMpK,WAAa,sBAAKqL,UAAU,sBAAf,UAChB,0CACA,sBAAKA,UAAU,kBAAf,UACI,cAAC,KAAD,CAAaiL,KAAK,KACdC,OAAQ,CACJC,MAAO,CACHjE,gBAAiB,UACjBzR,MAAO,IACPC,OAAQ,IACR0V,QAAS,SACT7C,SAAU,YAEd8C,MAAO,CACHnE,gBAAiB,UACjBoE,OAAQ,KAGhBC,KAAM,EAAGC,MAAO,EAChBC,KAAM,EAAGC,MAAO,EAChBnW,EAAGwJ,EAAMtK,cACTe,EAAGuJ,EAAMvK,cACTmP,SAAU,YAAe,IAAZpO,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACZmU,GAAS,SAAAnD,GAOL,OANc,uCAAQA,GACfA,GADO,IAEV/R,cAAec,EACff,cAAegB,OAKvB0U,OAER,sBAAKlK,UAAU,gBAAf,uBACc,cAAC,KAAD,CAAaC,KAAK,QAAQlB,MAAOA,EAAMtK,cAAekP,SAAU0G,EAAe,sBAE7F,sBAAKrK,UAAU,gBAAf,uBACc,cAAC,KAAD,CAAaC,KAAK,QAAQlB,MAAOA,EAAMvK,cAAemP,SAAU0G,EAAe,sBAE7F,sBAAKrK,UAAU,gBAAf,mBACU,cAAC,KAAD,CAAQjB,MAAOA,EAAMrK,WAAYwF,IAAK,EAAGC,IAAK,GAAIwJ,SAAU,SAAC5E,GAC1C,kBAAVA,IACP4K,GAAS,SAAAnD,GAGL,OAFc,2BAAQA,GAAR,IAAa9R,WAAYqK,OAI3CmL,WAIZ,2BAEJ,uCACA,cAAC,KAAD,CAAe7S,MAAO0H,EAAMxK,YAAaoP,SAAU,SAAAtM,GAE/CsS,GAAS,SAAAnD,GAGL,OAFQ,2BAAQA,GAAR,IAAajS,YAAa8C,EAAMsT,SAI5CT,gBAKhBU,QAASd,EACTe,UAAU,SAnFd,SAqFI,sBAAK7K,UAAU,yCAAyCyE,QAAS,kBAAMsF,GAAuB,SAAAvD,GAAG,OAAKA,MAAtG,2BACmBsD,EAAuB,cAACgB,GAAA,EAAD,IAAsB,cAACC,GAAA,EAAD,QAtFvD,oCA+FtC,kBAAM,MClLIY,GAAgB,SAAC,GAMR,IALlBhI,EAKiB,EALjBA,SACA5E,EAIiB,EAJjBA,MACA6M,EAGiB,EAHjBA,WACAnL,EAEiB,EAFjBA,SAGMoL,EAAgB,CAAC,yDADN,EADjB7L,WAE4FtG,KAAK,KAEjG,OAAO,sBAAKsG,UAAW6L,EAAhB,UACFpL,GAAY,uBAAOT,UAAU,yCAAjB,SAA2DS,IACvEmL,EAAWxF,KAAI,SAAAvO,GACZ,IAAMiU,EAAY,UAAGjU,EAAMkH,SAAT,UAAwBA,GAE1C,OAAO,kDACClH,EAAMkP,OADP,IAEH/G,UAAS,mCAA8B8L,EAAY,mCAAqC,IACxFrH,QAAS,WACLd,EAAS9L,EAAMkH,QAJhB,UAOH,sBAAMiB,UAAS,2BAAsB8L,EAAY,2BAA6B,IAA9E,SACI,sBAAM9L,UAAU,6BAEpB,+BAAOnI,EAAMgP,WAVEhP,EAAMkH,cCX7BgN,GAAaC,IAAbD,SAEFE,GAAkB,SACpBnN,EACAoN,GAEE,IADFC,EACC,uDADqC,SAACpN,GAAD,OAAWA,GAEjD,OAAO,SAAC/G,GACJkU,GAAe,SAAA/J,GAAO,wCACfA,GADe,kBAEjBrD,EAAMqN,EAA4B,kBAANnU,GAA+B,kBAANA,GAAkBgE,MAAMC,QAAQjE,GAAKA,EAArE,OAAyEA,QAAzE,IAAyEA,GAAzE,UAAyEA,EAAG4L,cAA5E,aAAyE,EAAW7E,cAShHqN,GAAe,SAAC,GAGD,IAFjBC,EAEgB,EAFhBA,OACAC,EACgB,EADhBA,WAEA,OAAO,sBAAM/G,MAAO,CAAEgH,WAAY,GAAIC,YAAa,GAAIC,WAAY,kBAA5D,SACH,cAAC,IAAD,CAASlG,QAAQ,YAAjB,SACI,cAACmG,GAAA,EAAD,CAAcjI,QAAS,kBAAM6H,EAAWD,aAkBvCM,GAAiBxM,IAAMC,YAA8C,WAQ/DC,GAAkB,IAPjCuM,EAOgC,EAPhCA,YACAC,EAMgC,EANhCA,mBACAlM,EAKgC,EALhCA,gBACAmM,EAIgC,EAJhCA,aACAjM,EAGgC,EAHhCA,cACAC,EAEgC,EAFhCA,UACAL,EACgC,EADhCA,SACgC,EACQM,oBAAS,GADjB,mBACzBgM,EADyB,KACVC,EADU,KAE1BC,EAAkBtL,iBAAwB,MAC1CuL,EAAU,SAACC,GACbL,GAAa,SAAAF,GAAW,OAAIO,EAAWP,OAErCQ,EAAenB,GAAgB,OAAQiB,GAwBvCG,EAAoBpB,GAAgB,YAAaiB,GACjDI,EAAoBrB,GAAgB,YAAaiB,GACjDK,EAAenD,oBAAS6B,GAAgB,OAAQiB,GAAU,KAqB1DM,EAAevB,GAAgB,OAAQiB,GAIvCO,EAAkBxB,GAAgB,UAAWiB,GAC7CQ,EAAkBzB,GAAgB,UAAWiB,GAC7CS,EAAmB1B,GAAgB,mBAAoBiB,GACvDU,EAAoB3B,GAAgB,oBAAqBiB,GACzDW,EAAyBzD,oBAAS6B,GAAgB,iBAAkBiB,GAAU,KAC9EY,EAAiB1D,oBAAS6B,GAAgB,SAAUiB,GAAU,KAC9Da,EAAc9B,GAAgB,MAAOiB,GACrCc,EAAc/B,GAAgB,MAAOiB,GACrCe,EAAsB7D,qBAAS,SAACrL,GAClCmO,GAAQ,SAAA/K,GAAO,kCACRA,GADQ,IAEXjM,YAAa6I,EAAMqH,KAAI,SAAAvO,GAAK,gBAAOA,aAExC,KACGqW,EAAgBjC,GAAgB,QAASiB,GACzCiB,EAAmBlC,GAAgB,WAAYiB,GAC/CkB,EAAkBnC,GAAgB,UAAWiB,GAC7CmB,EAAkBpC,GAAgB,UAAWiB,GAM/CrY,EAaA+X,EAbA/X,MAAOC,EAaP8X,EAbO9X,KACPC,EAYA6X,EAZA7X,KAAMC,EAYN4X,EAZM5X,cAAeC,EAYrB2X,EAZqB3X,UACrBI,EAWAuX,EAXAvX,QACAgB,EAUAuW,EAVAvW,OACAF,EASAyW,EATAzW,YACAD,EAQA0W,EARA1W,YACAJ,GAOA8W,EAPA9W,WAAYC,GAOZ6W,EAPY7W,eAAgBC,GAO5B4W,EAP4B5W,iBAAkBC,GAO9C2W,EAP8C3W,kBAC9CM,GAMAqW,EANArW,IAAKC,GAMLoW,EANKpW,IAAKX,GAMV+W,EANU/W,QACVX,GAKA0X,EALA1X,UACAC,GAIAyX,EAJAzX,UACAC,GAGAwX,EAHAxX,KACAkB,GAEAsW,EAFAtW,MACAG,GACAmW,EADAnW,SAAUE,GACViW,EADUjW,eAAgBC,GAC1BgW,EAD0BhW,QAASF,GACnCkW,EADmClW,QAEjC4X,GAAQ/W,EAASqV,GACjB2B,GAAS9W,EAAUmV,GACnB4B,GAAY9W,EAAakV,GAhGC,GAiGoB7L,mBAAS7K,EAAYwD,KAAK,MAjG9C,qBAiGzB+U,GAjGyB,MAiGLC,GAjGK,SAkGM3N,mBAAShM,GAlGf,qBAkGzB4Z,GAlGyB,MAkGZC,GAlGY,SAmGU7N,mBAAS1K,GAnGnB,qBAmGzBwY,GAnGyB,MAmGVC,GAnGU,SAoG0B/N,mBAAShL,IApGnC,qBAoGzBgZ,GApGyB,MAoGFC,GApGE,SAqGgBjO,mBAAS,IArGzB,qBAqGzBkO,GArGyB,MAqGPC,GArGO,MAsG1BC,GAAMxN,mBAYZ,OAVA2B,8BAAoBjD,GAAc,iBAAO,CACrC+O,cAAe,SAAC5X,GAAU,IAAD,EACrBkX,GAAsBlX,EAAKtB,YAAYwD,KAAK,MAC5CkV,GAAepX,EAAKzC,MACpB+Z,GAAiBtX,EAAKnB,QACtB2Y,GAAyBxX,EAAKzB,gBAC9B,UAAAkX,EAAgB9K,eAAhB,SAAyBoB,oBAAoB/L,EAAKnC,QAASmC,EAAKlC,kBAIjE,sBAAK0K,UAAU,kBAAf,UACFS,EACD,cAAC,GAAD,CACIkH,SAAUsH,GACVrH,OAAQ,SAAA7I,GAAU,IAAD,MACToQ,GAAIhN,UAAS,QAAC,EAAAgN,GAAIhN,eAAL,mBAAsB4E,aAAtB,mBAA6BpD,gBAA7B,gBAAwC,CACrDC,OAAQ,CAAE7E,eAItB,cAAC,GAAD,CAAeiB,UAAU,aAAajB,MAAOjK,EAAM6O,SAAUyJ,EAAcxB,WAAYhF,GAAvF,SACI,0CAEJ,cAAC,GAAD,CAAe5G,UAAU,cAAcjB,MAAOlK,EAAO8O,SAxHnC,SAAC0L,GACnBvC,GAAa,SAAAF,GACT,IAAM7N,EAAK,UAAMsQ,GACXC,EAAiB,UAAVvQ,GAA+B,SAAVA,EAC5BwQ,EAA2B,UAAVxQ,EACjB,CAAC,cACS,SAAVA,EAAmB,CAAC,aAAe6N,EAAY1W,YAGrD,OAFIoZ,GAAMZ,GAAsBa,EAAe,IAExC,2BACA3C,GADP,IAEI/X,MAAOkK,EACPjJ,WAAsB,SAAViJ,GAA8B,UAAVA,IAAqBuQ,GAAe1C,EAAY9W,WAChFX,UAAWma,EAAO,UAAY1C,EAAYzX,UAC1CD,UAAWoa,EACL,UAAGvQ,GAAQyQ,cACX5C,EAAY1X,UAClBgB,YAAuB,UAAV6I,EACP,CAAC,cACS,SAAVA,EAAmB,CAAC,aAAe6N,EAAY1W,kBAqGiB0V,WAAY3E,KAC1F,uBACA,sBAAKjH,UAAU,yBAAf,UACI,cAAC,IAAD,CACIgJ,GAAG,OACHmG,IAA0B,SAArBF,GAA8BE,GAAa,KAChDM,QAAS,kBAAMP,GAAoB,SACnCQ,YAAU,EACV5L,YAAa,OACbC,YAAY,YACZhF,MAAO4P,GACP3O,UAAU,aACV2D,SAAU,SAAAgM,GACNpC,EAAaoC,GACbf,GAAee,EAAG/L,OAAO7E,UAGjC,cAACuK,GAAD,CAAaE,YAAaxU,EAAe+Q,aAAc9Q,EAAW0O,SA/GhD,SAACM,EAAqBlF,GAC5C+N,GAAa,SAAAF,GACT,OAAO,2BACAA,GADP,IAEI5X,cAAeiP,EACfhP,UAAW8J,UA2GdyP,GACMD,GAIG,KAHA,cAAC,GAAD,CAAevO,UAAU,sBAAsBjB,MAAK,UAAK3J,IAAQuO,SAAU6J,EAAc5B,WAAYrE,GAArG,SACE,+BAAO+G,GAAQ,OAAS,YAG9B,cAAC,GAAD,CAAevP,MAAO5J,GAAWwO,SAAU2J,EAAmB1B,WAAYtE,GAA1E,SACE,0CAGR,cAAC,GAAD,CAAetH,UAAU,uBAAuBjB,MAAO7J,GAAWyO,SAAU0J,EAAmBzB,WAAYzE,GAA3G,SACI,kDAGR,sBAAenH,UAAU,YAAzB,UACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CACIgJ,GAAG,SACHmG,IAA0B,WAArBF,GAAgCE,GAAa,KAClDM,QAAS,kBAAMP,GAAoB,WACnCQ,YAAU,EACV1P,UAAU,eACV8D,YAAa,8CAAQ,cAAC,GAAD,CAAcuI,OAAQzO,EAAa0O,WAAY4B,OACpEvK,SAAUuK,EACVnK,YAAY,SACZhF,MAAOzI,KAETkY,IAAuB,SAAV3Z,GAA8B,UAAVA,GAAsB,sBAAKmL,UAAU,qBAAf,UACrD,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAU2D,SAxHH,SAAC3L,GAAD,OAAY8U,GAAa,SAAAF,GAChD,OAAO,2BAAKA,GAAZ,IAAyB9W,WAAYkC,EAAE4L,OAAOoH,cAuHUA,QAASlV,GAAjD,0BACCA,IAAc,cAAC,IAAD,CAAU6N,SAAU,SAAA3L,GAAC,OAAIgV,EAAehV,EAAE4L,OAAOoH,UAAUA,QAAS+B,EAApE,8BAElBjX,IAAc,qCACX,8BACI,cAAC,IAAD,CAAwBgO,YAAa,iCACjC,sBAAMyB,MAAO,CAAElO,MAAO,WAAtB,kBADiC,YAGrC0H,MAAO9I,GACP0N,SAAU,SAAA3L,GACN4V,EAAkB5V,GACd+U,GAAeY,EAAiB3V,KAN7B,gBASf,8BACI,cAAC,IAAD,CAAuB8L,YAAa,iCAChC,sBAAMyB,MAAO,CAAElO,MAAO,WAAtB,iBADgC,YAGpC0H,MAAO/I,GACP2N,SAAU,SAAA3L,GACF+U,GAAea,EAAkB5V,GACrC2V,EAAiB3V,KANV,eASf,qBAAKgI,UAAU,aAAauF,MAAO,CAAEgD,SAAU,YAA/C,SACI,cAACwD,GAAD,CACI/C,GAAG,kBACHmG,IAA0B,oBAArBF,GAAyCE,GAAa,KAC3DM,QAAS,kBAAMP,GAAoB,oBACnCQ,YAAU,EACV3L,YAAY,kBACZhF,MAAOgQ,GACPpL,SAAU,SAAAgM,GACN9B,EAAuB8B,GACvBX,GAAyBW,EAAG/L,OAAO7E,QAEvC6Q,KAAM,GAXI,2BAgB1B,cAAC,IAAD,CAAO9L,YAAY,OACfkF,GAAG,OACHmG,IAA0B,SAArBF,GAA8BE,GAAa,KAChDM,QAAS,kBAAMP,GAAoB,SACnCQ,YAAU,EACV/L,SAAU,SAAAgM,GACN,IAAM5Q,EAAQ4Q,EAAG/L,OAAO7E,MAExB2P,GAAsB3P,GACtBkP,EAAoBlP,EACftF,MAAM,KACN2M,KAAI,SAAAvO,GAAK,OAAIA,EAAMgY,UACnBnJ,QAAO,SAAA7O,GAAK,MAAqB,kBAAVA,GAAsBA,EAAMe,OAAS,OAErEmL,YAAY,iBACZwB,MAAO,CAAE9P,MAAO,QAChBsJ,MAAO0P,KAEX,cAAC,GAAD,CAAezO,UAAU,0BAA0BjB,MAAK,iBAAK5I,QAAL,IAAKA,OAAL,EAAKA,EAAaC,kBACtEuN,SAAU,SAAA5E,GAAK,OAhME,SAACA,GAC9B+N,GAAa,SAAAF,GACT,OAAO,2BACAA,GADP,IAEIzW,YAAY,2BACLyW,EAAYzW,aADR,IAEPC,iBAAkB2I,SA0LC+Q,CAAyB/Q,IAC5C6M,WAAYnE,GAFhB,SAII,wDAEJ,cAACsE,GAAD,CACI/C,GAAG,cACHmG,IAA0B,gBAArBF,GAAqCE,GAAa,KACvDM,QAAS,kBAAMP,GAAoB,gBACnCQ,YAAU,EACV3L,YAAY,cACZhF,MAAO8P,GACPe,KAAM,GACNjM,SAAU,SAAAgM,GACN7B,EAAe6B,GACfb,GAAiBa,EAAG/L,OAAO7E,SAVrB,UAad,sBAAKiB,UAAU,oBAAf,UACKwO,GACK,cAAC,IAAD,CACExF,GAAG,MACHmG,IAA0B,QAArBF,GAA6BE,GAAa,KAC/CM,QAAS,kBAAMP,GAAoB,QACnCpL,YAAY,MAAM4L,YAAU,EAAC3Q,MAAOxI,GAAKoN,SAAUoK,GAJ1C,OAKX,wBACLS,GACK,cAAC,IAAD,CACExF,GAAG,MACHmG,IAA0B,QAArBF,GAA6BE,GAAa,KAC/CM,QAAS,kBAAMP,GAAoB,QACnCpL,YAAY,MAAM4L,YAAU,EAAC3Q,MAAOvI,GAAKmN,SAAUqK,GAJ1C,OAKX,wBAEN,cAAC,IAAD,CACIhF,GAAG,WACHmG,IAA0B,aAArBF,GAAkCE,GAAa,KACpDM,QAAS,kBAAMP,GAAoB,aACnCQ,YAAU,EACV1P,UAAU,iBACV8D,YAAa,gDAAU,cAAC,GAAD,CAAcuI,OAAQxO,EAAgByO,WAAY6B,OACzExK,SAAUwK,EACVpK,YAAY,WACZhF,MAAOtI,KAEX,cAAC,IAAD,CACIuJ,UAAU,YACV2D,SA9MS,SAAC3L,GAAD,OAAY8U,GAAa,SAAAF,GAClD,OAAO,2BAAKA,GAAZ,IAAyBjW,eAAgBqB,EAAE4L,OAAOoH,cA8MlCA,QAASrU,GAHb,6BAOA,cAAC,IAAD,CAAOmN,YAAY,UACfkF,GAAG,UACHmG,IAA0B,YAArBF,GAAiCE,GAAa,KACnDM,QAAS,kBAAMP,GAAoB,YACnCQ,YAAU,EACV1P,UAAU,gBACV2D,SAAU0K,EACVtK,YAAY,UACZhF,MAAOnI,KAEX,cAAC,GAAD,CAAeoJ,UAAU,qCAAqCjB,MAAOrI,GAASiN,SAAUyK,EAAiBxC,WAAYpE,GAArH,SACI,mDAIZ,qBAAKxH,UAAU,mBAAf,SACI,cAACE,EAAD,CACIiP,IAAKlC,EACL3M,eAAgB,EAChBC,sBAAuBlL,EACvBsL,gBAAiBA,EACjBH,iBAAkBqM,EAClBjM,eAAgB6M,EAChB5M,cAAeA,EACfC,UAAWA,EARf,SAUKyN,GACK,cAAC,GAAD,CAAiBxI,aAAclQ,GAAS8N,SAAU+J,IAClD,8BA3JT,a,UC3NJqC,I,OAAY5P,IAAMoJ,MAAK,WAAO,IAAD,EACtC,OAAO,sBAAKvJ,UAAU,aAAf,UACH,qBAAKoH,IAAI,WAAW5B,IAAG,UAAK6B,aAAL,gBAA2C5R,MAAO,KACzE,sBAAKuK,UAAU,kBAAf,UACI,gDAAkB,wBAAOuF,MAAO,CAAEyK,WAAY,SAA5B,wBAAyC3I,UAAzC,EAA0E,UAA1E,aAClB,sBAAKrH,UAAU,mBAAf,UACI,yCAAW,2CACX,8CAAgB,uCAAhB,gBAA0C,mBACtCmF,KAAK,6FACLvB,OAAO,SACPqM,IAAI,aAHkC,yBAA1C,OAIA,cAAC,KAAD,CAASxF,iBAAiB,qBAAqBC,QAAS,sBAAK1K,UAAU,aAAf,UACpD,4CACA,+BACI,2FACA,sJACA,yGACA,qHAAuF,mBACnFmF,KAAK,oCACLvB,OAAO,SACPqM,IAAI,aAH+E,oBAAvF,sBANR,SAYI,cAACC,GAAA,EAAD,CAA2BlQ,UAAU,kCAKtD,kBAAM,MAEImQ,GAAuB,cAAC,KAAD,CAChC1F,iBAAiB,qBACjBlF,MAAO,CAAE6K,QAAS,gBAClB1F,QAAS,sBAAK1K,UAAU,aAAf,UACL,2DACA,wOAGA,wDACA,2OACqM,uBADrM,6GAIA,kDACA,iJACgH,uBADhH,+IAd4B,SAmBhC,cAACkQ,GAAA,EAAD,CAA2BlQ,UAAU,sB,+BC3C5BqQ,GAA8B,CACvC,CAAEC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAC3C,CAAEF,SAAU,GAAIC,WAAY,GAAIC,UAAW,IAC3C,CAAEF,SAAU,EAAGC,WAAY,EAAGC,UAAW,IACzC,CAAEF,SAAU,EAAGC,WAAY,EAAGC,UAAW,KAEhCC,GAA6B,CACtC,CAAEhb,MAAO,IAAKsT,IAAK,IAAKD,KAAM,OAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,OAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,OAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,OAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,OAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,OAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,QAQrB4H,GAA+B,CACxC,CAAEJ,SAAU,MAAOC,WAAY,MAAOC,UAAW,GACjD,CAAEF,SAAU,MAAOC,WAAY,MAAOC,UAAW,IAExCG,GAA8B,CACvC,CAAElb,MAAO,IAAKsT,IAAK,MAAOD,KAAM,OAChC,CAAErT,MAAO,IAAKsT,IAAK,MAAOD,KAAM,QAGvB8H,GAAyB,CAClC,CAAEN,SAAU,MAAOC,WAAY,MAAOC,UAAW,GACjD,CAAEF,SAAU,MAAOC,WAAY,MAAOC,UAAW,KAExCK,GAAwB,CACjC,CAAEpb,MAAO,IAAKsT,IAAK,IAAKD,KAAM,IAC9B,CAAErT,MAAO,IAAKsT,IAAK,IAAKD,KAAM,KAuBrBgI,GAAwC,CACjDC,MAAO,CACHhI,IAAK,IACLD,KAAM,GACNkI,YAAa,CACTjJ,KAAM,MACNkJ,aAAc,KACdC,iBAAkB,MAEtBC,cAAe,GACfC,eAAgB,EAChBC,cAAe,GACfC,eAAgB,IAChBC,WAAY,EACZC,UAAW,CACPC,WAAY,EACZ1J,KAAM,GACN2J,YAAa,IAEjBC,UAAW,GAEfC,OAAQ,CACJ7I,IAAK,MACLD,KAAM,GACNkI,YAAa,CACTjJ,KAAM,MACNkJ,aAAc,KACdC,iBAAkB,MAEtBC,cAAe,GACfC,eAAgB,EAChBC,cAAe,GACfC,eAAgB,IAChBC,WAAY,EACZC,UAAW,CACPC,WAAY,EACZ1J,KAAM,GACN2J,YAAa,IAEjBC,UAAW,GAEfE,MAAO,CACH9I,IAAK,IACLD,KAAM,IACNkI,YAAa,CACTjJ,KAAM,GACNkJ,aAAc,GACdC,iBAAkB,GAEtBC,cAAe,GACfC,eAAgB,IAChBC,cAAe,GACfC,eAAgB,EAChBC,WAAY,IACZC,UAAW,CACPC,WAAY,EACZ1J,KAAM,GACN2J,YAAa,IAEjBC,UAAW,KCpING,GAAoB,CAC7B,CAAE/I,IAAK,IAAKD,KAAM,GAAIrT,MAAO,GAAIC,OAAQ,IACzC,CAAEqT,IAAK,IAAKD,KAAM,IAAKrT,MAAO,GAAIC,OAAQ,IAC1C,CAAEqT,IAAK,IAAKD,KAAM,IAAKrT,MAAO,GAAIC,OAAQ,IAC1C,CAAEqT,IAAK,IAAKD,KAAM,GAAIrT,MAAO,GAAIC,OAAQ,IACzC,CAAEqT,IAAK,EAAGD,KAAM,EAAGrT,MAAO,EAAGC,OAAQ,GACrC,CAAEqT,IAAK,IAAKD,KAAM,IAAKrT,MAAO,GAAIC,OAAQ,IAC1C,CAAEqT,IAAK,IAAKD,KAAM,GAAIrT,MAAO,GAAIC,OAAQ,IACzC,CAAEqT,IAAK,IAAKD,KAAM,IAAKrT,MAAO,GAAIC,OAAQ,IAC1C,CAAEqT,IAAK,IAAKD,KAAM,IAAKrT,MAAO,GAAIC,OAAQ,KAGjCqc,GAER,CACD7a,KAAM,CACF8a,IAAK,CACDlJ,KAAM,IAGd3R,SAAU,CACN6a,IAAK,CACDlJ,KAAM,KC6BLmJ,GAAY,SACrB1P,EACAxD,EACAoK,EACA+I,GAEA,GAAI3P,GAAOxD,EAAO,CACd,IAAMoT,EAAY,UAAGpT,GAAQtF,MAAM,IAC/B2Y,EAAa,EAEjBD,EAAUtW,SAAQ,SAAAwW,GACdD,GAAyB,MAAVC,EAA+C,IAA/B9P,EAAI+P,YAAYD,GAAO5c,MAAe8M,EAAI+P,YAAYD,GAAO5c,SAEhG,IAAI8c,EAAUpJ,EAAOiJ,EAAa,EAElCD,EAAUtW,SAAQ,SAAAwW,GACd9P,EAAIiQ,SAASH,EAAiB,MAAVA,EAAgBE,EAAU,EAAIA,EAASL,GAC3DK,GAAsB,MAAVF,EAA+C,IAA/B9P,EAAI+P,YAAYD,GAAO5c,MAAe8M,EAAI+P,YAAYD,GAAO5c,WAK/Fgd,GAAsB,CACxBC,OAAQ,CACJ,EAAK,IACL,EAAK,IACL,EAAK,KAETC,MAAO,CACH,EAAK,IACL,EAAK,IACL,EAAK,KAETC,UAAW,CACP,EAAK,IACL,EAAK,IACL,EAAK,MAGAC,GAAa,SACtBtQ,EACAmI,GAME,IALFoI,EAKC,wDAJD/U,EAIC,wDAHDgV,EAGC,uDAHsB1C,GACvB2C,EAEC,uDAFqBvC,GACtBra,EACC,uDADgC,SAE7B6c,EAAkB,EAChBC,EAAe,SACfC,EAAoB,GACpBC,EAAgB,WAChBC,EAAkB,OAClBC,EAAc,IACpB,GAAI/Q,GAAOmI,EAAS,CAAC,IAAD,aAqBhB,IArBgB,MACV6I,EAAoB7U,EAAagM,EAAQmF,QACzC2D,EAA2C,UAAGf,GAAoBrc,UAAvB,QAA4Cqc,GAAmB,OAFhG,EAOZK,EACE,CACErU,KAAM8U,EACN/U,gBAAiB,GACjBH,SAAU,IAEZP,EAAYyV,EAAmBxV,GAT3BC,EAJM,EAIZS,KACiBH,EALL,EAKZE,gBACUP,EANE,EAMZI,SASEoV,GAAuBxV,EAAerF,OAAS,EAAI,EAAI,IAAM0F,EAAsB1F,OAAS,EAAI,EAAI,GACpG8a,EAAiB1V,EAAWvE,MAAM,MAElCka,EAAY,IAAI7Z,OAAJ,YAAgBsZ,GAAhB,OAAgCC,EAAhC,MAAqD,KACjEO,EAAmB,IAAI9Z,OAAOsZ,EAAe,KAnBnC,qBAsBgCL,EAASE,GAA7C3C,EAtBI,EAsBJA,SAAUC,EAtBN,EAsBMA,WAAYC,EAtBlB,EAsBkBA,UAtBlB,EAuB6BwC,EAASC,GAA1CnK,EAvBI,EAuBJA,KAAa+K,EAvBT,EAuBEpe,MAAmBsT,EAvBrB,EAuBqBA,IAC3BtT,EAAQsI,EAAW8V,EAAa,EAAIA,EACpCC,EAAY/Z,IACdga,EAAiB,IAEfC,EAAUtZ,KAAKP,IAAIuZ,EAAe9a,OAAQ4X,GAEhDjO,EAAI0R,KAAJ,UAAclW,EAAW,SAAW,GAApC,YAA0CuS,EAA1C,iBACA/N,EAAI2R,UAAY,OA0EhB,IAxEA,IAAMC,EAAa,SAACC,GAChB,IAAMC,EAAW9R,EAAI0R,KACfK,EAAuB,KAAXhE,EAClB/N,EAAI0R,KAAOI,EAAS3b,QAAQ,aAAc,UAAUA,QAAzC,UAAoD4X,GAApD,UAAmEgE,IAC9EF,IACA7R,EAAI0R,KAAOI,GAIXE,EAA+D,GA+D5DT,EAAU1Y,mBAAqB,GAAG,CACrC,GAAI0Y,EAAU1Y,mBAAqB,EAAG,CAElC2Y,EAAiBD,EAAUjZ,YAC3B,MAIA,IArEJ0Z,EAAW,GAEJb,EAAec,QAAO,SAACC,EAAMC,GAShC,IAPA,IAAMC,EAAgBb,EAAUjZ,YAAc,IACxC+Z,EAAYnf,EAAQkf,EACpBE,EAAgBH,EAAKjb,MAAMka,GAC7BmB,EAAmB,EACnBC,EAA0B,GAC1B3C,EAAa,EAPwB,WAShCjI,GACL,IAAI6K,EAAa,EAejB,GATIH,EAAc1K,KAAS+I,EAAc8B,EAAa7B,EAAoBwB,EAIjEf,EAAiBqB,KAAKJ,EAAc1K,IACzCgK,GAAW,WACPa,EAAazS,EAAI+P,YAAYuC,EAAc1K,IAAM1U,SAElDuf,EAAazS,EAAI+P,YAAYuC,EAAc1K,IAAM1U,MACpD2c,EAAa4C,EAAaJ,EAAW,CAErC,IAAMM,EAAaH,EAAcrb,KAAK,IAAImW,OAEpCsF,EAA6BD,EAAWzb,MAAMyZ,GACpDqB,EAAShc,KAAK,CACVoG,KAAMuW,EACNzf,MAAO0f,EAA2BX,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOlS,EAAI+P,YAAYoC,GAAMjf,QAAO,IACtF0f,EAA2Bvc,OAAS,GAAKua,EAAoBwB,EACpES,QAAQ,IAEZhD,EAAa4C,EACbD,EAAgB,CAACF,EAAc1K,IAC/B2K,GAAoB,OAEpB1C,GAAc4C,EACdD,EAAcxc,KAAKsc,EAAc1K,KAhChCA,EAAM,EAAGA,EAAM0K,EAAcjc,OAAQuR,IAAQ,EAA7CA,GAoCT,IAAM+K,EAAaH,EAAcrb,KAAK,IAAImW,OACpCsF,EAA6BD,EAAWzb,MAAMyZ,GAQpD,OAPAqB,EAAShc,KAAK,CACVoG,KAAMuW,EACNzf,MAAO0f,EAA2BX,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOlS,EAAI+P,YAAYoC,GAAMjf,QAAO,IACtF0f,EAA2Bvc,OAAS,GAAKua,EAAoBwB,EACpES,QAAQ,IAGLX,EAAOK,IACf,GAAKrB,GAYYO,EAEZF,EAAUnZ,iBACP,CACH,GAA8B,MAA1BmZ,EAAUjZ,YAAsB,MAC/BkZ,EAAiBD,EAAUtZ,iBAM5C,IAAM6a,EAAa,SAAC9S,EAA+B4G,EAAc+I,GAC7D3P,EAAI+S,YACJ/S,EAAIgT,IAAIpM,EAAO,EAAG+I,EAAW,IAAK,IAAK,EAAG,EAAIxX,KAAK8a,IAAI,GACvDjT,EAAIkT,OACJlT,EAAImT,UAAY,EAChBnT,EAAIoT,YAAc,UAClBpT,EAAIqT,UAGR,KAAK7B,GADc,UAAGP,EAAoB,GAAD,OAAIE,EAAe9a,gBAAzC,QAAsD4a,EAAoB,KAE1FP,EAAkBF,EAASna,OAAS,GAEhC,CACA,OAAH2J,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KAC1B,IAAI3D,EAAWnJ,EAAMwH,EACrB,GAAItS,EAAerF,OAAS,EAAG,CAC3B,IAAIkd,EAAcvT,EAAI+P,YAAYrU,GAAgBxI,MAC9Ckf,EAAgBja,KAAKR,IAAIzE,EAAQqgB,EAAa,GAElDvT,EAAIwT,MAAMpB,EAAe,GACzBpS,EAAIiQ,SAASvU,EAAgB6K,EAAO6L,EAAezC,GACnDA,GAAY3B,EACZhO,EAAIwT,MAAM,EAAIpB,EAAe,GAajC,IAAMqB,EAAejC,EAAiB,IA2HtC,GA1HAQ,EAAS1Y,SAAQ,YAIV,IAHH8C,EAGE,EAHFA,KAEAyW,GACE,EAFF3f,MAEE,EADF2f,QAEMT,EAAgBS,EAChB1a,KAAKR,IAAI8b,EAAc,GACvBA,EAGN,GADAzT,EAAIwT,MAAMpB,EAAe,GACrBS,EAAQ,CACR,IAAMa,EAAW,IAAInc,OAAJ,YAAgBoZ,GAAhB,OAA+BE,EAA/B,MAAkD,KAC9CzU,EAAKlF,MAAMwc,GAEnBzB,QAAO,SAACC,EAAMjO,EAAKH,GAC5B,IAAI8C,EAAOsL,EAqBX,OAlBIpO,EAAQ,IAAM,GACd9D,EAAIiQ,SAAShM,EAAK2C,EAAOwL,EAAezC,GACxC/I,GAAQ5G,EAAI+P,YAAY9L,GAAK/Q,MAAQkf,GAGjCnO,IAAQ0M,GACR3Q,EAAIwT,MAAM,EAAIpB,EAAe,GAC7BU,EAAW9S,EAAK4G,EAAM+I,GACtB/I,GAAQ,GACR5G,EAAIwT,MAAMpB,EAAe,IAEzBR,GAAW,WACP5R,EAAIiQ,SAAShM,EAAK2C,EAAOwL,EAAezC,GACxC/I,GAAQ5G,EAAI+P,YAAY9L,GAAK/Q,MAAQkf,KAK1CxL,IACRL,OACA,CAYH,IAAMmN,EAAW,IAAInc,OAAJ,YAAgBoZ,GAAhB,OAA+BE,GAA/B,OAA+CE,EAA/C,MAAgE,KAC3E4C,EAAqBvX,EAAKlF,MAAMwc,GAChCE,EAAoC,IAAIC,IAC1CC,EAAgB,EAChBC,EAAa,EAEjBJ,EAAmBra,SAAQ,SAAChE,EAAOwO,GAC3BxO,IAAUyb,EAKN4C,EAAmB7P,EAAQ,KAAO6M,GAClCiD,EAAqBI,IAAIlQ,EAAQ,GACjCgQ,GAAiB9T,EAAI+P,YAAYza,GAAOpC,MAAQkf,GAEhD2B,GAAc,EAEXze,IAAUqb,EACjBmD,GAAiB,GACVzC,EAAiBqB,KAAKpd,GAC7Bsc,GAAW,kBAAMkC,GAAiB9T,EAAI+P,YAAYza,GAAOpC,MAAQkf,KAEjE0B,GAAiB9T,EAAI+P,YAAYza,GAAOpC,MAAQkf,KAIxD,IAAM6B,EAAaF,EAAa,GAAK7gB,EAAQ4gB,GAAiBC,EAAa,EAE3EJ,EAAmB1B,QAAO,SAACC,EAAMjO,EAAKH,GAClC,IAAI8C,EAAOsL,EAmCX,OAhCIpO,EAAQ,IAAM,GACd9D,EAAIiQ,SAAShM,EAAK2C,EAAOwL,EAAezC,GACxC/I,GAAQ5G,EAAI+P,YAAY9L,GAAK/Q,MAAQkf,GAGjCnO,IAAQ0M,GACR3Q,EAAIwT,MAAM,EAAIpB,EAAe,GAC7BU,EAAW9S,EAAK4G,EAAM+I,GACtB/I,GAAQ,GACR5G,EAAIwT,MAAMpB,EAAe,GAMrBwB,EAAqBM,IAAIpQ,KACzB9D,EAAIiQ,SAASc,EAAanK,EAAOwL,EAAezC,GAChD/I,GAAQ5G,EAAI+P,YAAYgB,GAAa7d,MAAQkf,IAE1CnO,IAAQ8M,EAIV6C,EAAqBM,IAAIpQ,EAAQ,KAAI8C,GAAQqN,GAElDrC,GAAW,WACP5R,EAAIiQ,SAAShM,EAAK2C,EAAOwL,EAAezC,GACxC/I,GAAQ5G,EAAI+P,YAAY9L,GAAK/Q,MAAQkf,KAK1CxL,IACRL,GAEPvG,EAAIwT,MAAM,EAAIpB,EAAe,GAC7BzC,GAAY3B,KAGZjS,EAAsB1F,OAAS,EAAG,CAClC,IAAIkd,EAAcvT,EAAI+P,YAAYhU,GAAuB7I,MACrDkf,EAAgBja,KAAKR,IAAIzE,EAAQqgB,EAAa,GAElDvT,EAAI0R,KAAJ,UAAc3D,EAAd,iBACA/N,EAAIwT,MAAMpB,EAAe,GACzBpS,EAAIiQ,SAASlU,EAAuBwK,EAAO6L,EAAezC,GAC1DA,GAAY3B,EACZhO,EAAIwT,MAAM,EAAIpB,EAAe,GAEjC,cA7JA1B,GAAmB,GAlHpBA,EAAkBF,EAASna,QAAQ,kBA+QlC,MAIR,MAAM,CAAN,EAAOqa,GAxSS,qCA0SpB,OAAOA,GCjZKyD,GAAqCtiB,EAAhBuiB,GAAgBviB,EA4BxCwiB,GAA0B,SACnCrU,EACAsU,EACAC,EACA3N,EACA+I,GAEA,GAAI3P,GAAOsU,EAAK,CACZtU,EAAI2R,UAAY,OAChB,IAAM6C,EAAWF,EAAIpd,MAAM,IACvBud,EAAU7N,EAOd,OALA4N,EAASlb,SAAQ,SAAAkM,GACbxF,EAAIiQ,SAASzK,EAAMiP,EAAS9E,GAC5B8E,GAAWzU,EAAI+P,YAAYvK,GAAMtS,OAAS,EAAKqhB,EAAqB,MAGjEE,EAEX,OAAO,GAEEC,GAA2B,SACpC1U,EACAsU,EACAC,EACA3N,EACA+I,GAEA,GAAI3P,GAAOsU,EAAK,CACZtU,EAAI2R,UAAY,QAChB,IAAM6C,EAAWF,EAAIpd,MAAM,IACvByd,EAAW/N,EAOf,OALA4N,EAASlb,SAAQ,SAACsb,EAAG9Q,GACjB,IAAM0B,EAAOgP,EAASA,EAASne,OAASyN,EAAQ,GAChD9D,EAAIiQ,SAASzK,EAAMmP,EAAUhF,GAC7BgF,GAAY3U,EAAI+P,YAAYvK,GAAMtS,OAAS,EAAKqhB,EAAqB,MAElEI,EAEX,OAAO/N,GAuBEiO,GAAc,SACvB7U,GAEIA,GACAA,EAAIsT,UAAU,EAAG,EAAGc,GAAaD,KC3E5BW,GAAkB,SAC3B9U,EACAmI,GAEA,GAAInI,GAAOmI,EAAS,CAChBnI,EAAI0R,KAAO,2BAEX,IAHgB,EDtBS,SAC7B1R,EACAmI,EACA4M,EACAC,GAEA,IAAMC,EAAkB9M,EAAQjR,MAAM6d,GAChCG,EAAgBD,EAAgBpR,KAAI,SAAAvO,GAAK,OAAI0K,EAAI+P,YAAYza,GAAOpC,SACpEiiB,EAAcnV,EAAI+P,YAAYgF,GAAQ7hB,MACtCkiB,EAAwBF,EAAcjD,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,GAC1EkD,EAAe,CACjBJ,kBACAC,gBACAC,cACAC,wBACAhD,cAAe,GAQnB,OALIgD,EAAwB,IAExBC,EAAajD,cAAgBja,KAAKR,KAAKqd,GAAYE,EAAc7e,OAAS,GAAK8e,GAAeC,EAAuB,IAGlHC,ECQCC,CAAkBtV,EAAKmI,EANC,OAM6B,KAJrD8M,EALY,EAKZA,gBACAC,EANY,EAMZA,cACAC,EAPY,EAOZA,YACA/C,EARY,EAQZA,cAGAA,EAAgB,GAChBpS,EAAI2R,UAAY,OAChB3R,EAAIwT,MAAMpB,EAAe,GACzB6C,EAAgBhD,QAAO,SAACC,EAAMjO,EAAKH,GAE/B9D,EAAIiQ,SAAShM,EAAKiO,EAAOE,EAAe,KAExC,IAAImD,EAAWrD,EAAOgD,EAAcpR,GAASsO,EAU7C,OATItO,EAAQmR,EAAgB5e,OAAS,IAEjC2J,EAAIwT,MAAM,EAAIpB,EAAe,GAE7BpS,EAAIiQ,SApBY,OAoBkBsF,EAAU,KAC5CA,GAAYJ,EAEZnV,EAAIwT,MAAMpB,EAAe,IAEtBmD,IACR,KACHvV,EAAIwT,MAAM,EAAIpB,EAAe,KAE7BpS,EAAI2R,UAAY,QAChB+C,GAAyB1U,EAAKmI,GAAU,IAAM,IAAMiK,EAAe,MAEvEpS,EAAI2R,UAAY,SAIX6D,GAAS,SAClBxV,EACAxD,EACAoK,EACA+I,GAEA,GAAI3P,QAAiBpF,IAAV4B,EACP,GAAc,WAAVA,EACAwD,EAAI2R,UAAY,QAChB3R,EAAI0R,KAAO,mBACX1R,EAAIiQ,SAASzT,EAAOoK,EAAO,MAAO+I,OAC/B,CACH3P,EAAI2R,UAAY,OAChB,IAAMW,EAAgB,UAAG9V,GAAQtF,MAAM,KAEnC2Y,EAAayC,EAAcL,QAAO,SAACC,EAAMC,EAAMrO,GAC/C9D,EAAI0R,KAAO,2BACX,IAAI+D,EAAYvD,EAAOlS,EAAI+P,YAAYoC,GAAMjf,MAO7C,OALI4Q,EAAQwO,EAAcjc,OAAS,IAC/B2J,EAAI0R,KAAO,cACX+D,GAAazV,EAAI+P,YAAY,KAAK7c,OAG/BuiB,IACR,GAEH,GAAI5F,EAAa,EAAG,CAChB,IAAMuC,EAAgBja,KAAKR,IAAI,MAAQkY,EAAY,GAEnD7P,EAAIwT,MAAMpB,EAAe,GACzBE,EAAcL,QAAO,SAACC,EAAMC,EAAMrO,EAAO4R,GACrC,IAAMC,EAAUD,EAAIA,EAAIrf,OAAS,EAAIyN,GACjCyR,EAAWrD,EAWf,OAVAlS,EAAI0R,KAAO,2BACX6D,GAAYvV,EAAI+P,YAAY4F,GAASziB,MAAQkf,EAC7CpS,EAAIiQ,SAAS0F,EAASJ,EAAWnD,EAAezC,GAE5C7L,EAAQwO,EAAcjc,OAAS,IAC/B2J,EAAI0R,KAAO,mBACX6D,GAAYvV,EAAI+P,YAAY,KAAK7c,MAAQkf,EACzCpS,EAAIiQ,SAAS,IAAKsF,EAAWnD,EAAezC,IAGzC4F,IACR3O,EAAO,OACV5G,EAAIwT,MAAM,EAAIpB,EAAe,MC5GhCwD,GAAsB,SAC/B5V,EACAmI,EACAzK,EACAmY,GAEA,OAAO,SAACjP,GACJ,GAAI5G,EAAK,CAAC,IAEG2P,EAELjS,EAFA8I,IAFC,EAID9I,EADA+Q,YAAqBqH,EAHpB,EAGctQ,KAAmBmJ,EAHjC,EAGiCA,iBAEhCoH,EAAgC,SAAdF,EAAuB,GAAK,EAKpD,OAHA7V,EAAI0R,KAAJ,eAAmBoE,EAAnB,uBACA9V,EAAI2R,UAAYkE,EAChB7V,EAAIiQ,SAAS9H,EAASvB,EAAM+I,EAAWhB,GAChC/H,EAAO5G,EAAI+P,YAAY5H,GAASjV,MAAQ6iB,EAEnD,OAAOnP,IAGFoP,GAAwB,SACjChW,EACAtC,EACAmY,GAEA,OAAO,SAACjP,GACJ,OAAI5G,EAIO4G,EAHelJ,EAAd0R,WAC8B,SAAdyG,EAAuB,GAAK,GAIjDjP,IAGFqP,GAA2B,SACpCjW,EACAmI,EACAzK,EACAmY,GAEA,OAAO,SAACjP,GACJ,GAAI5G,EAAK,CAAC,IACO2P,EAA4CjS,EAAjD8I,IAA8BkI,EAAmBhR,EAAlC+Q,YAAeC,aAChCqH,EAAgC,SAAdF,EAAuB,GAAK,EAKpD,OAHA7V,EAAI0R,KAAJ,eAAmBhD,EAAnB,uBACA1O,EAAI2R,UAAYkE,EAChB7V,EAAIiQ,SAAS9H,EAASvB,EAAM+I,GACrB/I,EAAO5G,EAAI+P,YAAY5H,GAASjV,MAAQ6iB,EAEnD,OAAOnP,IAGFsP,GAAmB,SAC5BlW,EACAmI,GAIE,IAHF0K,EAGC,wDAFDnV,EAEC,uCADDmY,EACC,uCAEQlG,EAOLjS,EAPA8I,IAFH,EASG9I,EANAuR,UAAaC,EAHhB,EAGgBA,WAAkBiH,EAHlC,EAG4B3Q,KAAiB2J,EAH7C,EAG6CA,YAC1CN,EAKAnR,EALAmR,eACAD,EAIAlR,EAJAkR,cACAG,EAGArR,EAHAqR,eACAD,EAEApR,EAFAoR,cACAE,EACAtR,EADAsR,WAEE+G,EAAgC,SAAdF,EAAuB,GAAK,EAC9CO,EAAoB,SACtBpW,EACAqW,GAEA,IAAIC,EAAcD,EAclB,OAbArW,EAAI0R,KAAJ,eAAmBxC,EAAnB,uBACAlP,EAAIiQ,SAAS,IAAKqG,EAAa3G,GAC/B2G,GAAetW,EAAI+P,YAAY,KAAK7c,MAAQ6iB,EAE5C/V,EAAI0R,KAAJ,uBAA2ByE,EAA3B,uBACAnW,EAAIwT,MAAM,IAAM,GAChBxT,EAAIiQ,SAAS,IAAKqG,EAAc,IAAM3G,GACtC2G,GAA4C,IAA7BtW,EAAI+P,YAAY,KAAK7c,MAAe6iB,EACnD/V,EAAIwT,MAAM,EAAI,IAAM,GAEpBxT,EAAI0R,KAAJ,eAAmBvC,EAAnB,uBACAnP,EAAIiQ,SAAS,IAAKqG,EAAa3G,GAC/B2G,GAAetW,EAAI+P,YAAY,KAAK7c,MAAQ6iB,GAIhD,OAAO,SAACxP,GACJ,IAAI+P,EAAc/P,EAClB,OAAIvG,GACAA,EAAI2R,UAAYkE,EAEXhD,GAAwB,UAAdgD,IAAuBS,EAAcF,EAAkBpW,EAAKsW,IAC3EnO,EACKjR,MAAM,IACNoC,SAAQ,SAACsb,EAAG9Q,EAAO4R,GAChB,IAAMlQ,EAAqB,SAAdqQ,EAAuBH,EAAI5R,GAAS4R,EAAIA,EAAIrf,OAAS,EAAIyN,GACtE,GAAI,QAAQ4O,KAAKlN,GACbxF,EAAI0R,KAAJ,eAAmB9C,EAAnB,uBACA5O,EAAIwT,MAAM3E,EAAgB,GAC1B7O,EAAIiQ,SAASzK,EAAM8Q,EAAczH,EAAgBc,GACjD2G,GAAetW,EAAI+P,YAAYvK,GAAMtS,MAAQ2b,EAAiBkH,EAC9D/V,EAAIwT,MAAM,EAAI3E,EAAgB,QAC3B,GAAI,KAAK6D,KAAKlN,GACjBxF,EAAI0R,KAAJ,eAAmB5C,EAAnB,uBACA9O,EAAIwT,MAAMxE,EAAY,GACtBhP,EAAIiQ,SAASzK,EAAM8Q,EAActH,EAAYW,GAC7C2G,GAAetW,EAAI+P,YAAYvK,GAAMtS,MAAQ8b,EAAa+G,EAC1D/V,EAAIwT,MAAM,EAAIxE,EAAY,OACvB,CACH,IAAMuH,EAAY/Q,EAAKjB,oBACvBvE,EAAI0R,KAAJ,eAAmB5C,EAAnB,uBACA9O,EAAIwT,MAAMzE,EAAgB,GAC1B/O,EAAIiQ,SAASsG,EAAWD,EAAcvH,EAAgBY,GACtD2G,GAAetW,EAAI+P,YAAYwG,GAAWrjB,MAAQ6b,EAAiBgH,EACnE/V,EAAIwT,MAAM,EAAIzE,EAAgB,OAGrC8D,GAAwB,SAAdgD,IAAsBS,EAAcF,EAAkBpW,EAAKsW,IACnEA,GAEJA,ICnITE,GAGD,GAEQC,GAAc,uCAAG,WAC1BzW,EACAiB,EACAyV,EACAC,GAJ0B,SAAAhgB,EAAA,yDAMrBqJ,EANqB,yCAMT,IAAI4W,SAAiB,SAAAC,GAAO,OAAIA,GAAQ,OAN/B,gCAOnB,IAAID,SAAiB,SAAAC,GAAY,IAAD,EACnC,IAAqC,KAAjC,UAAAL,GAAcvV,UAAd,eAAuB6V,OAAgB,CACvC,IAAMnX,EAAM6W,GAAcvV,GAAQnB,MAC9BiX,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG/W,GAC/CqX,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGhX,GACnDK,EAAIc,UAAUnB,EAAKoX,EAAaC,GAChCH,GAAQ,OACL,CACH,IAAMlX,EAAM,IAAIsX,MAChBtX,EAAIsD,IAAM6B,aAAyB7D,EACnCtB,EAAIuX,OAAS,WACT,IAAIH,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG/W,GAC/CqX,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGhX,GACnDK,EAAIc,UAAUnB,EAAKoX,EAAaC,GAChCR,GAAcvV,GAAQ6V,OAAQ,EAC9BD,GAAQ,IAEZlX,EAAIwX,QAAU,WACVN,GAAQ,IAEZL,GAAcvV,GAAU,CACpBnB,MAAOH,EACPmX,OAAO,QA7BO,2CAAH,4DAmCdM,GAAsB,uCAAG,WAClCpX,EACAiB,EACAyV,EACAC,EACAU,EAAYC,GALsB,SAAA3gB,EAAA,yDAO7BqJ,EAP6B,yCAOjB,IAAI4W,SAAiB,SAAAC,GAAO,OAAIA,GAAQ,OAPvB,gCAQ3B,IAAID,SAAiB,SAAAC,GAAY,IAAD,EACnC,IAAqC,KAAjC,UAAAL,GAAcvV,UAAd,eAAuB6V,OAAgB,CACvC,IAAMnX,EAAM6W,GAAcvV,GAAQnB,MAC9BiX,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG/W,GAC/CqX,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGhX,GACnDK,EAAIc,UAAUnB,EAAKoX,EAAaC,EAAaK,EAAIC,GACjDT,GAAQ,OACL,CACH,IAAMlX,EAAM,IAAIsX,MAChBtX,EAAIsD,IAAM6B,aAAyB7D,EACnCtB,EAAIuX,OAAS,WACT,IAAIH,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAG/W,GAC/CqX,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGhX,GACnDK,EAAIc,UAAUnB,EAAKoX,EAAaC,EAAaK,EAAIC,GACjDd,GAAcvV,GAAQ6V,OAAQ,EAC9BD,GAAQ,IAEZlX,EAAIwX,QAAU,WACVN,GAAQ,IAEZL,GAAcvV,GAAU,CACpBnB,MAAOH,EACPmX,OAAO,QA9Be,2CAAH,gECJtBS,GAAsB,SAACC,EAAiBC,EAA6BxiB,EAAYuP,GAAuB,IAE7GkT,EAgBAD,EAhBAC,UACAC,EAeAF,EAfAE,cACAC,EAcAH,EAdAG,YACAC,EAaAJ,EAbAI,mBACAC,EAYAL,EAZAK,gBACAC,EAWAN,EAXAM,cACAC,EAUAP,EAVAO,aACAC,EASAR,EATAQ,WACAC,EAQAT,EARAS,eACAC,EAOAV,EAPAU,qBACAC,EAMAX,EANAW,oBACAC,EAKAZ,EALAY,YACAC,EAIAb,EAJAa,WACAC,EAGAd,EAHAc,cACAC,EAEAf,EAFAe,gBACAC,EACAhB,EADAgB,WAGAnmB,EAYA2C,EAZA3C,MAAOC,EAYP0C,EAZO1C,KACPC,EAWAyC,EAXAzC,KAAMC,EAWNwC,EAXMxC,cAAeC,EAWrBuC,EAXqBvC,UACrBoB,EAUAmB,EAVAnB,OACAF,EASAqB,EATArB,YACAD,EAQAsB,EARAtB,YACAJ,EAOA0B,EAPA1B,WAAYC,EAOZyB,EAPYzB,eAAgBE,EAO5BuB,EAP4BvB,kBAAmBD,EAO/CwB,EAP+CxB,iBAC/CO,EAMAiB,EANAjB,IAAKC,EAMLgB,EANKhB,IAAKX,EAMV2B,EANU3B,QACVX,EAKAsC,EALAtC,UACAC,EAIAqC,EAJArC,UACAC,EAGAoC,EAHApC,KACAkB,EAEAkB,EAFAlB,MACAG,EACAe,EADAf,SAAUE,EACVa,EADUb,eAAgBC,GAC1BY,EAD0BZ,QAASF,GACnCc,EADmCd,QAEjCqH,GpBnEiB,SAACvG,GACxB,MAAsB,WAAfA,EAAK3C,OAAsB6C,EAAaF,GoBkE9ByjB,CAAYzjB,GACvB8W,GAAQ/W,EAASC,GACjB+W,GAAS9W,EAAUD,GACnBgX,GAAY9W,EAAaF,GAE3B0jB,GAGAnU,EAHAmU,eACAC,GAEApU,EAFAoU,iBAvC4G,GAyC5GpU,EADAqU,qBAxC4G,OAwC7F,SAxC6F,GA2C1GC,GAAkB1Z,iBAA2C,CAC/D9M,MAAO,kBAAMskB,QAAQC,WACrBhkB,KAAM,kBAAM+jB,QAAQC,WACpBlkB,UAAW,kBAAMikB,QAAQC,WACzBkC,aAAc,kBAAMnC,QAAQC,WAC5B1iB,QAAS,kBAAMyiB,QAAQC,aAG3BhX,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAG0X,EAAU9X,eAAb,aAAG,EAAmBK,WAAW,MACpC+Y,EAAarB,EAAc/X,QAC7BoZ,GAAchZ,IACdA,EAAIsT,UAAU,EAAG,EAAG,IAAK,KACrB/f,EACAyM,EAAIc,UAAUkY,EAAY,GAAI,IAAK,IAAK,KAExChZ,EAAIc,UAAUkY,EAAY,GAAI,IAAK,IAAK,SAIrD,CAACxB,EAAQjkB,EAAYqlB,GAAkBlB,EAAWC,IAErD9X,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAG4X,EAAYhY,eAAf,aAAG,EAAqBK,WAAW,MAE5C6Y,GAAgBlZ,QAAQtN,MAAxB,sBAAgC,gCAAAqE,EAAA,6DAC5Bke,GAAY7U,GACNiZ,EAAW7jB,EAAa9C,GACxB4mB,EAAmB,WAAT3mB,EAHY,SAKtBkkB,GAAezW,EAAD,mCAAkCiZ,EAAlC,QAAkD,EAAG,GAL7C,WAMxBC,EANwB,wBAOhBzJ,EAAQD,GAAajd,GAArBkd,IAPgB,SASlBgH,GAAezW,EAAD,uCAAsCzN,EAAtC,QAAkDkd,EAAIlJ,KAAM,KATxD,wBAUlBkQ,GAAezW,EAAD,0CAAyCzN,EAAzC,QAAqD,EAAG,KAVpD,+CAcrC,CAACilB,EAAQjlB,EAAMD,EAAOslB,IAEzB/X,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAG6X,EAAmBjY,eAAtB,aAAG,EAA4BK,WAAW,MAEnD6Y,GAAgBlZ,QAAQmZ,aAAxB,sBAAuC,gCAAApiB,EAAA,yDACnCke,GAAY7U,GACNkZ,EAAmB,WAAT3mB,EAEV0mB,EAAW7jB,EAAa9C,IAC1BiB,GAAeyY,GALgB,oBAM1BD,GAN0B,gCAMb0K,GAAezW,EAAD,iDAAgDiZ,EAAhD,QAAgE,EAAG,GANpE,uBAOzBxC,GAAezW,EAAD,4CAA2C6Y,GAA3C,QAA+D,EAAG,GAPvD,WAQ3BK,EAR2B,kCAQZzC,GAAezW,EAAD,4CAA2C6Y,GAA3C,YAA2DtmB,EAA3D,QAAuE,EAAG,GAR5E,eAW7B4mB,EAAgBD,EAAD,0CAAsF3mB,EAAtF,QAAW,sCAXG,UAY7BkkB,GAAezW,EAAKmZ,EAAc,EAAG,GAZR,WAa9B5lB,IAAcyY,GAbgB,qBAc3BkN,EAd2B,kCAcZzC,GAAezW,EAAD,0CAAyCzN,EAAzC,QAAqD,EAAG,KAd1D,iDAepBkkB,GAAezW,EAAK,qCAAsC,GAAI,KAf1C,YAgB3BkZ,EAhB2B,kCAgBZzC,GAAezW,EAAD,+CAA8CzN,EAA9C,QAA0D,EAAG,KAhB/D,yBAkBzBqkB,QAAQwC,IAAI9lB,EACbuQ,KAAI,SAAAvO,GAAU,IAAD,EAC2Bia,GAAkB8J,SAAS/jB,GAAS,GAAjEiR,EADE,EACFA,KAAMC,EADJ,EACIA,IAAKrT,EADT,EACSA,OAAQD,EADjB,EACiBA,MAC3B,OAAoBkkB,GAAuBpX,EAAvCkZ,EAAsC,uCAAsC5jB,EAAtC,YAA+C/C,EAA/C,QACR,uCAAsC+C,EAAtC,QADmEiR,EAAMC,EAAKtT,EAAOC,OArBhG,QAyB3B6M,IACAA,EAAI2R,UAAY,QAChB3R,EAAIwT,MAAM,IAAK,GACfxT,EAAI0R,KAAO,wCACX1R,EAAIiQ,SAAJ,UAAgB3c,EAAQ+C,QAAU,IAAM,IAAK,KAC7C2J,EAAIwT,MAAM,EAAI,IAAK,GACnBxT,EAAI2R,UAAY,QA/BW,+CAoC5C,CAAC6F,EAAQjlB,EAAMD,EAAO0Z,GAAQzY,EAAYwY,GAAOzY,EAASulB,GAAchB,IAE3EhY,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAG8X,EAAgBlY,eAAnB,aAAG,EAAyBK,WAAW,MAChD6Y,GAAgBlZ,QAAQjN,UAAY,WAGhC,OAFG,OAAHqN,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KAEnBmD,GAAezW,EAAD,sCAAqCrN,EAAU4C,cAA/C,QAAoE,IAAK,QAGvG,CAACiiB,EAAQ7kB,EAAWmlB,IAEvBjY,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGwY,EAAgB5Y,eAAnB,aAAG,EAAyBK,WAAW,MAChD6Y,GAAgBlZ,QAAQ/M,KAAO,WAE3B,GADG,OAAHmN,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KACtBrH,KAAcD,GAAQ,CACtB,IAAIsN,EAAUnhB,KAAKR,IAAI,GAAT,OAAa9E,QAAb,IAAaA,IAAQ,GAC/B6O,EAAOqK,GAAQ,OAAS,QACxBwN,GAAS,QACT1J,EAAa,GAAKyJ,EAAU,QAAUA,EAAU,GAChD1S,EAAO0S,GAAW,GAChBvN,GACI,GACA,IACJA,IACK,IAAM8D,GAAc,EAAI,IACxB,IAAMA,GAAc,EAAIA,EAEnC,OAAO+G,QAAQwC,IAAI,YAAI3f,MAAM6f,IACxBzV,KAAI,WAED,OADA0V,GAAW,QACJ9C,GACHzW,EADiB,4CAEoB0B,EAFpB,QAGjBkF,GAAQ,GAAK2S,IAAWxN,GAAQ,GAAK,GACrC,QAIT,IAAKE,GAAW,CACnB,IAAMuN,EAAsB5mB,EAAUqa,cAGtC,MAF0C,YAAxBuM,GAAqC/kB,EAASoB,SAAS2jB,GAGnEpC,GAAuBpX,EAAD,4CAA2CwZ,EAAoBjkB,cAA/D,SACpB,SAACuK,GAAD,OAAW,IAAMA,EAAMK,aAAe,IACtC,IACA,GAAI,IACN,IAAIyW,SAAQ,SAAAC,GAAO,OAAIA,GAAQ,MAEzC,OAAO,IAAID,SAAQ,SAAAC,GAAO,OAAIA,GAAQ,UAG/C,CAACW,EAAQxL,GAAQC,GAAWF,GAAOlZ,EAAMD,EAAW4lB,IAEvD3Y,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EAEFxX,EAAG,UAAGoY,EAAoBxY,eAAvB,aAAG,EAA6BK,WAAW,MAEjD,OAAHD,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KACtBtT,GAAOzM,IACPyM,EAAI0R,KAAJ,UALa,GAKb,0BACA1R,EAAI2R,UAAY,OAEhBjC,GAAU1P,EAAD,OAAMtM,QAAN,IAAMA,IAAqB,EAAG,GAAI,KAC3Cgc,GAAU1P,EAAD,OAAMvM,QAAN,IAAMA,IAAoB,EAAG,IAAK,SAGpD,CAACklB,GAAgBjlB,EAAmBH,EAAYE,EAAkB+jB,EAAQY,IAE7EvY,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGiY,EAAWrY,eAAd,aAAG,EAAoBK,WAAW,MAC3C,GAAID,EAAK,CAAC,IAAD,EACLA,EAAIsT,UAAU,EAAG,EAAG,IAAK,KACzBtT,EAAI2R,UAAY,OAChB,IAAM3O,EAA0B,SAAlBvQ,EACC,WAATF,EAAA,UACImC,EAAanC,UADjB,QAC0BT,EAD1B,2BAESA,GAFT,IAE2BC,WAAaka,IAAaD,IAAUD,GAAS,UAAY,YACpFrZ,GLlPE,SACpBsN,EACAxD,EACAoK,EACA+I,EACAqF,EACAhS,GAEA,GAAIhD,GAAOxD,EAAO,CACdwD,EAAIjO,UAAYiR,EAAMjR,UAClBiR,EAAM5Q,YACN4N,EAAIhO,YAAcgR,EAAMhR,YACxBgO,EAAI/N,cAAgB+Q,EAAM/Q,cAC1B+N,EAAI9N,cAAgB8Q,EAAM9Q,cAC1B8N,EAAI7N,WAAa6Q,EAAM7Q,YAE3B,IAAMsnB,EAAetd,EAAaK,GAAOtF,MAAM,2BACzCwiB,EAAeD,EAChBxH,QAAO,SAACC,EAAMjO,EAAKH,GAIhB,OAHqB9D,EAAI0R,KAArB5N,EAAQ,IAAM,EAAc,iCAChB,iBAEToO,EAAOlS,EAAI+P,YAAY9L,GAAK/Q,QACpC,GAGP,GAAIwmB,EAAe,EAAG,CAClB,IAAMtH,EAAgBja,KAAKR,IAAIqd,EAAW0E,EAAc,GACxD1Z,EAAIwT,MAAMpB,EAAe,GACzBqH,EACKxH,QAAO,SAACC,EAAMjO,EAAKH,GAKhB,OAJqB9D,EAAI0R,KAArB5N,EAAQ,IAAM,EAAc,iCAChB,4BAEhB9D,EAAIiQ,SAAShM,EAAKiO,EAAOE,EAAezC,GACjCuC,EAAOlS,EAAI+P,YAAY9L,GAAK/Q,MAAQkf,IAC5CxL,GACP5G,EAAIwT,MAAM,EAAIpB,EAAe,GAEjCpS,EAAIjO,UAAYD,EAAiBC,UACjCiO,EAAIhO,YAAcF,EAAiBE,YACnCgO,EAAI/N,cAAgBH,EAAiBG,cACrC+N,EAAI9N,cAAgBJ,EAAiBI,cACrC8N,EAAI7N,WAAaL,EAAiBK,YKyM1BwnB,CAAS3Z,EAAKxN,EAAM,MAAO,GAAI,IAAKwQ,OAG7C,CAACwU,EAAQjlB,EAAMomB,GAAgB3M,GAAQC,GAAWF,GAAOvZ,EAAMylB,EAAYvlB,EAAWD,IAEzFoN,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGsY,EAAW1Y,eAAd,aAAG,EAAoBK,WAAW,MAC3C4U,GAAY7U,GACRiM,KACAuJ,GAAOxV,EAAKhM,EAAK,OAAQ,KACpBgY,IACDwJ,GAAOxV,EAAK/L,EAAK,OAAQ,SAItC,CAAC0kB,GAAgB3kB,EAAKC,EAAK+X,GAAQC,GAAWuL,EAAQc,IAEzDzY,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGqY,EAAYzY,eAAf,aAAG,EAAqBK,WAAW,MAC5C4U,GAAY7U,GACRA,IAC0BA,EAAIjO,UAA1Bga,KAAUxY,EAA4B,OACrB,OACrByM,EAAI0R,KAAO,2BAEPne,EACA8gB,GAAwBrU,EAAKjM,GAAQ,GAAK,GAAI,KACvCiY,GACP0I,GAAyB1U,EAAKjM,GAAQ,GAAK,IAAK,KAC7C2gB,GAAyB1U,EAAKjM,GAAQ,GAAK,IAAK,SAGhE,CAACyjB,EAAQmB,GAAgB3M,GAAQzY,EAAYwY,GAAOsM,EAAatkB,IAEpE8L,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGkY,EAAetY,eAAlB,aAAG,EAAwBK,WAAW,MAE/C,GADA4U,GAAY7U,GACRA,EAAK,CACqBA,EAAIjO,UAA1Bga,KAAUxY,EAA4B,OACrB,OACrByM,EAAI0R,KAAO,2BAEX,IAAMkI,EAAgBvF,GAAwBrU,EAAK9L,EAAU,GAAK,GAAI,KAClEE,IAC0B4L,EAAIjO,UAA1Bga,KAAUxY,EAA4B,OACrB,OHtSX,SAC1ByM,GAEE,IADF4G,EACC,uDADM,GAEP,GAAI5G,EAAK,CACLA,EAAI0R,KAAO,mCAEX,IAAInL,EAAOK,EACX5G,EAAIiQ,SAAS,IAAK1J,EAAM,KACxBA,GAAQvG,EAAI+P,YAAY,KAAK7c,MAAQ,EAErC8M,EAAI0R,KAAO,mCACX1R,EAAIiQ,SAAS,KAAM1J,EAAM,KACzBA,GAAQvG,EAAI+P,YAAY,MAAM7c,MAE9B8M,EAAI0R,KAAO,mCACX1R,EAAIiQ,SAAS,WAAY1J,EAAM,MGwRnBsT,CAAe7Z,EAAK7H,KAAKP,IAAIgiB,EAAgB,GAAI,UAI9D,CAACpC,EAAQpjB,EAAgBukB,GAAgB3M,GAAQzY,EAAYwY,GAAO7X,EAAUgkB,IAEjFrY,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAG+X,EAAcnY,eAAjB,aAAG,EAAuBK,WAAW,MAC9C4U,GAAY7U,GACRA,IAC0BA,EAAIjO,UAA1Bga,KAAUxY,EAA4B,OACrB,OAErBuhB,GAAgB9U,EAAK3L,QAG9B,CAACskB,GAAgB3M,GAAQzY,EAAYwY,GAAO1X,GAASmjB,EAAQO,IAEhElY,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGuY,EAAc3Y,eAAjB,aAAG,EAAuBK,WAAW,MAC9C6Y,GAAgBlZ,QAAQzL,QAAU,WAG9B,OAFA0gB,GAAY7U,GAEI,eAAZ7L,GAAiCyiB,QAAQC,UACtCJ,GAAezW,EAAD,uCAAsC7L,GAAQoB,cAA9C,QAAmE,IAAK,SAGtG,CAACiiB,EAAQrjB,GAASokB,IAErB,IAAMuB,GAAkBpa,uBAAY,SAChCM,EACA+Z,GAEE,IADFlE,EACC,uDAD6B,OAE9B,GAAI7V,EAAK,CAAC,IAAD,EACF,OAAHA,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KAC1B,IAAM5V,EAAI,UAAG6Q,GAAYwL,UAAf,QAA4BxL,GAAW,OACzChI,EAAS7I,EAAT6I,KACFiT,EAAsB5mB,EAAUqa,cAChC+M,EAAe,CACjBpE,GAAoB5V,EAAK,IAAKtC,EAAMmY,GACpCI,GAAyBjW,EAAK,IAAKtC,EAAMmY,IAFxB,mBAGdliB,EAAYkQ,KAAI,SAACvO,EAAOwO,GAAR,OAAkBoS,GACjClW,EACA1K,EACAwO,IAAUnQ,EAAY0C,OAAS,EAC/BqH,EAAMmY,OAPO,CAQJ,UAAbkE,EAC8B,YAAxBP,EACI,SAAC5S,GAAD,OAAkBA,EAAO,GAAmB,SAAdiP,EAAuB,GAAK,IAC1DG,GAAsBhW,EAAKtC,EAAMmY,GACrC,SAACjP,GAAD,OAAkBA,EAAO,GAC/BgP,GAAoB5V,EAAK,IAAKtC,EAAMmY,KAElCoE,GAA2B,SAAdpE,EACbmE,EACAA,EAAgBE,WAAWjI,QAAO,SAACC,EAAMC,GAC3C,OAAOA,EAAKD,KACb3L,GACHvG,EAAI2R,UAAY,OACZsI,EAAY,KAAoB,WAAbF,GAAuBD,GAAgB9Z,EAAK,QAAS6V,MAEjF,CAACjjB,EAAWe,IA6Cf,OA3CAkM,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,IACFxX,EAAG,UAAGgY,EAAapY,eAAhB,aAAG,EAAsBK,WAAW,MACvCka,EAAO,UAAG1B,EAAW7Y,eAAd,aAAG,EAAoBK,WAAW,MAE/C,GADG,OAAHD,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KACtBrH,GAAW,CACX,IAAMmO,EAAkB9J,GAAWtQ,EAAKlM,GAAQ,EAAO0H,QAAUZ,OAAWA,EAA1C,OAAqDhH,QAArD,IAAqDA,OAArD,EAAqDA,EAAaC,kBACpGimB,GAAgBK,EAA6B,IAApBC,EACnB,SACA,cAEN9J,GACItQ,EACAlM,GACA,GACA,EACAua,GACAC,GANM,OAON1a,QAPM,IAONA,OAPM,EAONA,EAAaC,kBAEjBimB,GAAgBK,EAAS,QAAS,YAG3C,CAACxB,GAAgBmB,GAAiBhmB,EAAQmY,GAAWzQ,GAArD,OAA+D5H,QAA/D,IAA+DA,OAA/D,EAA+DA,EAAaC,iBAAkB2jB,EAAQQ,EAAcS,IAEvH5Y,qBAAU,WACN,GAAI2X,EAAQ,CAAC,IAAD,EACFxX,EAAG,UAAGmY,EAAqBvY,eAAxB,aAAG,EAA8BK,WAAW,MAClD,OAAHD,QAAG,IAAHA,KAAKsT,UAAU,EAAG,EAAG,IAAK,KACtBrH,IAAa1Y,GACb+c,GACItQ,EACAxM,GACA,GACA,EACA2a,GACAC,GANM,OAONxa,QAPM,IAONA,OAPM,EAONA,EAAaC,qBAI1B,CAAC2jB,EAAD,OAAS5jB,QAAT,IAASA,OAAT,EAASA,EAAaC,iBAAkB8kB,GAAgB1M,GAAW1Y,EAAY4kB,EAAsB3kB,IAEjG,CACHslB,qBCtYQ3E,GAAqCtiB,EAAhBuiB,GAAgBviB,EA4VtCwoB,OAnVf,WAAgB,IAAD,EAC+B7b,oBAAS,GADxC,mBACJma,EADI,KACY2B,EADZ,OAEe9b,mBAAS,IAFxB,mBAEJ+b,EAFI,KAEGC,EAFH,OAGoBhc,mBAAenM,GAHnC,mBAGJgY,EAHI,KAGSM,EAHT,OAIyBnM,mBAAkC,YAJ3D,mBAIJG,EAJI,KAIQC,EAJR,KAML6b,EAAerb,iBAA0B,MACzCnB,EAAmBmB,iBAA0B,MAC7Csb,EAAgBtb,iBAA0B,MAC1Cub,EAAiBvb,iBAA0B,MAC3Cwb,EAAexb,iBAA0B,MACzCyb,EAAwBzb,iBAA0B,MAClD0b,EAAqB1b,iBAA0B,MAC/C2b,EAAyB3b,iBAA0B,MACnD4b,EAA0B5b,iBAA0B,MACpD6b,EAAgB7b,iBAA0B,MAC1C8b,EAAkB9b,iBAA0B,MAC5C+b,EAAgB/b,iBAA0B,MAC1Cgc,EAAqBhc,iBAA0B,MAC/Cic,EAAgBjc,iBAA0B,MAC1Ckc,EAAiBlc,iBAA0B,MAC3Cmc,EAAoBnc,iBAA0B,MAC9Coc,EAAmBpc,iBAA0B,MAC7Cqc,EAAmBrc,iBAA0B,MAvBxC,EAwBSZ,mBAAS,CACzBmZ,cAAe1Z,EACfyd,WAAYhB,EACZ9C,YAAa+C,EACbjD,UAAWkD,EACX/C,mBAAoBgD,EACpBrC,gBAAiBsC,EACjB1C,oBAAqB2C,EACrB5C,qBAAsB6C,EACtBvC,WAAYwC,EACZjD,aAAckD,EACdjD,WAAYkD,EACZrD,gBAAiBsD,EACjB9C,WAAY+C,EACZhD,YAAaiD,EACbpD,eAAgBqD,EAChBxD,cAAeyD,EACfjD,cAAekD,IAjBZhE,EAxBI,oBA6CPjlB,EAGA6X,EAHA7X,KACAO,EAEAsX,EAFAtX,YACAQ,EACA8W,EADA9W,WA/CO,EAkDqCiL,mBAAS,GAlD9C,mBAkDJoa,EAlDI,KAkDc+C,EAlDd,KAmDH7C,EAAoBvB,IAAoB,EAAME,EAAWpN,EAAa,CAC1EuO,mBACAD,mBAFIG,gBAiBRjZ,qBAAU,WAAO,IAAD,EACNG,EAAG,UAAG0a,EAAc9a,eAAjB,aAAG,EAAuBK,WAAW,MAC1CD,IACAA,EAAIY,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCZ,EAAIa,sBAAwB,OAhFpB,SAChBb,GAEIA,GACAA,EAAIsT,UAAU,EAAG,EAAGc,GAAaD,IA6E7BU,CAAY7U,IAIhB4b,KAAQC,KAAK,CACTC,OAAQ,CACJC,SAAU,CACN,mBACA,mBACA,sBACA,SACA,yBACA,aACA,sBACA,yBACA,+BAEJC,KAAM,CAAC,mBAEXxE,OAAQ,WACJ,IACI,IAAMyE,EAAmBxf,OAAOyf,aAAaC,QAAQ,gBAC/CC,EAAgB3f,OAAOyf,aAAaC,QAAQ,aAE5CE,EAAY,IAAIxf,gBAAgBJ,OAAOK,SAASC,QAASuf,IAAI,QAC/DD,EACA1R,EAAQpQ,EAAgB8hB,GAAU,IACT,OAAlBD,GAA+CtX,WAArBmX,GACjCtR,EAAQpQ,EAAgB6hB,IAE9B,MAAO3mB,GACLkV,EAAQtY,GAEZioB,GAAgB,IAEpBiC,SAAU,WACN/B,EAAS,4BACTF,GAAgB,QAGzB,IAEH,IAAMkC,GAAcpd,kBAAO,GACrBqd,GAAYrd,iBAAO,CACrBsd,gBAAiB9F,QAAQC,UACzB8F,gBAAgB,IAGdha,GAAWjD,uBAAY,WAAO,IAAD,EACzBkd,EAAYlC,EAAc9a,QAChC,GAAIgd,EAAW,IACX,IAAIC,EAAOpa,SAASC,cAAc,KAClCma,EAAKla,SAAL,UAAmBnQ,EAAnB,QACAqqB,EAAKja,KAAOga,EAAUE,UAAU,aAChCD,EAAKha,QACP,MAAOpN,GACLsnB,IAAW,GACXC,MAAM,yGAEV,UAAAva,SAASwa,cAAc,+BAAvB,SAAgDC,UAAUC,OAAO,cAClE,CAAC3qB,IArIO,GAsIqBgM,oBAAS,GAtI9B,qBAsIJ4e,GAtII,MAsIOL,GAtIP,MA8IXld,qBAAU,WACN,IAC8B,EAD1Bwd,GAAW,GACQ,IAAnB1E,IACAuD,aAAaoB,QAAQ,YAAazjB,KAAKC,UAAUuQ,IACjD6R,aAAaoB,QAAQ,eAArB,UAAqCxY,UAArC,EAAsE,WAOtE,sBAAC,wCAAAnO,EAAA,0DACqB+jB,EAAc9a,QADnC,wBAGO,UAAA6C,SAASiD,eAAe,8BAAxB,SAAgD6X,aAAa,QAAS,IACtE,UAAA9a,SAASiD,eAAe,8BAAxB,SAAgD6X,aAAa,QAAS,kBACtE,UAAA9a,SAASiD,eAAe,4BAAxB,SAA8C6X,aAAa,QAAS,iBAEpEd,GAAU7c,QAAQ+c,gBAAiB,EAP1C,SAQaF,GAAU7c,QAAQ8c,gBAR/B,WAUWW,EAVX,wBAWWZ,GAAU7c,QAAQ8c,gBAAkBc,GAAS,CAAEjqB,eAC/CkpB,GAAU7c,QAAQ+c,gBAAiB,EAZ9C,UAciBF,GAAU7c,QAAQ8c,gBAdnC,QAeeW,IAE6B,kBADvBlkB,EAAgBH,EAAkBqR,KACD/N,EAAe,OAAQnD,GAE9D,UAAAsJ,SAASiD,eAAe,8BAAxB,SAAgD6X,aAAa,QAAS,iBACtE,UAAA9a,SAASiD,eAAe,8BAAxB,SAAgD6X,aAAa,QAAS,iBACtE,UAAA9a,SAASiD,eAAe,4BAAxB,SAA8C6X,aAAa,QAAS,kBAEhEf,GAAY5c,UACZ4c,GAAY5c,SAAU,EACtB+C,OAzBnB,2CAAD,IAiCJ,OAAO,WACH0a,GAAW,MAInB,IAAMG,GAAWpe,iBAAM,uCAAC,WAAOqe,GAAP,yBAAA9mB,EAAA,2DAKhB8mB,EADAlqB,kBAJgB,SAMdqpB,EAAYlC,EAAc9a,QAC1B8d,EAPc,OAOFd,QAPE,IAOFA,OAPE,EAOFA,EAAW3c,WAAW,MAClC0d,EAAgB,SAACC,EAAiD5d,GACpE,OAAO,IAAI4W,SAAiB,SAAAC,GACxB,GAAI+G,EAAYhe,SAAWI,EAAK,CAC5B,IAAM6d,EAAYD,EAAYhe,QAAQkd,UAAU,aAEhD,GAAIe,EAAW,CACX,IAAIC,EAAQ,IAAI7G,MAChB6G,EAAM7a,IAAM4a,EACZC,EAAM5G,OAAS,WACXlX,EAAIc,UAAUgd,EAAO,EAAG,GACxBjH,GAAQ,IAEZiH,EAAM3G,QAAU,kBAAMN,GAAQ,SAC3BA,GAAQ,QACZA,GAAQ,QAInB+F,IAAac,EA1BG,wBA2BhBA,EAAUpK,UAAU,EAAG,EAAG,IAAK,KA3Bf,SA4BVsD,QAAQwC,IAAIhgB,OACb2kB,OAAOjF,EAAgBlZ,SACvBiE,KAAI,SAAAma,GACD,OAAOA,QA/BC,wBAiCVL,EAAchD,EAAgB+C,GAjCpB,eAkCV1E,EAAa/a,EAAiB2B,UAClB8d,IACVnqB,EACAmqB,EAAU5c,UAAUkY,EAAY,GAAI,IAAK,IAAK,KAE9C0E,EAAU5c,UAAUkY,EAAY,GAAI,IAAK,IAAK,MAvCtC,UA0CV2E,EAAc9C,EAAuB6C,GA1C3B,yBA2CV9G,QAAQwC,IAAI,CACd+B,EACAC,EACAN,EACAC,EACAC,EACAC,EACAC,EACAG,EACAC,EACAC,EACAC,EACAC,GACF5X,KAAI,SAAAoa,GAAY,OAAIN,EAAcM,EAAcP,OAxDlC,4CAAD,uDA2DpB9d,QAEH,OACI,qBAAK6G,GAAG,MACJyX,OAAQ,aACRlb,MAAO,CACHmb,gBAAgB,QAAD,OAAUrZ,aAAV,yFAHvB,SAMI,sBAAKrH,UAAW,gBAAhB,UACKkb,GAAkB,qBAAKlb,UAAU,eAAf,SACd8c,EAAMlkB,OAAS,EAAI,sBAAM2M,MAAO,CAAElO,MAAO,WAAtB,SACfylB,IACK,iCAId,sBAAK9c,UAAS,6BAAwB2f,GAAY,iBAAmB,iBAArE,UACI,sBAAK3f,UAAU,gBAAf,UACM2f,GAII,qCAAE,qDAAwBxP,MAA1B,qEAHA,sDAAgB,uBACd,wBAAQnH,GAAG,sBAAsBxE,UAAQ,EAAzC,2BACA,wBAAQwE,GAAG,oBAAoBvE,QAAS,kBAzIrD,WAAO,IAAD,EACjB,UAAAO,SAASwa,cAAc,+BAAvB,SAAgDC,UAAUlJ,IAAI,aACrB,IAArCyI,GAAU7c,QAAQ+c,eAClBha,KACG6Z,GAAY5c,SAAU,EAqIyCwe,IAA9C,qBAGR,sBAAK3gB,UAAU,WAAf,UACI,wBAAQyE,QAAS,WACM,aAAfvD,GAA2BlC,OAAOugB,MAAM,oDAE5CvgB,OAAO4hB,OAAO,+BAAd,UAAiDrlB,EAAkBqR,MAHvE,8BAKA,wBAAQnI,QAAS,WACb,IAAMoc,EAAW7hB,OAAO4hB,OAAO,wBAE/B,GAAIC,EAAU,CAAC,IAAD,EACJC,EAAchkB,EAAgB+jB,GAAU,GAC9C3T,EAAQ4T,GACR,UAAA9D,EAAa7a,eAAb,SAAsBiN,cAAc0R,KAN5C,oCAWR,sBAAK9gB,UAAU,oBAAf,UACI,wBAAQgJ,GAAG,gBAAgBmG,IAAK8N,EAAexnB,MAAOkhB,GAAajhB,OAAQghB,KAC3E,sBAAK1N,GAAG,sBAAR,UACI,qBAAKhJ,UAAU,qBAAf,2BACA,cAAC+gB,GAAA,EAAD,OAEJ,wBAAQ/X,GAAG,cAAcmG,IAAK+N,EAAgBznB,MAAOkhB,GAAajhB,OAAQghB,KAC1E,wBAAQ1N,GAAG,YAAYmG,IAAKgO,EAAc1nB,MAAOkhB,GAAajhB,OAAQ,MACtE,wBAAQsT,GAAG,qBAAqBmG,IAAKiO,EAAuB3nB,MAAOkhB,GAAajhB,OAAQghB,KACxF,wBAAQ1N,GAAG,aAAamG,IAAKuO,EAAejoB,MAAOkhB,GAAajhB,OAAQ,MACxE,wBAAQsT,GAAG,kBAAkBmG,IAAKwO,EAAoBloB,MAAOkhB,GAAajhB,OAAQ,MAClF,wBAAQsT,GAAG,kBAAkBmG,IAAKkO,EAAoB5nB,MAAOkhB,GAAajhB,OAAQ,MAClF,wBAAQsT,GAAG,sBAAsBmG,IAAKmO,EAAwB7nB,MAAOkhB,GAAajhB,OAAQ,MAC1F,wBAAQsT,GAAG,uBAAuBmG,IAAKoO,EAAyB9nB,MAAOkhB,GAAajhB,OAAQ,MAC5F,wBAAQsT,GAAG,aAAamG,IAAKqO,EAAe/nB,MAAOkhB,GAAajhB,OAAQ,MACxE,wBAAQsT,GAAG,eAAemG,IAAKsO,EAAiBhoB,MAAOkhB,GAAajhB,OAAQ,MAC5E,wBAAQsT,GAAG,aAAamG,IAAKyO,EAAenoB,MAAOkhB,GAAajhB,OAAQghB,KACxE,wBAAQ1N,GAAG,cAAcmG,IAAK0O,EAAgBpoB,MAAOkhB,GAAajhB,OAAQghB,KAC1E,wBAAQ1N,GAAG,WAAWmG,IAAK2O,EAAmBroB,MAAOkhB,GAAajhB,OAAQghB,KAC1E,wBAAQ1N,GAAG,UAAUmG,IAAK4O,EAAkBtoB,MAAOkhB,GAAajhB,OAAQghB,KACxE,wBAAQ1N,GAAG,UAAUmG,IAAK6O,EAAkBvoB,MAAOkhB,GAAajhB,OAAQghB,KACxE,wBAAQ1W,UAAU,cAAcmP,IAAK3O,WAGzB,IAAnB0a,GAA4B,eAACvO,GAAD,CACzBwC,IAAK6N,EACLnQ,mBAAoBrM,EAAiB2B,QACrCyK,YAAaA,EACbE,aAAcI,EACdvM,gBAAiBrL,EACjBuL,cAAe,SAAC4C,EAAUvC,GACtBgd,GAAoB,SAAA/T,GAAG,OAAIA,EAAM,KACjChJ,EAAcD,GACVuC,GAAUyJ,GAAQ,SAAAwH,GAAI,kCACnBA,GADmB,IAEtBpf,YAAamO,QAGrB3C,UAAW,kBAAMwe,IAAW,IAdH,UAgBzB,cAACvP,GAAD,IAAa,gCC3VlBiR,GAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJ3c,SAASiD,eAAe,SAM5B+Y,O","file":"static/js/main.4111ed5e.chunk.js","sourcesContent":["export const CanvasConst = {\r\n    width: 549,\r\n    height: 800,\r\n};","export type TextStyleType = 'auto' | 'custom';\r\nexport type TextStyle = typeof defaultTextStyle;\r\nexport const defaultTextStyle = {\r\n    fillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n};\r\n\r\nexport type CondenseType = 'strict' | 'loose';\r\n\r\nexport type Card = typeof defaultCard;\r\nexport const defaultCard = {\r\n    frame: 'fusion',\r\n    foil: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as TextStyleType,\r\n    nameStyle: {\r\n        fillStyle: '#000000',\r\n        shadowColor: '#000000',\r\n        shadowOffsetY: 0,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 0,\r\n        hasShadow: false,\r\n    } as TextStyle,\r\n    attribute: 'LIGHT',\r\n    subFamily: 'NO ICON',\r\n    star: 6,\r\n    picture: 'https://i.imgur.com/h5kXZeC.png',\r\n    pictureCrop: {\r\n        x: 0,\r\n        y: 12,\r\n        width: 269,\r\n        height: 269,\r\n        unit: 'px',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    linkMap: ['1', '3', '7', '9'] as string[],\r\n    isPendulum: false,\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: ['Fairy', 'Fusion', 'Effect'] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    passcode: '18111996',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    creator: '©2020 Studio Dice/SHUEISHA TV TOKYO, KONAMI',\r\n};\r\n\r\nexport const frameType = [\r\n    { name: 'normal', labelColor: '#fff', labelBackgroundColor: '#c49c5e' },\r\n    { name: 'effect', labelColor: '#fff', labelBackgroundColor: '#b96c49' },\r\n    { name: 'fusion', labelColor: '#fff', labelBackgroundColor: '#8948a4' },\r\n    { name: 'synchro', labelColor: '#000', labelBackgroundColor: '#efefef' },\r\n    { name: 'xyz', labelColor: '#fff', labelBackgroundColor: '#000' },\r\n    { name: 'link', labelColor: '#fff', labelBackgroundColor: '#0c8ac6' },\r\n    { name: 'ritual', labelColor: '#fff', labelBackgroundColor: '#5e85c9' },\r\n    { name: 'spell', labelColor: '#fff', labelBackgroundColor: '#1b8f83' },\r\n    { name: 'trap', labelColor: '#fff', labelBackgroundColor: '#c32a8c' },\r\n    { name: 'token', labelColor: '#fff', labelBackgroundColor: '#6f6c6b' },\r\n];\r\n\r\nexport const iconList = [\r\n    'NO ICON',\r\n    'FIELD',\r\n    'CONTINUOUS',\r\n    'QUICK-PLAY',\r\n    'RITUAL',\r\n    'EQUIP',\r\n    'COUNTER',\r\n];\r\n\r\nexport const foilStyleMap: Record<string, TextStyle> = {\r\n    gold: {\r\n        fillStyle: '#b88c43',\r\n        shadowColor: '#FCC400',\r\n        shadowOffsetY: 1,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 1,\r\n        hasShadow: true,\r\n    },\r\n    platinum: {\r\n        fillStyle: '#CCCCCC',\r\n        shadowColor: '#FFFFFF',\r\n        shadowOffsetY: 1,\r\n        shadowOffsetX: 0,\r\n        shadowBlur: 1,\r\n        hasShadow: true,\r\n    },\r\n};\r\nexport const foilList = [\r\n    { name: 'normal', color: '#747b95', textStyle: defaultTextStyle },\r\n    { name: 'gold', color: '#cfa65f' },\r\n    { name: 'platinum', color: '#b1b1b1' },\r\n];\r\n\r\nexport const stickerList = [\r\n    'no-sticker',\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n];\r\n\r\nexport const attributeList = [\r\n    { name: 'DARK', color: '#b41dda' },\r\n    { name: 'EARTH', color: '#8d8e8e' },\r\n    { name: 'FIRE', color: '#e51b23' },\r\n    { name: 'LIGHT', color: '#bfae32' },\r\n    { name: 'WATER', color: '#008ecd' },\r\n    { name: 'WIND', color: '#28ab35' },\r\n    { name: 'DIVINE', color: '#ef6300' },\r\n    { name: 'SPELL', color: '#1b8f83' },\r\n    { name: 'TRAP', color: '#c32a8c' },\r\n];\r\n\r\nexport * from './canvas';\r\nexport type {\r\n    MasterDuelCanvas\r\n} from './card-seri';\r\n","import { Card, frameType } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame' | 'typeAbility'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameType.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone } from 'ramda';\r\nimport { JSONCrush, JSONUncrush } from '../3rd';\r\nimport { Card, defaultCard } from '../model';\r\n\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = 1000) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= 10;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nconst cardFieldShortenMap: Record<keyof Card | string, string | Record<string, string>> = {\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        fillStyle: 'nsfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n    linkMap: 'lm',\r\n    isPendulum: 'ip',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    passcode: 'pc',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    creator: 'cr',\r\n};\r\n\r\nexport const cardDataCondenser = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n    crush = true,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    Object.keys(card).forEach(cardKey => {\r\n        const cardValue = card[cardKey];\r\n\r\n        if (typeof cardValue === 'object' && cardValue !== null && !Array.isArray(cardValue)) {\r\n            const newKey = shortenMap[cardKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = cardDataCondenser(cardValue, shortenMap[cardKey], false);\r\n            }\r\n        } else {\r\n            const newKey = shortenMap[cardKey];\r\n\r\n            if (typeof newKey === 'string') condensedCard[newKey] = cardValue;\r\n        }\r\n    });\r\n\r\n    if (crush) {\r\n        const curshedCard = JSONCrush(JSON.stringify(condensedCard));\r\n\r\n        return curshedCard;\r\n    }\r\n    return condensedCard;\r\n};\r\n\r\nexport const reverseCardDataCondenser = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortendValue = shortenMap[fullKey];\r\n\r\n        if (typeof shortendValue === 'object' && shortendValue !== null && !Array.isArray(shortendValue)) {\r\n            const shortendKey = shortendValue?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                fullCard[fullKey] = reverseCardDataCondenser(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortendValue]) {\r\n                fullCard[fullKey] = normalizedCondensedCard[shortendValue];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\n\r\nexport const rebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let fullCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        fullCard = reverseCardDataCondenser(card);\r\n    } else {\r\n        fullCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(fullCard);\r\n};\r\n\r\n// Try to match old version card data with newer model\r\nconst migrateCardData = (card: Record<string, any>) => {\r\n    const migratedCard = clone(card);\r\n\r\n    if (migratedCard.effectStyle === undefined) {\r\n        migratedCard.effectStyle = {\r\n            ...defaultCard.effectStyle\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version === undefined) {\r\n        migratedCard.version = 1;\r\n    }\r\n    return migratedCard;\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result           = '';\r\n    const charactersLength = charSet.length;\r\n    for ( let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = () => {\r\n    return `${randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)}-EN${randomCharacter('0123456789', 3)}`;\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectBody = effect;\r\n\r\n    let effectMaterial = '';\r\n    const materialRegex = /^(\\[([^\\]]*)\\]\\s*)/m;\r\n    const materialReplacement = materialRegex.exec(effectBody)?.[1];\r\n    const material = materialRegex.exec(effectBody)?.[2];\r\n    if (material && materialReplacement) {\r\n        effectMaterial = material;\r\n        effectBody = effectBody.replace(materialReplacement, '');\r\n    } else effectMaterial = '';\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = /(\\n^[\\r\\t\\f\\v \\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]*\\([\\w\\W]+\\))\\s*$/m;\r\n    const flavorCondition = flavorConditionRegex.exec(effect)?.[1];\r\n    if (flavorCondition && isNormal) {\r\n        effectFlavorCondition = flavorCondition;\r\n        effectBody = effectBody.replace(flavorCondition, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        material: effectMaterial,\r\n        body: effectBody,\r\n        flavorCondition: effectFlavorCondition\r\n    };\r\n};\r\n\r\nexport const quoteConvert = (text?: string) => {\r\n    let normalizedString = (text ?? '');\r\n    normalizedString = normalizedString.replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')\r\n        .replace(/'/g, '\\u2019')\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')\r\n        .replace(/\"/g, '\\u201d')\r\n        .replace(/--/g, '\\u2014');\r\n    return normalizedString;\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?' + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './condenser';","import { Spin } from 'antd';\r\nimport './loading.scss';\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <div className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </div>;\r\n};","import { Button, Input, Radio } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { Loading } from '../loading';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './card-picture.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'cropPreview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport type ImageCropperRef = {\r\n    forceExternalSource: (pictureLink: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    noRedrawNumber?: number,\r\n    defaultExternalSource?: string,\r\n    previewCanvasRef?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    ratio?: number,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    onSourceChange?: (source: string) => void,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n    onTainted: () => void,\r\n}\r\nexport const ImageCropper = React.forwardRef<ImageCropperRef, ImageCropper>(({\r\n    noRedrawNumber = 0,\r\n    defaultExternalSource = '',\r\n    previewCanvasRef,\r\n    children,\r\n    ratio = 1,\r\n    defaultCropInfo,\r\n    onSourceChange = () => { },\r\n    onImageChange = () => { },\r\n    onTainted = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const [crossorigin, setCrossOrigin] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [sourceType, setSourceType] = useState<'internal' | 'external'>('external');\r\n    const [internalSource, setInternalSource] = useState('');\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState<ReactCrop.Crop>(defaultCropInfo);\r\n    const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n\r\n    const onSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('internal');\r\n                }\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        imgRef.current = img;\r\n    }, []);\r\n\r\n    const onExternalSourceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setLoading(true);\r\n        setSourceType('external');\r\n        onSourceChange(source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        const canvas = previewCanvasRef;\r\n        const crop = completedCrop;\r\n        if (!crop || !canvas || !image) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) return;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const pixelRatio = window.devicePixelRatio;\r\n        const boundingWidth = Math.ceil(canvas.getBoundingClientRect().width);\r\n        const boundingHeight = Math.ceil(canvas.getBoundingClientRect().height);\r\n\r\n        canvas.width = (boundingWidth ?? 0) * pixelRatio;\r\n        canvas.height = (boundingHeight ?? 0) * pixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            (crop.x ?? 0) * scaleX,\r\n            (crop.y ?? 0) * scaleY,\r\n            (crop.width ?? 0) * scaleX,\r\n            (crop.height ?? 0) * scaleY,\r\n            0,\r\n            0,\r\n            (boundingWidth ?? 0),\r\n            (boundingHeight ?? 0)\r\n        );\r\n        onImageChange(crop, sourceType);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, previewCanvasRef, noRedrawNumber]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        forceExternalSource: (source, cropInfo) => {\r\n            const inUseSource = sourceType === 'internal' ? internalSource : externalSource;\r\n            if (inUseSource !== source) {\r\n                setLoading(true);\r\n                setSourceType('external');\r\n                onSourceChange(source);\r\n                setExternalSource(source);\r\n            }\r\n            setCrop(cropInfo);\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <div className=\"card-image-cropper\">\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <Radio.Group onChange={e => setSourceType(e.target.value)} value={sourceType}>\r\n                    <Radio.Button value={'external'}>\r\n                        <Input key=\"key\"\r\n                            addonBefore=\"Link\" placeholder=\"https://my-online-image...\"\r\n                            value={externalSource}\r\n                            onChange={onExternalSourceChange} maxLength={256} />\r\n                    </Radio.Button>\r\n                    <Radio.Button value={'internal'}>\r\n                        <Input type=\"file\" accept=\"image/*\" onChange={onSelectFile} />\r\n                        <div>\r\n                            {sourceType === 'internal' && <>\r\n                                <Button\r\n                                    className=\"download-button\"\r\n                                    disabled={!completedCrop?.width || !completedCrop?.height}\r\n                                    onClick={() => previewCanvasRef && generateDownload(previewCanvasRef, completedCrop)}\r\n                                >\r\n                                    Download cropped image#3b9dff\r\n                                </Button>\r\n                                <span style={{ color: '#FF6F6F' }}>Offline images are not auto saved!</span>\r\n                            </>}\r\n                        </div>\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"card-cropper\">\r\n                {isLoading && <Loading.FullView />}\r\n                <ReactCrop key={sourceType}\r\n                    src={sourceType === 'internal' ? internalSource : externalSource}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        onTainted();\r\n                        setCrossOrigin(undefined);\r\n                    }}\r\n                    crop={crop}\r\n                    onChange={cropData => setCrop({ ...cropData, aspect: ratio })}\r\n                    onComplete={cropData => setCompletedCrop(cropData)}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            Link Arrows\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((entry, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay=\"Reset\">\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>R</div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import { frameType, iconList, attributeList, stickerList, foilList } from '../../model';\r\nimport './input-panel.scss';\r\n\r\nexport const foilButton = foilList.map(({ color, name }) => ({\r\n    label: name.toLocaleUpperCase(),\r\n    value: name,\r\n    props: {\r\n        style: {\r\n            color,\r\n            fontWeight: 'bold',\r\n        } as React.CSSProperties,\r\n    }\r\n}));\r\nexport const frameButton = frameType.map(({ labelColor, name, labelBackgroundColor }) => ({\r\n    label: name,\r\n    value: name,\r\n    props: {\r\n        style: {\r\n            backgroundColor: labelBackgroundColor,\r\n            color: labelColor,\r\n        } as React.CSSProperties,\r\n    }\r\n}));\r\nexport const attributeButton = attributeList.map(({ name }) => ({\r\n    label: <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\nexport const iconButton = iconList.map(entry => ({\r\n    label: entry,\r\n    value: entry,\r\n}));\r\nexport const starButton = [...Array(14)].map((e, index) => ({ label: index, value: index }));\r\nexport const stickerButton = stickerList.map(name => ({\r\n    label: name === 'no-sticker'\r\n        ? <span>NONE</span>\r\n        : <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\nexport const condenseButton = [\r\n    { label: 'Strict', value: 'strict' },\r\n    { label: 'Loose', value: 'loose' },\r\n    { label: 'Very Loose', value: 'veryLoose' },\r\n];","import { useCallback, useEffect, useState } from 'react';\r\nimport Moveable from 'react-moveable';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport './char-picker.scss';\r\n\r\nfunction insertAtCursor(myField: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        myField.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (myField.selectionStart || myField.selectionStart === 0) {\r\n        const startPos = myField.selectionStart;\r\n        const endPos = myField.selectionEnd;\r\n        myField.value = myField.value.substring(0, startPos)\r\n            + myValue\r\n            + myField.value.substring(endPos, myField.value.length);\r\n        myField.selectionStart = startPos + myValue.length;\r\n        myField.selectionEnd = startPos + myValue.length;\r\n        myField.focus();\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        myField.value += myValue;\r\n\r\n        return {\r\n            value: myField.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (char: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, char);\r\n\r\n            onPick(value);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTarget(document.getElementById('char-picker'));\r\n    }, []);\r\n\r\n    const onDrag = useCallback(({\r\n        target,\r\n        left, top,\r\n        transform,\r\n    }) => {\r\n        target!.style.left = `${left}px`;\r\n        target!.style.top = `${top}px`;\r\n        target!.style.transform = transform;\r\n    }, []);\r\n\r\n    return <div className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div>\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n            ].map(entry => {\r\n                return <button key={entry} className=\"ant-btn\" onClick={() => internalOnPick(entry)}>{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <Moveable\r\n            target={target}\r\n            container={null}\r\n\r\n            /* Resize event edges */\r\n            edge={false}\r\n\r\n            /* draggable */\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        />\r\n    </div>;\r\n};","import { Checkbox, InputNumber, Popover, Slider } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport { defaultTextStyle, TextStyle, TextStyleType } from '../../../model';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { debounce } from 'lodash';\r\nimport './style-picker.scss';\r\n\r\nexport type StylePicker = {\r\n    defaultType: TextStyleType,\r\n\tdefaultValue: TextStyle,\r\n\tonChange: (type: TextStyleType, style: TextStyle) => void,\r\n}\r\nexport const StylePicker = React.memo(({\r\n    defaultType,\r\n    defaultValue,\r\n    onChange: undebouncedOnChange,\r\n}: StylePicker) => {\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [isColorPickerVisble, setColorPickerVisible] = useState(false);\r\n    const [isShadowPickerVisble, setShadowPickerVisible] = useState(false);\r\n    const [changeSignal, setChangeSignal] = useState(0);\r\n    const updateSignal = () => setChangeSignal(cnt => cnt + 1);\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n\r\n    const setCustomValue = <ValueType extends any>(key: keyof TextStyle) => {\r\n        return (inputValue: ValueType) => {\r\n            setValue(curValue => {\r\n                const newStyle = { ...curValue, [key]: inputValue };\r\n\r\n                onChange('custom', newStyle);\r\n                return newStyle;\r\n            });\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (changeSignal !== 0) onChange('custom', value);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [changeSignal]);\r\n\r\n    return <div className=\"ant-input-group-wrapper name-color-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">Name Color</span>\r\n            <span className=\"ant-input-affix-wrapper\">\r\n                <div className=\"ant-radio-group ant-radio-group-outline\">\r\n                    <label className={`ant-radio-wrapper ${type === 'auto' ? 'ant-radio-wrapper-checked' : ''}`} onClick={() => {\r\n                        setType('auto');\r\n                        onChange('auto', value);\r\n                    }}>\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span>Auto</span>\r\n                    </label>\r\n                    <label className={`ant-radio-wrapper ${type === 'custom' ? 'ant-radio-wrapper-checked' : ''}`} onClick={() => {\r\n                        setType('custom');\r\n                        onChange('custom', value);\r\n                    }}>\r\n                        <span className={`ant-radio ${type === 'custom' ? 'ant-radio-checked' : ''}`}>\r\n                            <input type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <div className=\"style-picker\">\r\n                            Custom\r\n                            <Popover key=\"color-picker\"\r\n                                overlayClassName=\"input-overlay style-picker-overlay\"\r\n                                content={<>\r\n                                    <div className=\"style-picker-mask\" onClick={() => setColorPickerVisible(false)} />\r\n                                    <div className={'custom-style-picker'}>\r\n                                        <div className=\"custom-style-text\">\r\n                                            <h2>Text Color</h2>\r\n                                            <CompactPicker color={value.fillStyle} onChange={color => {\r\n                                                setType('custom');\r\n                                                setValue(cur => {\r\n                                                    const newStyle = { ...cur, fillStyle: color.hex };\r\n\r\n                                                    return newStyle;\r\n                                                });\r\n                                                updateSignal();\r\n                                            }} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>}\r\n                                visible={isColorPickerVisble}\r\n                                placement=\"bottom\"\r\n                            >\r\n                                <div className=\"picker-dropdown color-picker-dropdown\" onClick={() => setColorPickerVisible(cur => !cur)}>\r\n                                    Change Color {isColorPickerVisble ? <CaretUpOutlined /> : <CaretDownOutlined />}\r\n                                </div>\r\n                            </Popover>\r\n                            <Popover key=\"shadow-picker\"\r\n                                overlayClassName=\"input-overlay style-picker-overlay\"\r\n                                content={<>\r\n                                    <div className=\"style-picker-mask\" onClick={() => setShadowPickerVisible(false)} />\r\n                                    <div className={'custom-style-picker'}>\r\n                                        <h3 className=\"custom-style-expand\">\r\n                                            <Checkbox value={'has-shadow'} checked={value.hasShadow} onChange={() => {\r\n                                                setType('custom');\r\n                                                setValue(cur => {\r\n                                                    const newStyle = { ...cur, hasShadow: !cur.hasShadow };\r\n                    \r\n                                                    return newStyle;\r\n                                                });\r\n                                                updateSignal();\r\n                                            }}>Has Shadow?</Checkbox>\r\n                                        </h3>\r\n                                        {value.hasShadow && <div className=\"custom-style-shadow\">\r\n                                            <h2>Position</h2>\r\n                                            <div className=\"shadow-position\">\r\n                                                <PowerSlider axis=\"xy\"\r\n                                                    styles={{\r\n                                                        track: {\r\n                                                            backgroundColor: '#009ce0',\r\n                                                            width: 100,\r\n                                                            height: 100,\r\n                                                            gridRow: 'span 3',\r\n                                                            position: 'relative',\r\n                                                        },\r\n                                                        thumb: {\r\n                                                            backgroundColor: '#91d5ff',\r\n                                                            zIndex: 10,\r\n                                                        },\r\n                                                    }}\r\n                                                    xmax={5} xmin={-5}\r\n                                                    ymax={5} ymin={-5}\r\n                                                    x={value.shadowOffsetX}\r\n                                                    y={value.shadowOffsetY}\r\n                                                    onChange={({ x, y }) => {\r\n                                                        setValue(cur => {\r\n                                                            const newStyle = { ...cur,\r\n                                                                ...cur,\r\n                                                                shadowOffsetX: x,\r\n                                                                shadowOffsetY: y,\r\n                                                            };\r\n\r\n                                                            return newStyle;\r\n                                                        });\r\n                                                        updateSignal();\r\n                                                    }} />\r\n                                                <div className=\"single-slider\">\r\n                                                    X Offset: <InputNumber size=\"small\" value={value.shadowOffsetX} onChange={setCustomValue('shadowOffsetX')} />\r\n                                                </div>\r\n                                                <div className=\"single-slider\">\r\n                                                    Y Offset: <InputNumber size=\"small\" value={value.shadowOffsetY} onChange={setCustomValue('shadowOffsetY')} />\r\n                                                </div>\r\n                                                <div className=\"single-slider\">\r\n                                                    Blur: <Slider value={value.shadowBlur} min={0} max={10} onChange={(value: number) => {\r\n                                                        if (typeof value === 'number') {\r\n                                                            setValue(cur => {\r\n                                                                const newStyle = { ...cur, shadowBlur: value };\r\n\r\n                                                                return newStyle;\r\n                                                            });\r\n                                                            updateSignal();\r\n                                                        }\r\n                                                    }} />\r\n                                                </div>\r\n                                                <div />\r\n                                            </div>\r\n                                            <h2>Color</h2>\r\n                                            <CompactPicker color={value.shadowColor} onChange={color => {\r\n                                                let newStyle: TextStyle = defaultTextStyle;\r\n                                                setValue(cur => {\r\n                                                    newStyle = { ...cur, shadowColor: color.hex };\r\n\r\n                                                    return newStyle;\r\n                                                });\r\n                                                updateSignal();\r\n                                            }} />\r\n                                        </div>}\r\n                                    </div>\r\n                                </>}\r\n                                visible={isShadowPickerVisble}\r\n                                placement=\"bottom\"\r\n                            >\r\n                                <div className=\"picker-dropdown shadow-picker-dropdown\" onClick={() => setShadowPickerVisible(cur => !cur)}>\r\n                                    Change Shadow {isShadowPickerVisble ? <CaretUpOutlined /> : <CaretDownOutlined />}\r\n                                </div>\r\n                            </Popover>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n}, () => true);\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport type CheckboxTrain = {\r\n\tclassName?: string,\r\n\tvalue: string,\r\n\toptionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n\tonChange: (value: string | number) => void,\r\n\tchildren?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const combinedClass = ['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ');\r\n\r\n    return <div className={combinedClass}>\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        {optionList.map(entry => {\r\n            const isChecked = `${entry.value}` === `${value}`;\r\n\r\n            return <label key={entry.value}\r\n                {...entry.props}\r\n                className={`ant-radio-button-wrapper ${isChecked ? 'ant-radio-button-wrapper-checked' : ''}`}\r\n                onClick={() => {\r\n                    onChange(entry.value);\r\n                }}\r\n            >\r\n                <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                    <span className=\"ant-radio-button-inner\"></span>\r\n                </span>\r\n                <span>{entry.label}</span>\r\n            </label>;\r\n        })}\r\n    </div>;\r\n};","import React, { useImperativeHandle, useRef, useState } from 'react';\r\nimport { Input, Checkbox, Tooltip } from 'antd';\r\nimport { Card, CondenseType, TextStyle, TextStyleType } from '../../model';\r\nimport { ImageCropper, LinkMarkChooser } from '../../component';\r\nimport { checkXyz, checkLink, checkMonster, randomPassword, randomSetID } from '../../util';\r\nimport { debounce } from 'lodash';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { foilButton, frameButton, starButton, iconButton, attributeButton, stickerButton, condenseButton } from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { StylePicker } from './style-picker';\r\nimport { CheckboxTrain } from './input-train';\r\nimport { ImageCropperRef } from '../../component/card-picture';\r\nimport './input-panel.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst onChangeFactory = (\r\n    key: string,\r\n    mutateFunction: (func: (card: Card) => Card) => void,\r\n    valueTransform: (value: any) => any = (value) => value,\r\n) => {\r\n    return (e: any) => {\r\n        mutateFunction(current => ({\r\n            ...current,\r\n            [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n        }));\r\n    };\r\n};\r\n\r\ntype RandomButton = {\r\n    seeder: () => string,\r\n    onGenerate: (value: string) => void,\r\n}\r\nconst RandomButton = ({\r\n    seeder,\r\n    onGenerate,\r\n}: RandomButton) => {\r\n    return <span style={{ marginLeft: 10, paddingLeft: 10, borderLeft: '1px solid #222' }}>\r\n        <Tooltip overlay=\"Randomize\">\r\n            <SyncOutlined onClick={() => onGenerate(seeder())} />\r\n        </Tooltip>\r\n    </span>;\r\n};\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n}\r\nexport type CardInputPanel = {\r\n\tcurrentCard: Card,\r\n    receivingCanvasRef: HTMLCanvasElement | null,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n\tonCardChange: React.Dispatch<React.SetStateAction<Card>>,\r\n    onImageChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n    children?: React.ReactNode,\r\n} & {\r\n    onTainted: ImageCropper['onTainted']\r\n}\r\nexport const CardInputPanel = React.forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    currentCard,\r\n    receivingCanvasRef,\r\n    defaultCropInfo,\r\n    onCardChange,\r\n    onImageChange,\r\n    onTainted,\r\n    children,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n    const setCard = (mutateFunc: (card: Card) => Card) => {\r\n        onCardChange(currentCard => mutateFunc(currentCard));\r\n    };\r\n    const onFoilChange = onChangeFactory('foil', setCard);\r\n    const onFrameChange = (frameValue: number | string) => {\r\n        onCardChange(currentCard => {\r\n            const value = `${frameValue}`;\r\n            const isST = value === 'spell' || value === 'trap';\r\n            const newTypeAbility = value === 'spell'\r\n                ? ['Spell Card']\r\n                : value === 'trap' ? ['Trap Card'] : currentCard.typeAbility;\r\n            if (isST) setDisplayTypeAbility(newTypeAbility[0]);\r\n    \r\n            return {\r\n                ...currentCard,\r\n                frame: value,\r\n                isPendulum: value === 'link' || value === 'token' || isST ? false : currentCard.isPendulum,\r\n                subFamily: isST ? 'NO ICON' : currentCard.subFamily,\r\n                attribute: isST\r\n                    ? `${value}`.toUpperCase()\r\n                    : currentCard.attribute,\r\n                typeAbility: value === 'spell'\r\n                    ? ['Spell Card']\r\n                    : value === 'trap' ? ['Trap Card'] : currentCard.typeAbility,\r\n            };\r\n        });\r\n    };\r\n    const onAttributeChange = onChangeFactory('attribute', setCard);\r\n    const onSubFamilyChange = onChangeFactory('subFamily', setCard);\r\n    const onNameChange = debounce(onChangeFactory('name', setCard), 350);\r\n    const onNameColorChange = (type: TextStyleType, value: TextStyle) => {\r\n        onCardChange(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    };\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        onCardChange(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n    const onStarChange = onChangeFactory('star', setCard);\r\n    const onIsPendulumChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isPendulum: e.target.checked };\r\n    });\r\n    const onPictureChange = onChangeFactory('picture', setCard);\r\n    const onLinkMapChange = onChangeFactory('linkMap', setCard);\r\n    const onRedScaleChange = onChangeFactory('pendulumScaleRed', setCard);\r\n    const onBlueScaleChange = onChangeFactory('pendulumScaleBlue', setCard);\r\n    const onPendulumEffectChange = debounce(onChangeFactory('pendulumEffect', setCard), 350);\r\n    const onEffectChange = debounce(onChangeFactory('effect', setCard), 350);\r\n    const onATKChange = onChangeFactory('atk', setCard);\r\n    const onDEFChange = onChangeFactory('def', setCard);\r\n    const onTypeAbilityChange = debounce((value: (string | number)[]) => {\r\n        setCard(current => ({\r\n            ...current,\r\n            typeAbility: value.map(entry => `${entry}`),\r\n        }));\r\n    }, 350);\r\n    const onSetIDChange = onChangeFactory('setId', setCard);\r\n    const onPasscodeChange = onChangeFactory('passcode', setCard);\r\n    const onStickerChange = onChangeFactory('sticker', setCard);\r\n    const onCreatorChange = onChangeFactory('creator', setCard);\r\n    const onFirstEditionChange = (e: any) => onCardChange(currentCard => {\r\n        return { ...currentCard, isFirstEdition: e.target.checked };\r\n    });\r\n\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        picture,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumEffect, pendulumScaleRed, pendulumScaleBlue,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        setId,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = currentCard;\r\n    const isXyz = checkXyz(currentCard);\r\n    const isLink = checkLink(currentCard);\r\n    const isMonster = checkMonster(currentCard);\r\n    const [displayTypeAbility, setDisplayTypeAbility] = useState(typeAbility.join('/'));\r\n    const [displayName, setDisplayName] = useState(name);\r\n    const [displayEffect, setDisplayEffect] = useState(effect);\r\n    const [displayPendulumEffect, setDisplayPendulumEffect] = useState(pendulumEffect);\r\n    const [onlineCharPicker, setOnlineCharPicker] = useState('');\r\n    const ref = useRef();\r\n    \r\n    useImperativeHandle(forwardedRef, () => ({\r\n        forceCardData: (card) => {\r\n            setDisplayTypeAbility(card.typeAbility.join('/'));\r\n            setDisplayName(card.name);\r\n            setDisplayEffect(card.effect);\r\n            setDisplayPendulumEffect(card.pendulumEffect);\r\n            imageCropperRef.current?.forceExternalSource(card.picture, card.pictureCrop);\r\n        }\r\n    }));\r\n\r\n    return <div className=\"card-info-panel\">\r\n        {children}\r\n        <CharPicker\r\n            targetId={onlineCharPicker}\r\n            onPick={value => {\r\n                if (ref.current) (ref.current as any)?.props?.onChange?.({\r\n                    target: { value }\r\n                });\r\n            }}\r\n        />\r\n        <CheckboxTrain className=\"foil-radio\" value={foil} onChange={onFoilChange} optionList={foilButton}>\r\n            <span>Foil</span>\r\n        </CheckboxTrain>\r\n        <CheckboxTrain className=\"frame-radio\" value={frame} onChange={onFrameChange} optionList={frameButton} />\r\n        <hr />\r\n        <div className=\"card-header custom-gap\">\r\n            <Input\r\n                id=\"name\"\r\n                ref={onlineCharPicker === 'name' ? ref as any : null}\r\n                onFocus={() => setOnlineCharPicker('name')}\r\n                allowClear\r\n                addonBefore={'Name'}\r\n                placeholder=\"Card Name\"\r\n                value={displayName}\r\n                className=\"name-input\"\r\n                onChange={ev => {\r\n                    onNameChange(ev);\r\n                    setDisplayName(ev.target.value);\r\n                }}\r\n            />\r\n            <StylePicker defaultType={nameStyleType} defaultValue={nameStyle} onChange={onNameColorChange} />\r\n            {isMonster\r\n                ? !isLink\r\n                    ? <CheckboxTrain className=\"checkbox-star-train\" value={`${star}`} onChange={onStarChange} optionList={starButton}>\r\n                        <span>{isXyz ? 'Rank' : 'Level'}</span>\r\n                    </CheckboxTrain>\r\n                    : null\r\n                : <CheckboxTrain value={subFamily} onChange={onSubFamilyChange} optionList={iconButton}>\r\n                    <span>Icon</span>\r\n                </CheckboxTrain>\r\n            }\r\n            <CheckboxTrain className=\"checkbox-image-train\" value={attribute} onChange={onAttributeChange} optionList={attributeButton}>\r\n                <span>Attribute</span>\r\n            </CheckboxTrain>\r\n        </div>\r\n        <div key=\"pic\" className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <Input\r\n                    id=\"set-id\"\r\n                    ref={onlineCharPicker === 'set-id' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('set-id')}\r\n                    allowClear\r\n                    className=\"set-id-input\"\r\n                    addonBefore={<>Set ID<RandomButton seeder={randomSetID} onGenerate={onSetIDChange} /></>}\r\n                    onChange={onSetIDChange}\r\n                    placeholder=\"Set ID\"\r\n                    value={setId}\r\n                />\r\n                {(isMonster && frame !== 'link' && frame !== 'token') && <div className=\"pendulum-container\">\r\n                    <div className=\"joined-row\">\r\n                        <Checkbox onChange={onIsPendulumChange} checked={isPendulum}>Is Pendulum?</Checkbox>\r\n                        {isPendulum && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>Mirror Scale?</Checkbox>}\r\n                    </div>\r\n                    {isPendulum && <>\r\n                        <div>\r\n                            <Input key=\"blue-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#3b9dff' }}>Blue</span> Scale\r\n                            </span>}\r\n                            value={pendulumScaleBlue}\r\n                            onChange={e => {\r\n                                onBlueScaleChange(e);\r\n                                if (isMirrorScale) onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div>\r\n                            <Input key=\"red-scale\" addonBefore={<span>\r\n                                <span style={{ color: '#ff6f6f' }}>Red</span> Scale\r\n                            </span>}\r\n                            value={pendulumScaleRed}\r\n                            onChange={e => {\r\n                                if (isMirrorScale) onBlueScaleChange(e);\r\n                                onRedScaleChange(e);\r\n                            }} />\r\n                        </div>\r\n                        <div className=\"joined-row\" style={{ position: 'relative' }}>\r\n                            <TextArea key=\"pendulum-effect\"\r\n                                id=\"pendulum-effect\"\r\n                                ref={onlineCharPicker === 'pendulum-effect' ? ref as any : null}\r\n                                onFocus={() => setOnlineCharPicker('pendulum-effect')}\r\n                                allowClear\r\n                                placeholder=\"Pendulum effect\"\r\n                                value={displayPendulumEffect}\r\n                                onChange={ev => {\r\n                                    onPendulumEffectChange(ev);\r\n                                    setDisplayPendulumEffect(ev.target.value);\r\n                                }}\r\n                                rows={6}\r\n                            />\r\n                        </div>\r\n                    </>}\r\n                </div>}\r\n                <Input addonBefore=\"Type\"\r\n                    id=\"type\"\r\n                    ref={onlineCharPicker === 'type' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('type')}\r\n                    allowClear\r\n                    onChange={ev => {\r\n                        const value = ev.target.value;\r\n\r\n                        setDisplayTypeAbility(value);\r\n                        onTypeAbilityChange(value\r\n                            .split('/')\r\n                            .map(entry => entry.trim())\r\n                            .filter(entry => typeof entry === 'string' && entry.length > 0));\r\n                    }}\r\n                    placeholder=\"Type / Ability\"\r\n                    style={{ width: '100%' }}\r\n                    value={displayTypeAbility}\r\n                />\r\n                <CheckboxTrain className=\"checkbox-condense-train\" value={`${effectStyle?.condenseTolerant}`}\r\n                    onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n                    optionList={condenseButton}\r\n                >\r\n                    <span>Condense Threshold</span>\r\n                </CheckboxTrain>\r\n                <TextArea key=\"effect\"\r\n                    id=\"card-effect\"\r\n                    ref={onlineCharPicker === 'card-effect' ? ref as any : null}\r\n                    onFocus={() => setOnlineCharPicker('card-effect')}\r\n                    allowClear\r\n                    placeholder=\"Card effect\"\r\n                    value={displayEffect}\r\n                    rows={10}\r\n                    onChange={ev => {\r\n                        onEffectChange(ev);\r\n                        setDisplayEffect(ev.target.value);\r\n                    }}\r\n                />\r\n                <div className=\"card-footer-input\">\r\n                    {isMonster\r\n                        ? <Input key=\"atk\"\r\n                            id=\"atk\"\r\n                            ref={onlineCharPicker === 'atk' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('atk')}\r\n                            addonBefore=\"ATK\" allowClear value={atk} onChange={onATKChange} />\r\n                        : <div />}\r\n                    {isMonster\r\n                        ? <Input key=\"def\"\r\n                            id=\"def\"\r\n                            ref={onlineCharPicker === 'def' ? ref as any : null}\r\n                            onFocus={() => setOnlineCharPicker('def')}\r\n                            addonBefore=\"DEF\" allowClear value={def} onChange={onDEFChange} />\r\n                        : <div />\r\n                    }\r\n                    <Input\r\n                        id=\"password\"\r\n                        ref={onlineCharPicker === 'password' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('password')}\r\n                        allowClear\r\n                        className=\"password-input\"\r\n                        addonBefore={<>Password<RandomButton seeder={randomPassword} onGenerate={onPasscodeChange} /></>}\r\n                        onChange={onPasscodeChange}\r\n                        placeholder=\"Password\"\r\n                        value={passcode}\r\n                    />\r\n                    <Checkbox\r\n                        className=\"input-1st\"\r\n                        onChange={onFirstEditionChange}\r\n                        checked={isFirstEdition}\r\n                    >\r\n                        Is 1st Edition?\r\n                    </Checkbox>\r\n                    <Input addonBefore=\"Creator\"\r\n                        id=\"creator\"\r\n                        ref={onlineCharPicker === 'creator' ? ref as any : null}\r\n                        onFocus={() => setOnlineCharPicker('creator')}\r\n                        allowClear\r\n                        className=\"creator-input\"\r\n                        onChange={onCreatorChange}\r\n                        placeholder=\"Creator\"\r\n                        value={creator}\r\n                    />\r\n                    <CheckboxTrain className=\"sticker-input checkbox-image-train\" value={sticker} onChange={onStickerChange} optionList={stickerButton}>\r\n                        <span>Sticker</span>\r\n                    </CheckboxTrain>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageCropper\r\n                    ref={imageCropperRef}\r\n                    noRedrawNumber={1}\r\n                    defaultExternalSource={picture}\r\n                    defaultCropInfo={defaultCropInfo}\r\n                    previewCanvasRef={receivingCanvasRef}\r\n                    onSourceChange={onPictureChange}\r\n                    onImageChange={onImageChange}\r\n                    onTainted={onTainted}\r\n                >\r\n                    {isLink\r\n                        ? <LinkMarkChooser defaultValue={linkMap} onChange={onLinkMapChange} />\r\n                        : <div />}\r\n                </ImageCropper>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import React from 'react';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Popover } from 'antd';\r\nimport './app-header.scss';\r\n\r\nexport const AppHeader = React.memo(() => {\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={48} />\r\n        <div className=\"app-description\">\r\n            <h1>Yugioh Carder <small style={{ fontFamily: 'serif' }}>v{process.env.REACT_APP_VERSION ?? 'unknown'} TCG</small></h1>\r\n            <div className=\"app-contribution\">\r\n                <span>GUI: <b>Lauqerm</b></span>\r\n                <span>Template: <b>Grezar</b> and others (<a\r\n                    href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\">Deviant Art</a>)</span>\r\n                <Popover overlayClassName=\"disclaimer-overlay\" content={<div className=\"disclaimer\">\r\n                    <h2>Disclaimer</h2>\r\n                    <ul>\r\n                        <li>This is a personal project, not an \"official\" card maker.</li>\r\n                        <li>I holds no liability for cards created by this app, including picture, card text and any product that related to it.</li>\r\n                        <li>I do not own any of Yu-Gi-Oh card layers and fonts use in this project.</li>\r\n                        <li>If you want to modify card layers, or use it in any public project, please contact <a\r\n                            href=\"https://www.deviantart.com/grezar\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\">Grezar</a> directly.</li>\r\n                    </ul>\r\n                </div>}>\r\n                    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\r\n                </Popover>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}, () => true);\r\n\r\nexport const taintedCanvasWarning = <Popover\r\n    overlayClassName=\"disclaimer-overlay\"\r\n    style={{ display: 'inline-block' }}\r\n    content={<div className=\"disclaimer\">\r\n        <h2>What is a tainted canvas?</h2>\r\n        <p>\r\n        You are using an image host that does not get the \"approval\" needed to be draw to the app. Browsers see it as a potential security risk (even if it is not the case), and mark the canvas as \"tainted\".\r\n        </p>\r\n        <h2>How does it affect me?</h2>\r\n        <p>\r\n        A \"tainted canvas\" prevent all sort of automatic save. From then on you must save the card manually by right click it → \"Save image as...\". It is implying that this action is fully as your concern.<br />\r\n        Furthemore, once it get tainted, it will remains tainted even if you switch to other \"safe\" image host.\r\n        </p>\r\n        <h2>How do I fix it?</h2>\r\n        <p>\r\n        Change to other host (\"imgur\" for example, Facebook and Twitter will also work just fine) THEN refresh the page.<br />\r\n        If you cannot afford to do that, the app will also work mostly just fine, you only need to manually save the card (and keep cautious).\r\n        </p>\r\n    </div>}>\r\n    <ExclamationCircleOutlined className=\"disclaimer-icon\" />\r\n</Popover>;","export type FontSize = {\r\n    fontSize: number,\r\n    lineHeight: number,\r\n    lineCount: number,\r\n};\r\nexport type BoxSize = {\r\n\twidth: number,\r\n\ttop: number,\r\n\tleft: number,\r\n};\r\n\r\nexport const monsterFontList: FontSize[] = [\r\n    { fontSize: 17, lineHeight: 17, lineCount: 6 },\r\n    { fontSize: 14, lineHeight: 14, lineCount: 7 },\r\n    { fontSize: 12, lineHeight: 12, lineCount: 8 },\r\n    { fontSize: 11, lineHeight: 11, lineCount: 9 },\r\n    { fontSize: 10, lineHeight: 10, lineCount: 10 },\r\n    { fontSize: 9, lineHeight: 9, lineCount: 11 },\r\n    { fontSize: 8, lineHeight: 8, lineCount: 12 },\r\n];\r\nexport const monsterSizeList: BoxSize[] = [\r\n    { width: 463, top: 620, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n    { width: 463, top: 624, left: 43.89 },\r\n];\r\nexport const monsterVanillaFontList: FontSize[] = [\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 6 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 7 },\r\n    { fontSize: 16.74, lineHeight: 17.01, lineCount: 8 },\r\n];\r\n\r\nexport const pendulumFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n    { fontSize: 16.41, lineHeight: 16.44, lineCount: 5 },\r\n];\r\nexport const pendulumSizeList: BoxSize[] = [\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n    { width: 375, top: 504.5, left: 87.05 },\r\n];\r\n\r\nexport const stFontList: FontSize[] = [\r\n    { fontSize: 16.41, lineHeight: 16.74, lineCount: 8 },\r\n    { fontSize: 13.46, lineHeight: 14.28, lineCount: 10 },\r\n];\r\nexport const stSizeList: BoxSize[] = [\r\n    { width: 461, top: 601, left: 45 },\r\n    { width: 461, top: 601, left: 45 },\r\n];\r\n\r\nexport type TypeSize = {\r\n\ttop: number,\r\n\tleft: number,\r\n    bracketSize: {\r\n        char: number,\r\n        bracketSpace: number,\r\n        bracketOffsetTop: number,\r\n    },\r\n    upperCaseSize: number,\r\n    upperCaseScale: number,\r\n    lowerCaseSize: number,\r\n    lowerCaseScale: number,\r\n    spaceScale: number,\r\n    spaceSize: {\r\n        frontSpace: number,\r\n        char: number,\r\n        behindSpace: number,\r\n    },\r\n    iconSpace: number,\r\n};\r\nexport const typeSizeMap: Record<string, TypeSize> = {\r\n    small: {\r\n        top: 622,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 18.71,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 20,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 16,\r\n        lowerCaseScale: 1.1,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 21,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    medium: {\r\n        top: 620.80,\r\n        left: 43,\r\n        bracketSize: {\r\n            char: 19.69,\r\n            bracketSpace: 8.51,\r\n            bracketOffsetTop: 1.64,\r\n        },\r\n        upperCaseSize: 21,\r\n        upperCaseScale: 1,\r\n        lowerCaseSize: 18,\r\n        lowerCaseScale: 0.95,\r\n        spaceScale: 1,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 0,\r\n    },\r\n    large: {\r\n        top: 126,\r\n        left: 494,\r\n        bracketSize: {\r\n            char: 25,\r\n            bracketSpace: 11,\r\n            bracketOffsetTop: 2,\r\n        },\r\n        upperCaseSize: 26,\r\n        upperCaseScale: 1.1,\r\n        lowerCaseSize: 23,\r\n        lowerCaseScale: 1,\r\n        spaceScale: 1.4,\r\n        spaceSize: {\r\n            frontSpace: 5,\r\n            char: 23,\r\n            behindSpace: 15,\r\n        },\r\n        iconSpace: 32,\r\n    },\r\n};","export const arrowPositionList = [\r\n    { top: 126, left: 46, width: 50, height: 51 },\r\n    { top: 116, left: 226, width: 99, height: 32 },\r\n    { top: 126, left: 453, width: 51, height: 51 },\r\n    { top: 305, left: 35, width: 33, height: 99 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   // Middle\r\n    { top: 305, left: 482, width: 32, height: 99 },\r\n    { top: 534, left: 46, width: 50, height: 50 },\r\n    { top: 562, left: 226, width: 99, height: 33 },\r\n    { top: 534, left: 453, width: 51, height: 50 },\r\n];\r\n\r\nexport const foilPosition: Record<string, {\r\n    art: { left: number }\r\n}> = {\r\n    gold: {\r\n        art: {\r\n            left: 2,\r\n        }\r\n    },\r\n    platinum: {\r\n        art: {\r\n            left: 1,\r\n        }\r\n    },\r\n};","import { FontSize, monsterFontList, BoxSize, monsterSizeList } from '../const';\r\nimport { CondenseType, defaultTextStyle, TextStyle } from '../model';\r\nimport { splitEffect, createCondenser, quoteConvert } from '../util';\r\n\r\nexport const drawName = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n    style: TextStyle,\r\n) => {\r\n    if (ctx && value) {\r\n        ctx.fillStyle = style.fillStyle;\r\n        if (style.hasShadow) {\r\n            ctx.shadowColor = style.shadowColor;\r\n            ctx.shadowOffsetY = style.shadowOffsetY;\r\n            ctx.shadowOffsetX = style.shadowOffsetX;\r\n            ctx.shadowBlur = style.shadowBlur;\r\n        }\r\n        const splittedText = quoteConvert(value).split(/([^&A-Za-z0-9\\-/\\s()])/g);\r\n        const contentWidth = splittedText\r\n            .reduce((prev, cur, index) => {\r\n                if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                else ctx.font = '54.59px matrix';\r\n\r\n                return prev + ctx.measureText(cur).width;\r\n            }, 0);\r\n\r\n        // ctx.fillText(value, edge, baseline, maxWidth);\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedText\r\n                .reduce((prev, cur, index) => {\r\n                    if (index % 2 === 0) ctx.font = '64.59px MatrixRegularSmallCaps';\r\n                    else ctx.font = 'small-caps 54.59px matrix';\r\n    \r\n                    ctx.fillText(cur, prev / condenseRatio, baseline);\r\n                    return prev + ctx.measureText(cur).width * condenseRatio;\r\n                }, edge);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n    }\r\n};\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline);\r\n            accLeft += (digit === '1' ? ctx.measureText(digit).width * 0.65 : ctx.measureText(digit).width);\r\n        });\r\n    }\r\n};\r\n\r\nconst CondenseTolerantMap = {\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    }\r\n};\r\nexport const drawEffect = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isPendulumEffect = false,\r\n    isNormal = false,\r\n    fontList: FontSize[] = monsterFontList,\r\n    sizeList: BoxSize[] = monsterSizeList,\r\n    condenseTolerant: CondenseType = 'strict',\r\n) => {\r\n    let effectSizeLevel = 0;\r\n    const bulletSymbol = '●';\r\n    const bulletSymbolWidth = 15;\r\n    const specialSymbol = '#@∞';\r\n    const breakableSymbol = '\\\\s-';\r\n    const spaceSymbol = ' ';\r\n    if (ctx && content) {\r\n        const normalizedContent = quoteConvert(content.trim());\r\n        const tolerantPerSentence: Record<string, number> = CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict'];\r\n        const {\r\n            body: effectBody,\r\n            flavorCondition: effectFlavorCondition,\r\n            material: effectMaterial,\r\n        } = isPendulumEffect\r\n            ? {\r\n                body: normalizedContent,\r\n                flavorCondition: '',\r\n                material: '',\r\n            }\r\n            : splitEffect(normalizedContent, isNormal);\r\n\r\n        const additionalLineCount = (effectMaterial.length > 0 ? 1 : 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n        const sentencizeText = effectBody.split('\\n');\r\n        \r\n        const tokenizer = new RegExp(`([${specialSymbol}${breakableSymbol}])`, 'g');\r\n        const specialSymbolReg = new RegExp(specialSymbol, 'g');\r\n\r\n        while (effectSizeLevel < fontList.length) {\r\n            const { fontSize, lineHeight, lineCount } = fontList[effectSizeLevel];\r\n            const { left, width: basedWidth, top } = sizeList[effectSizeLevel];\r\n            const width = isNormal ? basedWidth - 2 : basedWidth;\r\n            const condenser = createCondenser();\r\n            let effectiveRatio = 1000;\r\n\r\n            const maxLine = Math.max(sentencizeText.length, lineCount);\r\n\r\n            ctx.font = `${isNormal ? 'italic' : ''} ${fontSize}px MatrixBook`;\r\n            ctx.textAlign = 'left';\r\n\r\n            const switchFont = (func: () => void) => {\r\n                const tempFont = ctx.font;\r\n                const largeSize = fontSize * 1.15;\r\n                ctx.font = tempFont.replace('MatrixBook', 'matrix').replace(`${fontSize}`, `${largeSize}`);\r\n                func();\r\n                ctx.font = tempFont;\r\n            };\r\n\r\n            // [CREATE SENTENCE ON EACH LINE]\r\n            let lineList: { text: string, width: number, isLast: boolean }[] = [];\r\n            const createSentence = () => {\r\n                lineList = [];\r\n\r\n                return sentencizeText.reduce((prev, curr) => {\r\n                    // The width is \"expand\" based on condense ratio so all the calculate does not need to be scaled\r\n                    const condenseRatio = condenser.getMedian() / 1000;\r\n                    const hypoWidth = width / condenseRatio;\r\n                    const tokenizedText = curr.split(tokenizer);\r\n                    let currentLineCount = 1;\r\n                    let tokenSentence: string[] = [];\r\n                    let totalWidth = 0;\r\n\r\n                    for (let cnt = 0; cnt < tokenizedText.length; cnt++) {\r\n                        let tokenWidth = 0;\r\n                        /**\r\n                         * If bullet symbol is met, it will become \"wider\" based on condense ratio\r\n                         * so that when the whole line is condense, bullet symbol's width become\r\n                         * \"normal\", as if it were not condensed\r\n                         */\r\n                        if (tokenizedText[cnt] === bulletSymbol) tokenWidth = bulletSymbolWidth / condenseRatio;\r\n                        /**\r\n                         * Some special symbol required different font\r\n                         */\r\n                        else if (specialSymbolReg.test(tokenizedText[cnt])) {\r\n                            switchFont(() => {\r\n                                tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                            });\r\n                        } else tokenWidth = ctx.measureText(tokenizedText[cnt]).width;\r\n                        if (totalWidth + tokenWidth > hypoWidth) {\r\n                            // If the next token cause overflow, wrap it down\r\n                            const fullString = tokenSentence.join('').trim();\r\n                            // Calculate the line width as if the bullet is wider\r\n                            const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                            lineList.push({\r\n                                text: fullString,\r\n                                width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                                    + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                                isLast: false,\r\n                            });\r\n                            totalWidth = tokenWidth;\r\n                            tokenSentence = [tokenizedText[cnt]];\r\n                            currentLineCount += 1;\r\n                        } else {\r\n                            totalWidth += tokenWidth;\r\n                            tokenSentence.push(tokenizedText[cnt]);\r\n                        }\r\n                    }\r\n\r\n                    const fullString = tokenSentence.join('').trim();\r\n                    const fullStringSplittedByBullet = fullString.split(bulletSymbol);\r\n                    lineList.push({\r\n                        text: fullString,\r\n                        width: fullStringSplittedByBullet.reduce((prev, curr) => prev + ctx.measureText(curr).width, 0)\r\n                            + (fullStringSplittedByBullet.length - 1) * bulletSymbolWidth / condenseRatio,\r\n                        isLast: true,\r\n                    });\r\n    \r\n                    return prev + currentLineCount;\r\n                }, 0) + additionalLineCount;\r\n            };\r\n\r\n            // [FIND SUITABLE CONDENSE RATIO]\r\n            while (condenser.getIterateCount() >= 0) {\r\n                if (condenser.getIterateCount() <= 0) {\r\n                    // When out of iteration, return the concluded median\r\n                    effectiveRatio = condenser.getMedian();\r\n                    break;\r\n                } else {\r\n                    const lineCount = createSentence();\r\n\r\n                    if (lineCount > maxLine) {\r\n                        // If overflow, lower the median and apply it\r\n                        condenser.searchDown();\r\n                    } else {\r\n                        if (condenser.getMedian() === 1000) break;\r\n                        else effectiveRatio = condenser.reverseSearch();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // [START DRAWING]\r\n            const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number) => {\r\n                ctx.beginPath();\r\n                ctx.arc(edge + 7, baseline - 5.5, 5.5, 0, 2 * Math.PI, false);\r\n                ctx.fill();\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#003300';\r\n                ctx.stroke();\r\n            };\r\n            const tolerantValue = tolerantPerSentence[`${sentencizeText.length}`] ?? tolerantPerSentence['3'];\r\n            if ((effectiveRatio < tolerantValue)\r\n            && effectSizeLevel < fontList.length - 1) {\r\n                effectSizeLevel += 1;\r\n            } else {\r\n                ctx?.clearRect(0, 0, 549, 750);\r\n                let baseline = top + lineHeight;\r\n                if (effectMaterial.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectMaterial).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectMaterial, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n\r\n                /**\r\n                 * Is it last line?\r\n                 * * Yes:\r\n                 *   * Draw text with predefined ratio (factor in special symbol and effect bullet)\r\n                 * * No:\r\n                 *   * Calculate total meaningful content width (text, special symbol, effect bullet)\r\n                 *   * Calculate space content by subtract total width with meaningful content width\r\n                 *   * Distribute space content to each individual space\r\n                 *   * Draw text with predefined ratio and widened space\r\n                 */\r\n                const sigmoidRatio = effectiveRatio / 1000; // Fancy way to force ratio in to 0-1 range\r\n                lineList.forEach(({\r\n                    text,\r\n                    width: actualWidth,\r\n                    isLast,\r\n                }) => {\r\n                    const condenseRatio = isLast\r\n                        ? Math.min(sigmoidRatio, 1)\r\n                        : sigmoidRatio;\r\n\r\n                    ctx.scale(condenseRatio, 1);\r\n                    if (isLast) {\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}])`, 'g');\r\n                        const splittedText = text.split(splitter);\r\n\r\n                        splittedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                edge += ctx.measureText(cur).width * condenseRatio;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    ctx.scale(1 / condenseRatio, 1);\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                    ctx.scale(condenseRatio, 1);\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                        edge += ctx.measureText(cur).width * condenseRatio;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                    } else {\r\n                        /**\r\n                         * This regex split string into two types:\r\n                         * * Normal text, that is, any words or characters (EVEN empty string) that can be draw normally without any proccessing\r\n                         * * Special character that need special procession before they can be draw\r\n                         * \r\n                         * By nature of the regex, the result will guaranteed to look like this:\r\n                         * \r\n                         * `[normal, special, normal, special, normal, special, ...]`\r\n                         * \r\n                         * It is easy to see that normal text will always stand at odd indices, while special text stand at even ones\r\n                         */\r\n                        const splitter = new RegExp(`([${bulletSymbol}${specialSymbol}${spaceSymbol}])`, 'g');\r\n                        const spaceSeparatedText = text.split(splitter);\r\n                        const spaceNextToBulletSet: Set<number> = new Set();\r\n                        let nonSpaceWidth = 0;\r\n                        let spaceCount = 0;\r\n\r\n                        spaceSeparatedText.forEach((entry, index) => {\r\n                            if (entry === spaceSymbol) {\r\n                                /**\r\n                                 * Space right next to bullet is treated differently and do not count toward space counter, also their position is\r\n                                 * saved\r\n                                 */\r\n                                if (spaceSeparatedText[index - 2] === bulletSymbol) {\r\n                                    spaceNextToBulletSet.add(index - 2);\r\n                                    nonSpaceWidth += ctx.measureText(entry).width * condenseRatio;\r\n                                } else {\r\n                                    spaceCount += 1;\r\n                                }\r\n                            } else if (entry === bulletSymbol) {\r\n                                nonSpaceWidth += 15;\r\n                            } else if (specialSymbolReg.test(entry)) {\r\n                                switchFont(() => nonSpaceWidth += ctx.measureText(entry).width * condenseRatio);\r\n                            } else {\r\n                                nonSpaceWidth += ctx.measureText(entry).width * condenseRatio;\r\n                            }\r\n                        });\r\n                        // Split text by \"space\", then distribute remaining width to those spaces, resulting in \"widen\" space\r\n                        const spaceWidth = spaceCount > 0 ? (width - nonSpaceWidth) / spaceCount : 0;\r\n\r\n                        spaceSeparatedText.reduce((prev, cur, index) => {\r\n                            let edge = prev;\r\n\r\n                            // Normal text\r\n                            if (index % 2 === 0) {\r\n                                ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                edge += ctx.measureText(cur).width * condenseRatio;\r\n                            } else {\r\n                                // Special bullet\r\n                                if (cur === bulletSymbol) {\r\n                                    ctx.scale(1 / condenseRatio, 1);\r\n                                    drawBullet(ctx, edge, baseline);\r\n                                    edge += 15;\r\n                                    ctx.scale(condenseRatio, 1);\r\n                                    /**\r\n                                     * If this bullet is followed by a white space, we draw this white space with normal condensed font size instead of\r\n                                     * auto-distributed size because bullet naturally form a list. So we must guarantee the space between bullet and\r\n                                     * the text next to it must be the same accross all the line so it look perfectly aligned.\r\n                                     */\r\n                                    if (spaceNextToBulletSet.has(index)) {\r\n                                        ctx.fillText(spaceSymbol, edge / condenseRatio, baseline);\r\n                                        edge += ctx.measureText(spaceSymbol).width * condenseRatio;\r\n                                    }\r\n                                } else if (cur === spaceSymbol) {\r\n                                    /**\r\n                                     * Since we already has special treatment for space next to bullet, ignore it for normal space processing.\r\n                                     */\r\n                                    if (!spaceNextToBulletSet.has(index - 2)) edge += spaceWidth;\r\n                                } else {\r\n                                    switchFont(() => {\r\n                                        ctx.fillText(cur, edge / condenseRatio, baseline);\r\n                                        edge += ctx.measureText(cur).width * condenseRatio;\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return edge;\r\n                        }, left);\r\n                    }\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                    baseline += lineHeight;\r\n                });\r\n\r\n                if (effectFlavorCondition.length > 0) {\r\n                    let actualWidth = ctx.measureText(effectFlavorCondition).width;\r\n                    let condenseRatio = Math.min(width / actualWidth, 1);\r\n\r\n                    ctx.font = `${fontSize}px MatrixBook`;\r\n                    ctx.scale(condenseRatio, 1);\r\n                    ctx.fillText(effectFlavorCondition, left / condenseRatio, baseline);\r\n                    baseline += lineHeight;\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return effectSizeLevel;\r\n    }\r\n    return effectSizeLevel;\r\n};","import { CanvasConst } from 'src/model';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const measureWithSymbol = (\r\n    ctx: CanvasRenderingContext2D,\r\n    content: string,\r\n    symbol: string,\r\n    maxWidth: number,\r\n) => {\r\n    const splittedContent = content.split(symbol);\r\n    const splittedWidth = splittedContent.map(entry => ctx.measureText(entry).width);\r\n    const symbolWidth = ctx.measureText(symbol).width;\r\n    const totalCondensableWidth = splittedWidth.reduce((prev, curr) => prev + curr, 0);\r\n    const returnBundle = {\r\n        splittedContent,\r\n        splittedWidth,\r\n        symbolWidth,\r\n        totalCondensableWidth,\r\n        condenseRatio: 1,\r\n    };\r\n\r\n    if (totalCondensableWidth > 0) {\r\n        // Calculate as if the \"symbol\" always appear as full width\r\n        returnBundle.condenseRatio = Math.min((maxWidth - (splittedWidth.length - 1) * symbolWidth) / totalCondensableWidth, 1);\r\n    }\r\n\r\n    return returnBundle;\r\n};\r\n\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && str) {\r\n        ctx.textAlign = 'left';\r\n        const charList = str.split('');\r\n        let curLeft = edge;\r\n\r\n        charList.forEach(char => {\r\n            ctx.fillText(char, curLeft, baseline);\r\n            curLeft += ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n\r\n        return curLeft;\r\n    }\r\n    return 0;\r\n};\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && str) {\r\n        ctx.textAlign = 'right';\r\n        const charList = str.split('');\r\n        let curRight = edge;\r\n\r\n        charList.forEach((c, index) => {\r\n            const char = charList[charList.length - index - 1];\r\n            ctx.fillText(char, curRight, baseline);\r\n            curRight -= ctx.measureText(char).width * (1 + (letterSpacingRatio / 2));\r\n        });\r\n        return curRight;\r\n    };\r\n    return edge;\r\n};\r\n\r\nexport const fillTextLeftWithLimit = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    edge: number,\r\n    baseline: number,\r\n    maxWidth: number,\r\n) => {\r\n    if (ctx) {\r\n        const contentWidth = ctx.measureText(content).width;\r\n\r\n        if (contentWidth > 0) {\r\n            const condenseRatio = Math.min(maxWidth / contentWidth, 1);\r\n            ctx.scale(condenseRatio, 1);\r\n            ctx.fillText(content, edge / condenseRatio, baseline);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n            ctx.fillStyle = '#000000';\r\n        }\r\n    }\r\n};\r\n\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n) => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, CanvasWidth, CanvasHeight);\r\n    };\r\n};","import { fillTextRightWithSpacing, measureWithSymbol } from './util';\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n) => {\r\n    if (ctx) {\r\n        ctx.font = 'bold 16px palatino-linotype-bold';\r\n\r\n        let left = edge;\r\n        ctx.fillText('1', left, 777);\r\n        left += ctx.measureText('1').width - 2;\r\n\r\n        ctx.font = 'bold 12px palatino-linotype-bold';\r\n        ctx.fillText('st', left, 777 - 5);\r\n        left += ctx.measureText('st').width;\r\n\r\n        ctx.font = 'bold 15px palatino-linotype-bold';\r\n        ctx.fillText(' Edition', left, 777);\r\n    }\r\n};\r\n\r\nexport const drawCreatorText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n) => {\r\n    if (ctx && content) {\r\n        ctx.font = '16px stone-serif-regular';\r\n\r\n        const uncondensableSymbol = '©';\r\n        const {\r\n            splittedContent,\r\n            splittedWidth,\r\n            symbolWidth,\r\n            condenseRatio,\r\n        } = measureWithSymbol(ctx, content, uncondensableSymbol, 257);\r\n\r\n        if (condenseRatio < 1) {\r\n            ctx.textAlign = 'left';\r\n            ctx.scale(condenseRatio, 1);\r\n            splittedContent.reduce((prev, cur, index) => {\r\n                // Fill condense text at the current edge\r\n                ctx.fillText(cur, prev / condenseRatio, 777);\r\n                // Increase edge equal to the draw text (condense ratio factored)\r\n                let nextEdge = prev + splittedWidth[index] * condenseRatio;\r\n                if (index < splittedContent.length - 1) {\r\n                    // Restore 1:1 ratio\r\n                    ctx.scale(1 / condenseRatio, 1);\r\n                    // Increase edge equal to the character \"©\" (condense ratio is 1 so no factored)\r\n                    ctx.fillText(uncondensableSymbol, nextEdge, 777);\r\n                    nextEdge += symbolWidth;\r\n                    // Restore condense ratio\r\n                    ctx.scale(condenseRatio, 1);\r\n                }\r\n                return nextEdge;\r\n            }, 496 - 257);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        } else {\r\n            ctx.textAlign = 'right';\r\n            fillTextRightWithSpacing(ctx, content, -0.15, 496 / condenseRatio, 777);\r\n        }\r\n        ctx.textAlign = 'left';\r\n    }\r\n};\r\n\r\nexport const drawAD = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value !== undefined) {\r\n        if (value === '∞') {\r\n            ctx.textAlign = 'right';\r\n            ctx.font = 'bold 25px matrix';\r\n            ctx.fillText(value, edge + 49.94, baseline);\r\n        } else {\r\n            ctx.textAlign = 'left';\r\n            const tokenizedText = `${value}`.split('?');\r\n\r\n            let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n                ctx.font = '25px MatrixBoldSmallCaps';\r\n                let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = '25px matrix';\r\n                    nextWidth += ctx.measureText('?').width;\r\n                }\r\n\r\n                return nextWidth;\r\n            }, 0);\r\n\r\n            if (totalWidth > 0) {\r\n                const condenseRatio = Math.min(49.94 / totalWidth, 1);\r\n\r\n                ctx.scale(condenseRatio, 1);\r\n                tokenizedText.reduce((prev, curr, index, arr) => {\r\n                    const curText = arr[arr.length - 1 - index];\r\n                    let nextEdge = prev;\r\n                    ctx.font = '25px MatrixBoldSmallCaps';\r\n                    nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                    ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                    if (index < tokenizedText.length - 1) {\r\n                        ctx.font = 'bold 25px matrix';\r\n                        nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                        ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                    }\r\n    \r\n                    return nextEdge;\r\n                }, edge + 49.94);\r\n                ctx.scale(1 / condenseRatio, 1);\r\n            }\r\n        }\r\n    }\r\n};","import { TypeSize } from '../const';\r\n\r\ntype Aligment = 'left' | 'right';\r\nexport const drawBracketTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const {\r\n                top: baseline,\r\n                bracketSize: { char: bracketChar, bracketOffsetTop }\r\n            } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketChar}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline - bracketOffsetTop);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawIconSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { iconSpace } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            return edge + iconSpace * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawBracketSpaceTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    return (edge: number) => {\r\n        if (ctx) {\r\n            const { top: baseline, bracketSize: { bracketSpace } } = size;\r\n            const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n\r\n            ctx.font = `bold ${bracketSpace}px stone-serif-bold`;\r\n            ctx.textAlign = alignment;\r\n            ctx.fillText(content, edge, baseline);\r\n            return edge + ctx.measureText(content).width * alignmentOffset;\r\n        }\r\n        return edge;\r\n    };\r\n};\r\nexport const drawTextTemplate = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isLast = false,\r\n    size: TypeSize,\r\n    alignment: Aligment,\r\n) => {\r\n    const {\r\n        top: baseline,\r\n        spaceSize: { frontSpace, char: spaceChar, behindSpace },\r\n        upperCaseScale,\r\n        upperCaseSize,\r\n        lowerCaseScale,\r\n        lowerCaseSize,\r\n        spaceScale,\r\n    } = size;\r\n    const alignmentOffset = alignment === 'left' ? 1 : -1;\r\n    const drawSlashTemplate = (\r\n        ctx: CanvasRenderingContext2D,\r\n        baseOffset: number,\r\n    ) => {\r\n        let totalOffset = baseOffset;\r\n        ctx.font = `bold ${frontSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n\t\r\n        ctx.font = `oblique bold ${spaceChar}px stone-serif-bold`;\r\n        ctx.scale(0.65, 1);\r\n        ctx.fillText('/', totalOffset / 0.65, baseline);\r\n        totalOffset += ctx.measureText('/').width * 0.65 * alignmentOffset;\r\n        ctx.scale(1 / 0.65, 1);\r\n\t\r\n        ctx.font = `bold ${behindSpace}px stone-serif-bold`;\r\n        ctx.fillText(' ', totalOffset, baseline);\r\n        totalOffset += ctx.measureText(' ').width * alignmentOffset;\r\n        return totalOffset;\r\n    };\r\n\r\n    return (left: number) => {\r\n        let totalOffset = left;\r\n        if (ctx) {\r\n            ctx.textAlign = alignment;\r\n\r\n            if (!isLast && alignment === 'right') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            content\r\n                .split('')\r\n                .forEach((c, index, arr) => {\r\n                    const char = alignment === 'left' ? arr[index] : arr[arr.length - 1 - index];\r\n                    if (/[A-Z]/.test(char)) {\r\n                        ctx.font = `bold ${upperCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(upperCaseScale, 1);\r\n                        ctx.fillText(char, totalOffset / upperCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * upperCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / upperCaseScale, 1);\r\n                    } else if (/\\s/.test(char)) {\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(spaceScale, 1);\r\n                        ctx.fillText(char, totalOffset / spaceScale, baseline);\r\n                        totalOffset += ctx.measureText(char).width * spaceScale * alignmentOffset;\r\n                        ctx.scale(1 / spaceScale, 1);\r\n                    } else {\r\n                        const upperChar = char.toLocaleUpperCase();\r\n                        ctx.font = `bold ${lowerCaseSize}px stone-serif-bold`;\r\n                        ctx.scale(lowerCaseScale, 1);\r\n                        ctx.fillText(upperChar, totalOffset / lowerCaseScale, baseline);\r\n                        totalOffset += ctx.measureText(upperChar).width * lowerCaseScale * alignmentOffset;\r\n                        ctx.scale(1 / lowerCaseScale, 1);\r\n                    }\r\n                });\r\n            if (!isLast && alignment === 'left') totalOffset = drawSlashTemplate(ctx, totalOffset);\r\n            return totalOffset;\r\n        }\r\n        return totalOffset;\r\n    };\r\n};","const imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n}> = {};\r\n\r\nexport const drawFromSource = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = process.env.PUBLIC_URL + source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nexport const drawFromSourceWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number, dh: number,\r\n) => {\r\n    if (!ctx) return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const img = imageCacheMap[source].image;\r\n            let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n            let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n            ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n            resolve(true);\r\n        } else {\r\n            const img = new Image();\r\n            img.src = process.env.PUBLIC_URL + source;\r\n            img.onload = () => {\r\n                let normalizedX = typeof sx === 'number' ? sx : sx(img);\r\n                let normalizedY = typeof sy === 'number' ? sy : sy(img);\r\n                ctx.drawImage(img, normalizedX, normalizedY, dw, dh);\r\n                imageCacheMap[source].ready = true;\r\n                resolve(true);\r\n            };\r\n            img.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            imageCacheMap[source] = {\r\n                image: img,\r\n                ready: false,\r\n            };\r\n        }\r\n    });\r\n};","import { useCallback, useEffect, useRef } from 'react';\r\nimport {\r\n    arrowPositionList,\r\n    foilPosition,\r\n    pendulumFontList,\r\n    pendulumSizeList,\r\n    stFontList,\r\n    stSizeList,\r\n    typeSizeMap\r\n} from 'src/const';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawAD,\r\n    drawBracketSpaceTemplate,\r\n    drawBracketTemplate,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawFromSource,\r\n    drawFromSourceWithSize,\r\n    drawIconSpaceTemplate,\r\n    drawName,\r\n    drawScale,\r\n    drawTextTemplate,\r\n    fillTextLeftWithSpacing,\r\n    fillTextRightWithSpacing\r\n} from 'src/draw';\r\nimport { Card, defaultTextStyle, foilStyleMap, iconList, MasterDuelCanvas } from 'src/model';\r\nimport { checkLink, checkMonster, checkNormal, checkXyz, getCardFrame } from 'src/util';\r\n\r\n\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n}\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterDuelCanvas, card: Card, props: DrawerProp) => {\r\n    const {\r\n        artCanvas,\r\n        previewCanvas,\r\n        frameCanvas,\r\n        specialFrameCanvas,\r\n        attributeCanvas,\r\n        creatorCanvas,\r\n        effectCanvas,\r\n        nameCanvas,\r\n        passcodeCanvas,\r\n        pendulumEffectCanvas,\r\n        pendulumScaleCanvas,\r\n        setIdCanvas,\r\n        statCanvas,\r\n        stickerCanvas,\r\n        subFamilyCanvas,\r\n        typeCanvas,\r\n    } = canvasMap;\r\n    const {\r\n        frame, foil,\r\n        name, nameStyleType, nameStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumEffect, pendulumScaleBlue, pendulumScaleRed,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        subFamily,\r\n        star,\r\n        setId,\r\n        passcode, isFirstEdition, creator, sticker,\r\n    } = card;\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n    } = props;\r\n\r\n    const drawingPipeline = useRef<Record<string, () => Promise<any>>>({\r\n        frame: () => Promise.resolve(),\r\n        star: () => Promise.resolve(),\r\n        attribute: () => Promise.resolve(),\r\n        specialFrame: () => Promise.resolve(),\r\n        sticker: () => Promise.resolve(),\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = artCanvas.current?.getContext('2d');\r\n            const previewCtx = previewCanvas.current;\r\n            if (previewCtx && ctx) {\r\n                ctx.clearRect(0, 0, 548, 650);\r\n                if (isPendulum) {\r\n                    ctx.drawImage(previewCtx, 38, 144, 474, 470);\r\n                } else {\r\n                    ctx.drawImage(previewCtx, 67, 147, 416, 416);\r\n                }\r\n            }\r\n        }\r\n    }, [active, isPendulum, imageChangeCount, artCanvas, previewCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = frameCanvas.current?.getContext('2d');\r\n\r\n            drawingPipeline.current.frame = async () => {\r\n                clearCanvas(ctx);\r\n                const cardType = getCardFrame(frame);\r\n                const hasFoil = foil !== 'normal';\r\n\r\n                await drawFromSource(ctx, `/asset/image/frame/frame-${cardType}.png`, 0, 0);\r\n                if (hasFoil) {\r\n                    const { art } = foilPosition[foil];\r\n\r\n                    await drawFromSource(ctx, `/asset/image/frame/frame-art-${foil}.png`, art.left, 120);\r\n                    await drawFromSource(ctx, `/asset/image/frame/frame-effect-${foil}.png`, 0, 580);\r\n                }\r\n            };\r\n        }\r\n    }, [active, foil, frame, frameCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = specialFrameCanvas.current?.getContext('2d');\r\n\r\n            drawingPipeline.current.specialFrame = async () => {\r\n                clearCanvas(ctx);\r\n                const hasFoil = foil !== 'normal';\r\n\r\n                const cardType = getCardFrame(frame);\r\n                if (isPendulum && !isLink) {\r\n                    if (!isXyz) await drawFromSource(ctx, `/asset/image/pendulum/overlay-pendulum-${cardType}.png`, 0, 0);\r\n                    await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}.png`, 0, 0);\r\n                    if (hasFoil) await drawFromSource(ctx, `/asset/image/frame/frame-pendulum-${pendulumSize}-${foil}.png`, 0, 0);\r\n                }\r\n\r\n                const foiledBorder = !hasFoil ? '/asset/image/frame/frame-border.png' : `/asset/image/frame/frame-border-${foil}.png`;\r\n                await drawFromSource(ctx, foiledBorder, 0, 0);\r\n                if (!isPendulum && isLink) {\r\n                    if (hasFoil) await drawFromSource(ctx, `./asset/image/link/link-overlay-${foil}.png`, 0, 110);\r\n                    else await drawFromSource(ctx, '/asset/image/link/link-overlay.png', 66, 146);\r\n                    if (hasFoil) await drawFromSource(ctx, `/asset/image/link/link-overlay-arrow-${foil}.png`, 0, 110);\r\n\r\n                    await Promise.all(linkMap\r\n                        .map(entry => {\r\n                            const { left, top, height, width } = arrowPositionList[parseInt(entry) - 1];\r\n                            if (hasFoil) return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}-${foil}.png`, left, top, width, height);\r\n                            else return drawFromSourceWithSize(ctx, `/asset/image/link/link-arrow-${entry}.png`, left, top, width, height);\r\n                        })\r\n                    );\r\n                    if (ctx) {\r\n                        ctx.textAlign = 'right';\r\n                        ctx.scale(1.2, 1);\r\n                        ctx.font = 'bold 24px Yugioh Rush Duel Numbers V4';\r\n                        ctx.fillText(`${linkMap.length}`, 505 / 1.2, 746);\r\n                        ctx.scale(1 / 1.2, 1);\r\n                        ctx.textAlign = 'left';\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }, [active, foil, frame, isLink, isPendulum, isXyz, linkMap, pendulumSize, specialFrameCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = attributeCanvas.current?.getContext('2d');\r\n            drawingPipeline.current.attribute = () => {\r\n                ctx?.clearRect(0, 0, 549, 100);\r\n\r\n                return drawFromSource(ctx, `/asset/image/attribute/attr-${attribute.toLowerCase()}.png`, 458, 37);\r\n            };\r\n        }\r\n    }, [active, attribute, attributeCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = subFamilyCanvas.current?.getContext('2d');\r\n            drawingPipeline.current.star = () => {\r\n                ctx?.clearRect(0, 0, 549, 150);\r\n                if (isMonster && !isLink) {\r\n                    let counter = Math.min(13, star ?? 0);\r\n                    let type = isXyz ? 'rank' : 'level';\r\n                    let offset = 0 - (34 + 2.3636);\r\n                    let totalWidth = 34 * counter + 2.3636 * (counter - 1);\r\n                    let edge = counter <= 12\r\n                        ? isXyz\r\n                            ? 57 - 34\r\n                            : 492\r\n                        : isXyz\r\n                            ? (549 - totalWidth) / 2 - 34\r\n                            : (549 - totalWidth) / 2 + totalWidth;\r\n\r\n                    return Promise.all([...Array(counter)]\r\n                        .map(() => {\r\n                            offset += (34 + 2.3636);\r\n                            return drawFromSource(\r\n                                ctx,\r\n                                `/asset/image/sub-family/subfamily-${type}.png`,\r\n                                edge + (34 + offset) * (isXyz ? 1 : -1),\r\n                                99,\r\n                            );\r\n                        })\r\n                    );\r\n                } else if (!isMonster) {\r\n                    const normalizedSubFamily = subFamily.toUpperCase();\r\n                    const hasSTIcon = normalizedSubFamily !== 'NO ICON' && iconList.includes(normalizedSubFamily);\r\n\r\n                    return hasSTIcon\r\n                        ? drawFromSourceWithSize(ctx, `/asset/image/sub-family/subfamily-${normalizedSubFamily.toLowerCase()}.png`,\r\n                            (image) => 491 - image.naturalWidth - 7,\r\n                            103,\r\n                            29, 29)\r\n                        : new Promise(resolve => resolve(true));\r\n                };\r\n                return new Promise(resolve => resolve(true));\r\n            };\r\n        }\r\n    }, [active, isLink, isMonster, isXyz, star, subFamily, subFamilyCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const fontSize = 43;\r\n            const ctx = pendulumScaleCanvas.current?.getContext('2d');\r\n\r\n            ctx?.clearRect(0, 0, 549, 600);\r\n            if (ctx && isPendulum) {\r\n                ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n                ctx.textAlign = 'left';\r\n\r\n                drawScale(ctx, pendulumScaleBlue ?? 0, 57, 532 + fontSize);\r\n                drawScale(ctx, pendulumScaleRed ?? 0, 493, 532 + fontSize);\r\n            }\r\n        }\r\n    }, [isInitializing, pendulumScaleBlue, isPendulum, pendulumScaleRed, active, pendulumScaleCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = nameCanvas.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.clearRect(0, 0, 549, 100);\r\n                ctx.textAlign = 'left';\r\n                const style = nameStyleType === 'auto'\r\n                    ? foil !== 'normal'\r\n                        ? foilStyleMap[foil] ?? defaultTextStyle\r\n                        : { ...defaultTextStyle, fillStyle: (!isMonster || isLink || isXyz) ? '#ffffff' : '#000000' }\r\n                    : nameStyle;\r\n\r\n                drawName(ctx, name, 40.52, 78, 409, style);\r\n            }\r\n        }\r\n    }, [active, foil, isInitializing, isLink, isMonster, isXyz, name, nameCanvas, nameStyle, nameStyleType]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = statCanvas.current?.getContext('2d');\r\n            clearCanvas(ctx);\r\n            if (isMonster) {\r\n                drawAD(ctx, atk, 343.51, 747);\r\n                if (!isLink) {\r\n                    drawAD(ctx, def, 454.93, 747);\r\n                }\r\n            }\r\n        }\r\n    }, [isInitializing, atk, def, isLink, isMonster, active, statCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = setIdCanvas.current?.getContext('2d');\r\n            clearCanvas(ctx);\r\n            if (ctx) {\r\n                if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n                else ctx.fillStyle = '#000';\r\n                ctx.font = '15px stone-serif-regular';\r\n\r\n                if (isPendulum) {\r\n                    fillTextLeftWithSpacing(ctx, setId, -0.1, 45, 746);\r\n                } else if (isLink) {\r\n                    fillTextRightWithSpacing(ctx, setId, -0.1, 450, 590);\r\n                } else fillTextRightWithSpacing(ctx, setId, -0.1, 492, 589);\r\n            }\r\n        }\r\n    }, [active, isInitializing, isLink, isPendulum, isXyz, setIdCanvas, setId]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = passcodeCanvas.current?.getContext('2d');\r\n            clearCanvas(ctx);\r\n            if (ctx) {\r\n                if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n                else ctx.fillStyle = '#000';\r\n                ctx.font = '15px stone-serif-regular';\r\n\r\n                const endOfPasscode = fillTextLeftWithSpacing(ctx, passcode, 0.1, 25, 777);\r\n                if (isFirstEdition) {\r\n                    if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n                    else ctx.fillStyle = '#000';\r\n\r\n                    draw1stEdition(ctx, Math.max(endOfPasscode + 10, 96));\r\n                }\r\n            }\r\n        }\r\n    }, [active, isFirstEdition, isInitializing, isLink, isPendulum, isXyz, passcode, passcodeCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = creatorCanvas.current?.getContext('2d');\r\n            clearCanvas(ctx);\r\n            if (ctx) {\r\n                if (isXyz && !isPendulum) ctx.fillStyle = '#fff';\r\n                else ctx.fillStyle = '#000';\r\n\r\n                drawCreatorText(ctx, creator);\r\n            }\r\n        }\r\n    }, [isInitializing, isLink, isPendulum, isXyz, creator, active, creatorCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = stickerCanvas.current?.getContext('2d');\r\n            drawingPipeline.current.sticker = () => {\r\n                clearCanvas(ctx);\r\n\r\n                if (sticker === 'no-sticker') return Promise.resolve();\r\n                return drawFromSource(ctx, `/asset/image/sticker/sticker-${sticker.toLowerCase()}.png`, 499, 750);\r\n            };\r\n        }\r\n    }, [active, sticker, stickerCanvas]);\r\n\r\n    const drawTypeAbility = useCallback((\r\n        ctx: CanvasRenderingContext2D | null | undefined,\r\n        textSize: 'small' | 'medium' | 'large',\r\n        alignment: 'left' | 'right' = 'left',\r\n    ) => {\r\n        if (ctx) {\r\n            ctx?.clearRect(0, 0, 549, 700);\r\n            const size = typeSizeMap[textSize] ?? typeSizeMap['medium'];\r\n            const { left } = size;\r\n            const normalizedSubFamily = subFamily.toUpperCase();\r\n            const instructionList = [\r\n                drawBracketTemplate(ctx, '[', size, alignment),\r\n                drawBracketSpaceTemplate(ctx, ' ', size, alignment),\r\n                ...typeAbility.map((entry, index) => drawTextTemplate(\r\n                    ctx,\r\n                    entry,\r\n                    index === typeAbility.length - 1,\r\n                    size, alignment)),\r\n                textSize === 'large'\r\n                    ? normalizedSubFamily === 'NO ICON'\r\n                        ? (edge: number) => edge + 4 * (alignment === 'left' ? 1 : -1)\r\n                        : drawIconSpaceTemplate(ctx, size, alignment)\r\n                    : (edge: number) => edge + 2,\r\n                drawBracketTemplate(ctx, ']', size, alignment),\r\n            ];\r\n            const totalLeft = (alignment === 'left'\r\n                ? instructionList\r\n                : instructionList.reverse()).reduce((prev, curr) => {\r\n                return curr(prev);\r\n            }, left);\r\n            ctx.textAlign = 'left';\r\n            if (totalLeft > 508 && textSize === 'medium') drawTypeAbility(ctx, 'small', alignment);\r\n        }\r\n    }, [subFamily, typeAbility]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = effectCanvas.current?.getContext('2d');\r\n            const typeCtx = typeCanvas.current?.getContext('2d');\r\n            ctx?.clearRect(0, 0, 549, 750);\r\n            if (isMonster) {\r\n                const effectIndexSize = drawEffect(ctx, effect, false, isNormal, undefined, undefined, effectStyle?.condenseTolerant);\r\n                drawTypeAbility(typeCtx, effectIndexSize === 0\r\n                    ? 'medium'\r\n                    : 'small');\r\n            } else {\r\n                drawEffect(\r\n                    ctx,\r\n                    effect,\r\n                    false,\r\n                    false,\r\n                    stFontList,\r\n                    stSizeList,\r\n                    effectStyle?.condenseTolerant,\r\n                );\r\n                drawTypeAbility(typeCtx, 'large', 'right');\r\n            }\r\n        }\r\n    }, [isInitializing, drawTypeAbility, effect, isMonster, isNormal, effectStyle?.condenseTolerant, active, effectCanvas, typeCanvas]);\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            const ctx = pendulumEffectCanvas.current?.getContext('2d');\r\n            ctx?.clearRect(0, 0, 549, 600);\r\n            if (isMonster && isPendulum) {\r\n                drawEffect(\r\n                    ctx,\r\n                    pendulumEffect,\r\n                    true,\r\n                    false,\r\n                    pendulumFontList,\r\n                    pendulumSizeList,\r\n                    effectStyle?.condenseTolerant,\r\n                );\r\n            }\r\n        }\r\n    }, [active, effectStyle?.condenseTolerant, isInitializing, isMonster, isPendulum, pendulumEffectCanvas, pendulumEffect]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n    };\r\n};","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport './app.scss';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    CanvasConst,\r\n    Card,\r\n    defaultCard,\r\n} from './model';\r\nimport {\r\n    cardDataCondenser,\r\n    insertUrlParam,\r\n    rebuildCardData,\r\n} from './util';\r\nimport { AppHeader, CardInputPanel, CardInputPanelRef, taintedCanvasWarning } from './page';\r\nimport WebFont from 'webfontloader';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { useMasterSeriDrawer } from './service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n) => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, CanvasWidth, CanvasHeight);\r\n    };\r\n};\r\n\r\nfunction App() {\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [currentCard, setCard] = useState<Card>(defaultCard);\r\n    const [sourceType, setSourceType] = useState<'internal' | 'external'>('external');\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const artCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const specialFrameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const subFamilyCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const attributeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passcodeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        previewCanvas: previewCanvasRef,\r\n        drawCanvas: drawCanvasRef,\r\n        frameCanvas: frameCanvasRef,\r\n        artCanvas: artCanvasRef,\r\n        specialFrameCanvas: specialFrameCanvasRef,\r\n        subFamilyCanvas: subFamilyCanvasRef,\r\n        pendulumScaleCanvas: pendulumScaleCanvasRef,\r\n        pendulumEffectCanvas: pendulumEffectCanvasRef,\r\n        typeCanvas: typeCanvasRef,\r\n        effectCanvas: effectCanvasRef,\r\n        nameCanvas: nameCanvasRef,\r\n        attributeCanvas: attributeCanvasRef,\r\n        statCanvas: statCanvasRef,\r\n        setIdCanvas: setIdCanvasRef,\r\n        passcodeCanvas: passcodeCanvasRef,\r\n        creatorCanvas: creatorCanvasRef,\r\n        stickerCanvas: stickerCanvasRef,\r\n    });\r\n\r\n    const {\r\n        name,\r\n        pictureCrop,\r\n        isPendulum,\r\n    } = currentCard;\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n    const { drawingPipeline } = useMasterSeriDrawer(true, canvasMap, currentCard, {\r\n        imageChangeCount,\r\n        isInitializing,\r\n    });\r\n\r\n    // const drawRefrenceImage = useCallback(async (ctx: CanvasRenderingContext2D | null | undefined) => {\r\n    //     let leftOffset = -5;\r\n    //     let topOffset = 150;\r\n    // let leftOffset = -4;\r\n    // let topOffset = 300;\r\n    // let leftOffset = -300;\r\n    // let topOffset = -7;\r\n    // let leftOffset = -1;\r\n    // let topOffset = 100;\r\n    // await drawFromSourceWithSize(ctx, '/asset/image/MP19-EN-C-1E.png', -leftOffset, -topOffset, 541, 800 * (541 / 549));\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const ctx = drawCanvasRef.current?.getContext('2d');\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n        \r\n        // let fontLoaded = false;\r\n        WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'stone-serif-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'MatrixBook',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixRegularSmallCaps',\r\n                    'Yugioh Rush Duel Numbers V4',\r\n                ],\r\n                urls: ['asset/font.css']\r\n            },\r\n            active: () => {\r\n                try {\r\n                    const localCardVersion = window.localStorage.getItem('card-version');\r\n                    const localCardData = window.localStorage.getItem('card-data');\r\n\r\n                    const urlParam = (new URLSearchParams(window.location.search)).get('data');\r\n                    if (urlParam) {\r\n                        setCard(rebuildCardData(urlParam, true) as any);\r\n                    } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n                        setCard(rebuildCardData(localCardData) as any);\r\n                    }\r\n                } catch (e) {\r\n                    setCard(defaultCard);\r\n                }\r\n                setInitializing(false);\r\n            },\r\n            inactive: () => {\r\n                setError('Font could not be loaded');\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    const pendingSave = useRef(false);\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        queuedPipeline: false,\r\n    });\r\n\r\n    const download = useCallback(() => {\r\n        const canvasRef = drawCanvasRef.current;\r\n        if (canvasRef) try {\r\n            var link = document.createElement('a');\r\n            link.download = `${name}.png`;\r\n            link.href = canvasRef.toDataURL('image/png');\r\n            link.click();\r\n        } catch (e) {\r\n            setTainted(true);\r\n            alert('Could not save card, please manually save it by right click the card → Choose \"Save image as...\"');\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n    }, [name]);\r\n    const [isTainted, setTainted] = useState(false);\r\n    const onSave = () => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        if (exportRef.current.queuedPipeline === false) {\r\n            download();\r\n        } else pendingSave.current = true;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isInitializing === false) {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n\r\n            /**\r\n             * Run export pipeline\r\n             * - While it is running, every effect just mark pipeline as queued, then wait the current pipeline\r\n             * - If the pipeline is complete and there is no effect, run another pipeline and remove the queue\r\n             */\r\n            (async () => {\r\n                const canvasRef = drawCanvasRef.current;\r\n                if (canvasRef) {\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n                    document.getElementById('save-button-ready')?.setAttribute('style', 'display: none');\r\n\r\n                    exportRef.current.queuedPipeline = true;\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({ isPendulum });\r\n                        exportRef.current.queuedPipeline = false;\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            const condensedCard = cardDataCondenser(currentCard);\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-ready')?.setAttribute('style', 'display: block');\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    const onExport = useRef(async (exportProps: {\r\n        isPendulum: boolean,\r\n    }) => {\r\n        const {\r\n            isPendulum = false\r\n        } = exportProps;\r\n        const canvasRef = drawCanvasRef.current;\r\n        const exportCtx = canvasRef?.getContext('2d');\r\n        const generateLayer = (canvasLayer: React.RefObject<HTMLCanvasElement>, ctx: CanvasRenderingContext2D | null | undefined) => {\r\n            return new Promise<boolean>(resolve => {\r\n                if (canvasLayer.current && ctx) {\r\n                    const layerData = canvasLayer.current.toDataURL('image/png');\r\n\r\n                    if (layerData) {\r\n                        var layer = new Image();\r\n                        layer.src = layerData;\r\n                        layer.onload = () => {\r\n                            ctx.drawImage(layer, 0, 0);\r\n                            resolve(true);\r\n                        };\r\n                        layer.onerror = () => resolve(false);\r\n                    } else resolve(false);\r\n                } else resolve(false);\r\n            });\r\n        };\r\n\r\n        if (canvasRef && exportCtx) {\r\n            exportCtx.clearRect(0, 0, 549, 800);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .map(callDraw => {\r\n                    return callDraw();\r\n                }));\r\n            await generateLayer(frameCanvasRef, exportCtx);\r\n            const previewCtx = previewCanvasRef.current;\r\n            if (previewCtx && exportCtx) {\r\n                if (isPendulum) {\r\n                    exportCtx.drawImage(previewCtx, 38, 144, 474, 470);\r\n                } else {\r\n                    exportCtx.drawImage(previewCtx, 67, 147, 416, 416);\r\n                }\r\n            }\r\n            await generateLayer(specialFrameCanvasRef, exportCtx);\r\n            await Promise.all([\r\n                nameCanvasRef,\r\n                attributeCanvasRef,\r\n                subFamilyCanvasRef,\r\n                pendulumScaleCanvasRef,\r\n                pendulumEffectCanvasRef,\r\n                typeCanvasRef,\r\n                effectCanvasRef,\r\n                statCanvasRef,\r\n                setIdCanvasRef,\r\n                passcodeCanvasRef,\r\n                creatorCanvasRef,\r\n                stickerCanvasRef,\r\n            ].map(currentlayer => generateLayer(currentlayer, exportCtx)));\r\n            // await drawRefrenceImage(exportCtx);\r\n        }\r\n    }).current;\r\n\r\n    return (\r\n        <div id=\"app\"\r\n            onDrop={() => {}}\r\n            style={{\r\n                backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n            }}\r\n        >\r\n            <div className={'app-container'}>\r\n                {isInitializing && <div className=\"full-loading\">\r\n                    {error.length > 0 ? <span style={{ color: '#e04040' }}>\r\n                        {error}\r\n                    </span> : 'Loading fonts and scripts...'}\r\n                </div>}\r\n                {/* <div className=\"card-filter-panel\">\r\n                </div> */}\r\n                <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                    <div className=\"export-button\">\r\n                        {!isTainted\r\n                            ? <>Canvas is safe<br />\r\n                                <button id=\"save-button-waiting\" disabled>Generating...</button>\r\n                                <button id=\"save-button-ready\" onClick={() => onSave()}>Save</button></>\r\n                            : <><div>Canvas is tainted {taintedCanvasWarning}</div>\r\n                        Manually save by right click the card → \"Save image as...\"</>}\r\n                        <div className=\"imexport\">\r\n                            <button onClick={() => {\r\n                                if (sourceType === 'internal') window.alert('Cannot export card data if you use offline image');\r\n\r\n                                window.prompt('Save card data for later use', `${cardDataCondenser(currentCard)}`);\r\n                            }}>Export Card Data</button>\r\n                            <button onClick={() => {\r\n                                const cardData = window.prompt('Paste your card data');\r\n\r\n                                if (cardData) {\r\n                                    const decodedCard = rebuildCardData(cardData, true) as Card;\r\n                                    setCard(decodedCard);\r\n                                    cardInputRef.current?.forceCardData(decodedCard);\r\n                                }\r\n                            }}>Import Card Data</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-canvas-group\">\r\n                        <canvas id=\"export-canvas\" ref={drawCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <div id=\"export-canvas-guard\">\r\n                            <div className=\"canvas-guard-alert\">Generating...</div>\r\n                            <LoadingOutlined />\r\n                        </div>\r\n                        <canvas id=\"frameCanvas\" ref={frameCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas id=\"artCanvas\" ref={artCanvasRef} width={CanvasWidth} height={650} />\r\n                        <canvas id=\"specialFrameCanvas\" ref={specialFrameCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={100} />\r\n                        <canvas id=\"attributeCanvas\" ref={attributeCanvasRef} width={CanvasWidth} height={100} />\r\n                        <canvas id=\"subFamilyCanvas\" ref={subFamilyCanvasRef} width={CanvasWidth} height={150} />\r\n                        <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={600} />\r\n                        <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={600} />\r\n                        <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={700} />\r\n                        <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={750} />\r\n                        <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas id=\"passcode\" ref={passcodeCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas id=\"creator\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas id=\"sticker\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                        <canvas className=\"crop-canvas\" ref={previewCanvasRef} />\r\n                    </div>\r\n                </div>\r\n                {isInitializing === false && <CardInputPanel\r\n                    ref={cardInputRef}\r\n                    receivingCanvasRef={previewCanvasRef.current}\r\n                    currentCard={currentCard}\r\n                    onCardChange={setCard}\r\n                    defaultCropInfo={pictureCrop}\r\n                    onImageChange={(cropInfo, sourceType) => {\r\n                        setImageChangeCount(cnt => cnt + 1);\r\n                        setSourceType(sourceType);\r\n                        if (cropInfo) setCard(curr => ({\r\n                            ...curr,\r\n                            pictureCrop: cropInfo,\r\n                        }));\r\n                    }}\r\n                    onTainted={() => setTainted(true)}\r\n                >\r\n                    <AppHeader /><br />\r\n                </CardInputPanel>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}